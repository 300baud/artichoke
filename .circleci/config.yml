version: 2
jobs:
  rust:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - restore_cache:
          key: project-cache
      - run:
          name: Install Nightly Toolchain
          command: |
            rustup toolchain install nightly
            rustc --version --verbose
            cargo --version --verbose
      - run:
          name: Build Workspace
          command: |
            cargo build
            cargo build --release
      - run:
          name: Test
          command: cargo test --all-features
      - run:
          name: Check Formatting
          command: |
            rustup component add rustfmt
            rustfmt --version
            cargo fmt -- --check --color=auto
      - run:
          name: Lint With Clippy
          command: |
            rustup component add clippy
            cargo clippy --all-targets --all-features
      - save_cache:
          key: project-cache
          paths:
            - "~/.cargo"
            - "./target"
  c:
    docker:
      - image: silkeh/clang:latest
    steps:
      - checkout
      - run:
          name: clang-format
          command: |
            SOURCES="$(find . -type f \( -name '*.h' -or -name '*.c' \) -and -not -path '*vendor*' -and -not -path '*target*')"
            for SOURCE in $SOURCES
            do
              clang-format -output-replacements-xml "$SOURCE" | grep -q offset
              if [[ $? != 0  ]]; then
                echo "Source file '$SOURCE' contains formatting issues."
                echo "Please use clang-format tool to resolve found issues."
                exit 1
              fi
            done
  ruby:
      docker:
        -image: circleci/ruby:2.6
      steps:
        - checkout
        - run:
            name: rubocop
            command: |
              cd foolsgold/ruby
              bundle install
              bundle exec rubocop
workflows:
  version: 2
  build_test_lint:
    jobs:
      - rust
      - c
      - ruby
