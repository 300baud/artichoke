var searchIndex = JSON.parse('{\
"aho_corasick":{"doc":"A library for finding occurrences of many patterns at…","i":[[0,"packed","aho_corasick","A lower level API for packed multiple substring search,…",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a…",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed…",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of…",null,null],[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an…",null,null],[13,"Standard","","Use standard match semantics, which support overlapping…",1,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",1,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",1,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an…",null,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",2,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",3,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",2,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",4,null],[12,"requested_max","","The maximum ID required by premultiplication.",4,null],[8,"StateID","aho_corasick","A trait describing the representation of an automaton\'s…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation\'s…",5,[[]]],[10,"to_usize","","Convert this implementation\'s representation to a `usize`.",5,[[]]],[10,"max_id","","Return the maximum state identifier supported by this…",5,[[]]],[3,"Match","","A representation of a match reported by an Aho-Corasick…",null,null],[11,"pattern","","Returns the identifier of the pattern that matched.",6,[[]]],[11,"start","","The starting position of the match.",6,[[]]],[11,"end","","The ending position of the match.",6,[[]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","aho_corasick::packed","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","aho_corasick","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next","","",8,[[],[["option",4],["match",3]]]],[11,"next","","",9,[[],[["option",4],["match",3]]]],[11,"next","","",10,[[],[["result",6],["option",4]]]],[11,"next","aho_corasick::packed","",16,[[],[["option",4],["match",3]]]],[11,"clone","aho_corasick","",7,[[],["ahocorasick",3]]],[11,"clone","","",11,[[],["ahocorasickbuilder",3]]],[11,"clone","","",1,[[],["matchkind",4]]],[11,"clone","","",12,[[],["error",3]]],[11,"clone","","",2,[[],["errorkind",4]]],[11,"clone","aho_corasick::packed","",0,[[],["matchkind",4]]],[11,"clone","","",13,[[],["config",3]]],[11,"clone","","",14,[[],["builder",3]]],[11,"clone","","",15,[[],["searcher",3]]],[11,"clone","aho_corasick","",6,[[],["match",3]]],[11,"default","","",11,[[],["ahocorasickbuilder",3]]],[11,"default","","",1,[[],["matchkind",4]]],[11,"default","aho_corasick::packed","",0,[[],["matchkind",4]]],[11,"default","","",13,[[],["config",3]]],[11,"default","","",14,[[],["builder",3]]],[11,"eq","aho_corasick","",1,[[["matchkind",4]]]],[11,"eq","aho_corasick::packed","",0,[[["matchkind",4]]]],[11,"eq","aho_corasick","",6,[[["match",3]]]],[11,"ne","","",6,[[["match",3]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick::packed","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","","",6,[[]]],[11,"description","","",12,[[]]],[11,"new","","Create a new Aho-Corasick automaton using the default…",7,[[],["ahocorasick",3]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",7,[[],["ahocorasick",3]]],[11,"is_match","","Returns true if and only if this automaton matches the…",7,[[["asref",8]]]],[11,"earliest_find","","Returns the location of the first detected match in…",7,[[["asref",8]],[["option",4],["match",3]]]],[11,"find","","Returns the location of the first match according to the…",7,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",7,[[],["finditer",3]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",7,[[],["findoverlappingiter",3]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",7,[[],["string",3]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",7,[[],["vec",3]]],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",7,[[["string",3]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",7,[[["vec",3]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",7,[[["read",8]],[["streamfinditer",3],["read",8]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",7,[[],["result",6]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",7,[[],["result",6]]],[11,"match_kind","","Returns the match kind used by this automaton.",7,[[],["matchkind",4]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",7,[[]]],[11,"pattern_count","","Return the total number of patterns matched by this…",7,[[]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",7,[[]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",7,[[]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",7,[[]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",11,[[],["ahocorasickbuilder",3]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",11,[[],["ahocorasick",3]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",11,[[],[["result",4],["ahocorasick",3],["error",3]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",11,[[],["ahocorasickbuilder",3]]],[11,"match_kind","","Set the desired match semantics.",11,[[["matchkind",4]],["ahocorasickbuilder",3]]],[11,"anchored","","Enable anchored mode, which requires all matches to start…",11,[[],["ahocorasickbuilder",3]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",11,[[],["ahocorasickbuilder",3]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",11,[[],["ahocorasickbuilder",3]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",11,[[],["ahocorasickbuilder",3]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",11,[[],["ahocorasickbuilder",3]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",11,[[],["ahocorasickbuilder",3]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",11,[[],["ahocorasickbuilder",3]]],[11,"kind","","Return the kind of this error.",12,[[],["errorkind",4]]],[11,"new","aho_corasick::packed","Create a new default configuration. A default…",13,[[],["config",3]]],[11,"builder","","Create a packed builder from this configuration. The…",13,[[],["builder",3]]],[11,"match_kind","","Set the match semantics for this configuration.",13,[[["matchkind",4]],["config",3]]],[11,"new","","Create a new builder for constructing a multi-pattern…",14,[[],["builder",3]]],[11,"build","","Build a searcher from the patterns added to this builder…",14,[[],[["option",4],["searcher",3]]]],[11,"add","","Add the given pattern to this set to match.",14,[[["asref",8]],["builder",3]]],[11,"extend","","Add the given iterator of patterns to this set to match.",14,[[],["builder",3]]],[11,"new","","A convenience function for constructing a searcher from an…",15,[[],[["option",4],["searcher",3]]]],[11,"find","","Return the first occurrence of any of the patterns in this…",15,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_at","","Return the first occurrence of any of the patterns in this…",15,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the…",15,[[],["finditer",3]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",15,[[],["matchkind",4]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required…",15,[[]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",15,[[]]]],"p":[[4,"MatchKind"],[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[8,"StateID"],[3,"Match"],[3,"AhoCorasick"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"AhoCorasickBuilder"],[3,"Error"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[3,"FindIter"]]},\
"airb":{"doc":"`airb` is the Artichoke implementation of `irb` and is an…","i":[[5,"main","airb","",null,[[]]]],"p":[]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",0,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",0,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",0,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",0,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",0,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",0,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",0,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",0,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",0,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",0,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style\'s foreground colour, if it has one.",1,null],[12,"background","","The style\'s background colour, if it has one.",1,null],[12,"is_bold","","Whether this style is bold.",1,null],[12,"is_dimmed","","Whether this style is dimmed.",1,null],[12,"is_italic","","Whether this style is italic.",1,null],[12,"is_underline","","Whether this style is underlined.",1,null],[12,"is_blink","","Whether this style is blinking.",1,null],[12,"is_reverse","","Whether this style has reverse colours.",1,null],[12,"is_hidden","","Whether this style is hidden.",1,null],[12,"is_strikethrough","","Whether this style is struckthrough.",1,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",0,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",0,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",0,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",0,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",0,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",0,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",0,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",0,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",0,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",2,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings",6]]],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings",6]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",1,[[["colour",4]],["style",3]]],[11,"from","","",6,[[],["ansigenericstring",3]]],[11,"clone","","",3,[[],["prefix",3]]],[11,"clone","","",4,[[],["infix",3]]],[11,"clone","","",5,[[],["suffix",3]]],[11,"clone","","",1,[[],["style",3]]],[11,"clone","","",0,[[],["colour",4]]],[11,"clone","","",6,[[],["ansigenericstring",3]]],[11,"default","","Returns a style with no properties set. Formatting text…",1,[[],["style",3]]],[11,"eq","","",1,[[["style",3]]]],[11,"ne","","",1,[[["style",3]]]],[11,"eq","","",0,[[["colour",4]]]],[11,"ne","","",0,[[["colour",4]]]],[11,"eq","","",6,[[["ansigenericstring",3]]]],[11,"ne","","",6,[[["ansigenericstring",3]]]],[11,"deref","","",6,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"prefix","","The prefix for this style.",1,[[],["prefix",3]]],[11,"infix","","The infix between this style and another.",1,[[["style",3]],["infix",3]]],[11,"suffix","","The suffix for this style.",1,[[],["suffix",3]]],[11,"prefix","","The prefix for this colour.",0,[[],["prefix",3]]],[11,"infix","","The infix between this colour and another.",0,[[["colour",4]],["infix",3]]],[11,"suffix","","The suffix for this colour.",0,[[],["suffix",3]]],[11,"new","","Creates a new Style with no differences.",1,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",1,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",1,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",1,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",1,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set.",1,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",1,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",1,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",1,[[],["style",3]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",1,[[["colour",4]],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",1,[[["colour",4]],["style",3]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",1,[[]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",0,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",0,[[],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour",4]],["style",3]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",1,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",6,[[],["result",6]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",2,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[],["result",6]]]],"p":[[4,"Colour"],[3,"Style"],[3,"ANSIGenericStrings"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"artichoke":{"doc":"Artichoke Ruby","i":[[3,"Artichoke","artichoke","Interpreter instance.",null,null],[12,"mrb","","Underlying mruby interpreter.",0,null],[12,"state","","Interpreter state.",0,null],[3,"Error","","",null,null],[0,"backtrace","","Format Ruby `Exception` backtraces.",null,null],[5,"format_repl_trace_into","artichoke::backtrace","Format an `Exception` backtrace into an [`io::Write`]…",null,[[["artichoke",3]],[["result",4],["box",3]]]],[5,"format_cli_trace_into","","Format an `Exception` backtrace into an [`io::Write`]…",null,[[["artichoke",3]],[["result",4],["box",3]]]],[0,"parser","artichoke","Detect if Ruby code parses successfully.",null,null],[4,"State","artichoke::parser","State shows whether artichoke can parse some code or why…",null,null],[13,"ParseError","","Internal parser error. This is a fatal error.",1,null],[13,"CodeTooLong","","Code must be fewer than [`isize::MAX`] bytes.",1,null],[13,"UnexpectedEnd","","The code has too many end statements.",1,null],[13,"UnexpectedProgramEnd","","The code has unclosed blocks.",1,null],[13,"UnexpectedRegexpBegin","","The current expression is an unterminated `Regexp`.",1,null],[13,"UnterminatedBlock","","The current expression is an unterminated block.",1,null],[13,"UnterminatedHeredoc","","The current expression is an unterminated heredoc.",1,null],[13,"UnterminatedString","","The current expression is an unterminated `String`.",1,null],[13,"Valid","","Code is valid and fit to eval.",1,null],[11,"new","","Construct a new, default `State`.",1,[[]]],[11,"is_code_block_open","","Whether this variant indicates a code block is open.",1,[[]]],[11,"is_recoverable_error","","Whether this variant is a recoverable error.",1,[[]]],[11,"is_fatal","","Whether this variant is a fatal parse error.",1,[[]]],[3,"Parser","","Wraps a [`artichoke_backend`] mruby parser.",null,null],[11,"new","","Create a new parser from an interpreter instance.",2,[[["artichoke",3]],["option",4]]],[11,"parse","","Parse the code buffer to determine if the code is a…",2,[[],["state",4]]],[0,"repl","artichoke","A REPL (read–eval–print–loop) for an Artichoke interpreter.",null,null],[3,"ParserAllocError","artichoke::repl","Failed to initialize parser during REPL boot.",null,null],[11,"new","","Constructs a new, default `ParserAllocError`.",3,[[]]],[3,"ParserLineCountError","","Parser processed too many lines of input.",null,null],[11,"new","","Constructs a new, default `ParserLineCountError`.",4,[[]]],[3,"ParserInternalError","","Internal fatal parser error.",null,null],[11,"new","","Constructs a new, default `ParserInternalError`.",5,[[]]],[3,"PromptConfig","","Configuration for the REPL readline prompt.",null,null],[12,"simple","","Basic prompt for start of a new expression.",6,null],[12,"continued","","Altered prompt when an expression is not terminated.",6,null],[12,"result_prefix","","Prefix for the result of `$expression.inspect`. A newline…",6,null],[5,"run","","Run a REPL for the mruby interpreter exposed by the…",null,[[["promptconfig",3],["option",4]],[["result",4],["box",3]]]],[0,"ruby","artichoke","Artichoke CLI entrypoint.",null,null],[5,"entrypoint","artichoke::ruby","Main entrypoint for Artichoke\'s version of the `ruby` CLI.",null,[[],[["box",3],["result",4],["result",4]]]],[0,"prelude","artichoke","A \\\"prelude\\\" for users of the `artichoke-backend` crate.",null,null],[0,"error","artichoke::prelude","",null,null],[3,"Error","artichoke::prelude::error","",null,null],[5,"raise","","Raise implementation for `RubyException` boxed trait…",null,[[["guard",3]]]],[8,"RubyException","","Polymorphic exception type that corresponds to Ruby\'s…",null,null],[10,"message","","Message of the `Exception`.",7,[[],["cow",4]]],[10,"name","","Class name of the `Exception`.",7,[[],["cow",4]]],[10,"vm_backtrace","","Optional backtrace specified by a `Vec` of frames.",7,[[["artichoke",3]],[["vec",3],["option",4]]]],[10,"as_mrb_value","","Return a raiseable [`sys::mrb_value`].",7,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[3,"Error","artichoke::prelude","",null,null],[8,"RubyException","","Polymorphic exception type that corresponds to Ruby\'s…",null,null],[10,"message","","Message of the `Exception`.",7,[[],["cow",4]]],[10,"name","","Class name of the `Exception`.",7,[[],["cow",4]]],[10,"vm_backtrace","","Optional backtrace specified by a `Vec` of frames.",7,[[["artichoke",3]],[["vec",3],["option",4]]]],[10,"as_mrb_value","","Return a raiseable [`sys::mrb_value`].",7,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[8,"MrbGarbageCollection","","Garbage collection primitives for an mruby interpreter.",null,null],[10,"create_arena_savepoint","","Create a savepoint in the GC arena.",8,[[],[["arenaindex",3],["result",4],["arenasavepointerror",3]]]],[10,"live_object_count","","Retrieve the number of live objects on the interpreter heap.",8,[[]]],[10,"mark_value","","Mark a [`Value`] as reachable in the mruby garbage…",8,[[["value",3]]]],[10,"incremental_gc","","Perform an incremental garbage collection.",8,[[]]],[10,"full_gc","","Perform a full garbage collection.",8,[[]]],[10,"enable_gc","","Enable garbage collection.",8,[[],["state",4]]],[10,"disable_gc","","Disable garbage collection.",8,[[],["state",4]]],[3,"ReleaseMetadata","","",null,null],[12,"copyright","","",9,null],[12,"description","","",9,null],[12,"engine","","",9,null],[12,"engine_version","","",9,null],[12,"patchlevel","","",9,null],[12,"platform","","",9,null],[12,"release_date","","",9,null],[12,"revision","","",9,null],[12,"ruby_version","","",9,null],[12,"compiler_version","","",9,null],[3,"Artichoke","","Interpreter instance.",null,null],[12,"mrb","","Underlying mruby interpreter.",0,null],[12,"state","","Interpreter state.",0,null],[3,"Guard","","Interpreter guard that prepares an [`Artichoke`] to…",null,null],[8,"CoerceToNumeric","","Coerce Ruby values to native numerics (floats and integers).",null,null],[16,"Value","","Concrete type of boxed Ruby value as inputs to coerce…",10,null],[16,"Float","","Concrete float type to coerce values into, e.g. [`f64`].",10,null],[16,"Error","","Concrete error type for errors encountered when coercing…",10,null],[10,"coerce_to_float","","Coerce the given Ruby value to a `Float`.",10,[[],["result",4]]],[8,"DefineConstant","","Deifne constants on an interprter.",null,null],[16,"Value","","Concrete type for Ruby values.",11,null],[16,"Error","","Concrete error type for fallible operations.",11,null],[10,"define_global_constant","","Define a global constant.",11,[[],["result",4]]],[10,"define_class_constant","","Define a class constant.",11,[[],["result",4]]],[10,"define_module_constant","","Define a module constant.",11,[[],["result",4]]],[8,"Convert","","Infallible conversion between two types.",null,null],[10,"convert","","Performs the infallible conversion.",12,[[]]],[8,"ConvertMut","","Mutable infallible conversion between two types.",null,null],[10,"convert_mut","","Performs the infallible conversion.",13,[[]]],[8,"TryConvert","","Fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",14,null],[10,"try_convert","","Performs the fallible conversion.",14,[[],["result",4]]],[8,"TryConvertMut","","Mutable fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",15,null],[10,"try_convert_mut","","Performs the fallible conversion.",15,[[],["result",4]]],[8,"Debug","","Debugging and `Exception` message support.",null,null],[16,"Value","","Concrete type for return values from eval.",16,null],[10,"inspect_type_name_for_value","","Return a name for thie given value\'s type suitable for…",16,[[]]],[8,"Eval","","Execute code and retrieve its result.",null,null],[16,"Value","","Concrete type for return values from eval.",17,null],[16,"Error","","Concrete error type for eval functions.",17,null],[10,"eval","","Eval code on the Artichoke interpreter using the current…",17,[[],["result",4]]],[10,"eval_os_str","","Eval code on the Artichoke interpreter using the current…",17,[[["osstr",3]],["result",4]]],[10,"eval_file","","Eval code on the Artichoke interpreter using a new file…",17,[[["path",3]],["result",4]]],[8,"File","","Rust extension hook that can be required.",null,null],[16,"Artichoke","","Concrete type for interpreter.",18,null],[16,"Error","","Concrete error type for eval functions.",18,null],[10,"require","","Called when the filename mapped to this type is required…",18,[[],["result",4]]],[8,"Globals","","Get and set global variables on an interpreter.",null,null],[16,"Value","","Concrete value type for global variables.",19,null],[16,"Error","","Concrete error type for failures manipulating global…",19,null],[10,"set_global_variable","","Set global variable pointed to by `name` to the given Ruby…",19,[[],["result",4]]],[10,"unset_global_variable","","Unset global variable pointed to by `name`.",19,[[],["result",4]]],[10,"get_global_variable","","Get the Ruby value stored in the global variable pointed…",19,[[],[["result",4],["option",4]]]],[8,"Intern","","Store and retrieve bytestrings that have the same lifetime…",null,null],[16,"Symbol","","Concrete type for symbol identifiers.",20,null],[16,"Error","","Concrete type for errors returned while interning symbols.",20,null],[18,"SYMBOL_RANGE_START","","The initial `Symbol` index returned by the interner.",20,null],[10,"intern_bytes","","Store an immutable bytestring for the life of the…",20,[[],["result",4]]],[10,"check_interned_bytes","","Check if a bytestring is already interned and return its…",20,[[],[["option",4],["result",4]]]],[11,"intern_string","","Store an immutable string for the life of the interpreter.",20,[[],["result",4]]],[11,"check_interned_string","","Check if a string is already interned and return its…",20,[[],[["option",4],["result",4]]]],[10,"lookup_symbol","","Retrieve the original byte content of an interned…",20,[[],[["option",4],["result",4]]]],[10,"symbol_count","","Retrieve the number of unique strings interned.",20,[[]]],[8,"Io","","Make I/O external to the interpreter.",null,null],[16,"Error","","Concrete error type for errors encountered when reading…",21,null],[10,"print","","Writes the given bytes to the interpreter stdout stream.",21,[[],["result",4]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",21,[[],["result",4]]],[8,"LoadSources","","Load Ruby sources and Rust extensions into an interpreter.",null,null],[16,"Artichoke","","Concrete type for interpreter.",22,null],[16,"Error","","Concrete type for errors returned from filesystem IO.",22,null],[16,"Exception","","Concrete type for errors returned by `File::require`.",22,null],[10,"def_file_for_type","","Add a Rust extension hook to the virtual filesystem. A…",22,[[],["result",4]]],[10,"def_rb_source_file","","Add a Ruby source to the virtual filesystem.",22,[[],["result",4]]],[10,"source_is_file","","Test for a source file at a path.",22,[[],["result",4]]],[10,"load_source","","Load source located at the given path.",22,[[],["result",4]]],[10,"require_source","","Require source located at the given path.",22,[[],["result",4]]],[10,"read_source_file_contents","","Retrieve file contents for a source file.",22,[[],[["cow",4],["result",4]]]],[4,"IncrementLinenoError","","Errors encountered when incrementing line numbers on…",null,null],[13,"Overflow","","An overflow occurred when incrementing the line number.",23,null],[8,"Parser","","Manage parser state, active filename context, and line…",null,null],[16,"Context","","Concrete type for parser context.",24,null],[16,"Error","","Error type for Parser APIs.",24,null],[10,"reset_parser","","Reset parser state to initial values.",24,[[],["result",4]]],[10,"fetch_lineno","","Fetch the current line number from the parser state.",24,[[],["result",4]]],[10,"add_fetch_lineno","","Increment line number and return the new value.",24,[[],["result",4]]],[10,"push_context","","Set the currently active context by modifying the parser…",24,[[],["result",4]]],[10,"pop_context","","Remove the current active context and return it.",24,[[],[["option",4],["result",4]]]],[10,"peek_context","","Return a reference to the currently active context.",24,[[],[["result",4],["option",4]]]],[8,"Prng","","Interpreter global psuedorandom number generator.",null,null],[16,"Error","","Concrete type for PRNG errors.",25,null],[16,"Prng","","Conrete type for the interpreter psuedorandom number…",25,null],[10,"prng","","Return a shared reference to the interpreter psuedorandom…",25,[[],["result",4]]],[10,"prng_mut","","Return a mutable reference to the interpreter psuedorandom…",25,[[],["result",4]]],[8,"Regexp","","Track the state of `Regexp` globals and global interpreter…",null,null],[16,"Error","","Concrete error type for errors encountered when…",26,null],[10,"active_regexp_globals","","Retrieve the current number of set `Regexp` global…",26,[[],["result",4]]],[10,"set_active_regexp_globals","","Set the current number of set `Regexp` global variables.",26,[[],["result",4]]],[10,"clear_regexp","","Clear all `Regexp` state.",26,[[],["result",4]]],[8,"TopSelf","","Return a `Value`-wrapped reference to top self.",null,null],[16,"Value","","Concrete [`Value`] type.",27,null],[10,"top_self","","Return a [`Value`]-wrapped reference to \\\"top self\\\".",27,[[]]],[4,"Ruby","","Classes of Ruby types.",null,null],[13,"Array","","Ruby `Array` type.",28,null],[13,"Bool","","Ruby `TrueClass` and `FalseClass` type.",28,null],[13,"Class","","Ruby `Class` type.",28,null],[13,"CPointer","","FFI type for a borrowed C pointer.",28,null],[13,"Data","","FFI type for an owned C pointer.",28,null],[13,"Exception","","Ruby `Exception` type.",28,null],[13,"Fiber","","Ruby `Fiber` type.",28,null],[13,"Fixnum","","Ruby `Fixnum` type.",28,null],[13,"Float","","Ruby `Float` type.",28,null],[13,"Hash","","Ruby `Hash` type.",28,null],[13,"InlineStruct","","Internal type for non-heap allocated structs.",28,null],[13,"Module","","Ruby `Module` type.",28,null],[13,"Nil","","Ruby `nil` singleton type, the only instance of `NilClass`.",28,null],[13,"Object","","Ruby `Object` type.",28,null],[13,"Proc","","Ruby `Proc` type.",28,null],[13,"Range","","Ruby `Range` type.",28,null],[13,"SingletonClass","","Internal type for the singleton class of an object.",28,null],[13,"String","","Ruby `String` type.",28,null],[13,"Symbol","","Ruby `Symbol` type.",28,null],[13,"Unreachable","","Unreachable interpreter value. Receiving one of these from…",28,null],[13,"RecursiveSelfOwnership","","A special `Value` that is a placeholder for collections…",28,null],[4,"Rust","","Classes of Rust types.",null,null],[13,"Bool","","Rust `bool` type.",29,null],[13,"Bytes","","Rust `Vec<u8>` type.",29,null],[13,"Float","","Rust float type.",29,null],[13,"Map","","Rust `HashMap<K, V>` type.",29,null],[13,"Object","","Aribtrary Rust struct type.",29,null],[13,"SignedInt","","Rust signed integer type.",29,null],[13,"String","","Rust `String` type.",29,null],[13,"UnsignedInt","","Rust unsigned integer type.",29,null],[13,"Vec","","Rust `Vec<T>` type.",29,null],[8,"Value","","A boxed Ruby value owned by the interpreter.",null,null],[16,"Artichoke","","Concrete type for Artichoke interpreter.",30,null],[16,"Arg","","Concrete type for arguments passed to `funcall`.",30,null],[16,"Value","","Concrete type for results from `funcall`.",30,null],[16,"Block","","Concrete type for blocks passed to `funcall`.",30,null],[16,"Error","","Concrete error type for funcall errors.",30,null],[10,"funcall","","Call a method on this [`Value`] with arguments and an…",30,[[["option",4]],["result",4]]],[11,"try_into","","Consume `self` and try to convert `self` to type `T` using…",30,[[],["result",4]]],[11,"try_into_mut","","Consume `self` and try to convert `self` to type `T` using…",30,[[],["result",4]]],[10,"freeze","","Call `#freeze` on this [`Value`].",30,[[],["result",4]]],[10,"is_frozen","","Call `#frozen?` on this [`Value`].",30,[[]]],[10,"is_nil","","Whether `self` is `nil`",30,[[]]],[10,"respond_to","","Whether `self` responds to a method.",30,[[],["result",4]]],[10,"inspect","","Call `#inspect` on this [`Value`].",30,[[],[["global",3],["vec",3]]]],[10,"to_s","","Call `#to_s` on this [`Value`].",30,[[],[["global",3],["vec",3]]]],[10,"ruby_type","","Return this values Rust-mapped type tag.",30,[[],["ruby",4]]],[8,"Warn","","Emit warnings during interpreter execution to stderr.",null,null],[16,"Error","","Concrete error type for errors encountered when outputting…",31,null],[10,"warn","","Emit a warning message using `Warning#warn`.",31,[[],["result",4]]],[0,"mruby","","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke::prelude::mruby","",null,[[["artichoke",3]],[["result",4],["error",3]]]],[3,"Fatal","artichoke::prelude","Ruby `fatal` error type.",null,null],[3,"TypeError","","Ruby `TypeError` error type.",null,null],[3,"NameError","","Ruby `NameError` error type.",null,null],[3,"ScriptError","","Ruby `ScriptError` error type.",null,null],[3,"ArgumentError","","Ruby `ArgumentError` error type.",null,null],[3,"EncodingError","","Ruby `EncodingError` error type.",null,null],[3,"EOFError","","Ruby `EOFError` error type.",null,null],[3,"Exception","","Ruby `Exception` error type.",null,null],[3,"FiberError","","Ruby `FiberError` error type.",null,null],[3,"FloatDomainError","","Ruby `FloatDomainError` error type.",null,null],[3,"FrozenError","","Ruby `FrozenError` error type.",null,null],[3,"IndexError","","Ruby `IndexError` error type.",null,null],[3,"Interrupt","","Ruby `Interrupt` error type.",null,null],[3,"IOError","","Ruby `IOError` error type.",null,null],[3,"KeyError","","Ruby `KeyError` error type.",null,null],[3,"LoadError","","Ruby `LoadError` error type.",null,null],[3,"LocalJumpError","","Ruby `LocalJumpError` error type.",null,null],[3,"NoMemoryError","","Ruby `NoMemoryError` error type.",null,null],[3,"NoMethodError","","Ruby `NoMethodError` error type.",null,null],[3,"NotImplementedError","","Ruby `NotImplementedError` error type.",null,null],[3,"RangeError","","Ruby `RangeError` error type.",null,null],[3,"RegexpError","","Ruby `RegexpError` error type.",null,null],[3,"RuntimeError","","Ruby `RuntimeError` error type.",null,null],[3,"SecurityError","","Ruby `SecurityError` error type.",null,null],[3,"SignalException","","Ruby `SignalException` error type.",null,null],[3,"StandardError","","Ruby `StandardError` error type.",null,null],[3,"StopIteration","","Ruby `StopIteration` error type.",null,null],[3,"SyntaxError","","Ruby `SyntaxError` error type.",null,null],[3,"SystemCallError","","Ruby `SystemCallError` error type.",null,null],[3,"SystemExit","","Ruby `SystemExit` error type.",null,null],[3,"SystemStackError","","Ruby `SystemStackError` error type.",null,null],[3,"ThreadError","","Ruby `ThreadError` error type.",null,null],[3,"UncaughtThrowError","","Ruby `UncaughtThrowError` error type.",null,null],[3,"ZeroDivisionError","","Ruby `ZeroDivisionError` error type.",null,null],[5,"interpreter","artichoke","Create a new Artichoke Ruby interpreter.",null,[[],[["result",4],["error",3],["artichoke",3]]]],[11,"from","artichoke::prelude","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"all_symbols","","",0,[[],["allsymbols",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","artichoke::parser","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","artichoke::repl","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","artichoke::prelude","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"print","","Writes the given bytes to the interpreter stdout stream.",0,[[],[["result",4],["error",3]]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",0,[[],[["result",4],["error",3]]]],[11,"cmp","","",9,[[["releasemetadata",3]],["ordering",4]]],[11,"coerce_to_float","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref_mut","","",33,[[],["artichoke",3]]],[11,"def_class","","Create a class definition bound to a Rust type `T`.",0,[[["spec",3]],[["result",4],["error",3]]]],[11,"class_spec","","Retrieve a class definition from the state bound to Rust…",0,[[],[["error",3],["result",4],["option",4]]]],[11,"class_of","","",0,[[],[["result",4],["option",4],["error",3]]]],[11,"new_instance","","",0,[[],[["result",4],["option",4],["error",3]]]],[11,"from","","",32,[[["urandomerror",3]],["error",3]]],[11,"from","","",32,[[["interpreterallocerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["exception",3]],["error",3]]],[11,"from","","",32,[[["constantnameerror",3]],["error",3]]],[11,"from","","",32,[[["floatdomainerror",3]],["error",3]]],[11,"from","","",32,[[["error",4]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["domainerror",3]],["error",3]]],[11,"from","","",32,[[["error",4]],["error",3]]],[11,"from","","",32,[[["nomethoderror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["nomemoryerror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["argumenterror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["loaderror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["nameerror",3]],["error",3]]],[11,"from","","",32,[[["fibererror",3]],["error",3]]],[11,"from","","",32,[[["notimplementederror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["indexerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["notimplementederror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["ioerror",3]],["error",3]]],[11,"from","","",32,[[["systemcallerror",3]],["error",3]]],[11,"from","","",32,[[["invaliderror",3]],["error",3]]],[11,"from","","",32,[[["convertbyteserror",3]],["error",3]]],[11,"from","","",32,[[["error",3]],["error",3]]],[11,"from","","",32,[[["localjumperror",3]],["error",3]]],[11,"from","","",32,[[["uncaughtthrowerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["interpreterallocerror",3]],["error",3]]],[11,"from","","",32,[[["symboloverflowerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["writeerror",3]],["error",3]]],[11,"from","","",32,[[["argumenterror",3]],["error",3]]],[11,"from","","",32,[[["runtimeerror",3]],["error",3]]],[11,"from","","",32,[[["ioerror",3]],["error",3]]],[11,"from","","",32,[[["standarderror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["rubyexception",8],["global",3]],["error",3]]],[11,"from","","",32,[[["syntaxerror",3]],["error",3]]],[11,"from","","",32,[[["scripterror",3],["box",3],["global",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["rangeerror",3]],["error",3]]],[11,"from","","",32,[[["writeerror",3]],["error",3]]],[11,"from","","",32,[[["securityerror",3],["global",3],["box",3]],["error",3]]],[11,"from","","",32,[[["threaderror",3]],["error",3]]],[11,"from","","",32,[[["notimplementederror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["interpreterextracterror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["argumenterror",3]],["error",3]]],[11,"from","","",32,[[["signalexception",3],["box",3],["global",3]],["error",3]]],[11,"from","","",32,[[["box",3],["fatal",3],["global",3]],["error",3]]],[11,"from","","",32,[[["securityerror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["notdefinederror",4],["global",3]],["error",3]]],[11,"from","","",32,[[["newseederror",3]],["error",3]]],[11,"from","","",32,[[["incrementlinenoerror",4]],["error",3]]],[11,"from","","",32,[[["box",3],["eoferror",3],["global",3]],["error",3]]],[11,"from","","",32,[[["box",3],["frozenerror",3],["global",3]],["error",3]]],[11,"from","","",32,[[["global",3],["unboxrubyerror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["exception",3]],["error",3]]],[11,"from","","",32,[[["loaderror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["uncaughtthrowerror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["runtimeerror",3],["box",3],["global",3]],["error",3]]],[11,"from","","",32,[[["interpreterextracterror",3]],["error",3]]],[11,"from","","",32,[[["regexperror",3]],["error",3]]],[11,"from","","",32,[[["fatal",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["boxintorubyerror",3]],["error",3]]],[11,"from","","",32,[[["keyerror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["zerodivisionerror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["symboloverflowerror",3],["global",3]],["error",3]]],[11,"from","","",32,[[["error",4]],["error",3]]],[11,"from","","",32,[[["stopiteration",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["stopiteration",3]],["error",3]]],[11,"from","","",32,[[["ioerror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["floatdomainerror",3]],["error",3]]],[11,"from","","",32,[[["arenasavepointerror",3]],["error",3]]],[11,"from","","",32,[[["eoferror",3]],["error",3]]],[11,"from","","",32,[[["interrupt",3],["box",3],["global",3]],["error",3]]],[11,"from","","",32,[[["signalexception",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["systemexit",3]],["error",3]]],[11,"from","","",32,[[["box",3],["typeerror",3],["global",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["ioerror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["localjumperror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["incrementlinenoerror",4]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["regexperror",3]],["error",3]]],[11,"from","","",32,[[["noblockgiven",3]],["error",3]]],[11,"from","","",32,[[["interrupt",3]],["error",3]]],[11,"from","","",32,[[["argumenterror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["noblockgiven",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["convertbyteserror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["fibererror",3]],["error",3]]],[11,"from","","",32,[[["boxintorubyerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["constantnameerror",3]],["error",3]]],[11,"from","","",32,[[["rangeerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["encodingerror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["encodingerror",3]],["error",3]]],[11,"from","","",32,[[["initializeerror",3]],["error",3]]],[11,"from","","",32,[[["zerodivisionerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["standarderror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["keyerror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["domainerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["syntaxerror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["systemexit",3]],["error",3]]],[11,"from","","",32,[[["argumenterror",3]],["error",3]]],[11,"from","","",32,[[["nomemoryerror",3]],["error",3]]],[11,"from","","",32,[[["box",3],["nameerror",3],["global",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["nomethoderror",3]],["error",3]]],[11,"from","","",32,[[["randombyteserror",3]],["error",3]]],[11,"from","","",32,[[["systemstackerror",3],["global",3],["box",3]],["error",3]]],[11,"from","","",32,[[["argcounterror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["arenasavepointerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["argcounterror",3],["box",3]],["error",3]]],[11,"from","","",32,[[["typeerror",3]],["error",3]]],[11,"from","","",32,[[["caughtexception",3]],["error",3]]],[11,"from","","",32,[[["systemstackerror",3]],["error",3]]],[11,"from","","",32,[[["global",3],["box",3],["systemcallerror",3]],["error",3]]],[11,"from","","",32,[[["indexerror",3]],["error",3]]],[11,"from","","",32,[[["frozenerror",3]],["error",3]]],[11,"from","","",32,[[["notdefinederror",4]],["error",3]]],[11,"from","","",32,[[["box",3],["global",3],["threaderror",3]],["error",3]]],[11,"from","","",32,[[["unboxrubyerror",3]],["error",3]]],[11,"from","","",32,[[["domainerror",3]],["error",3]]],[11,"from","","",32,[[["scripterror",3]],["error",3]]],[11,"message","","",60,[[],["cow",4]]],[11,"name","","",60,[[],["cow",4]]],[11,"vm_backtrace","","",60,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",60,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",43,[[],["cow",4]]],[11,"name","","",43,[[],["cow",4]]],[11,"vm_backtrace","","",43,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",43,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",41,[[],["cow",4]]],[11,"name","","",41,[[],["cow",4]]],[11,"vm_backtrace","","",41,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",41,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",46,[[],["cow",4]]],[11,"name","","",46,[[],["cow",4]]],[11,"vm_backtrace","","",46,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",46,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",39,[[],["cow",4]]],[11,"name","","",39,[[],["cow",4]]],[11,"vm_backtrace","","",39,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",39,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",54,[[],["cow",4]]],[11,"name","","",54,[[],["cow",4]]],[11,"vm_backtrace","","",54,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",54,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",42,[[],["cow",4]]],[11,"name","","",42,[[],["cow",4]]],[11,"vm_backtrace","","",42,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",42,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",48,[[],["cow",4]]],[11,"name","","",48,[[],["cow",4]]],[11,"vm_backtrace","","",48,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",48,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",44,[[],["cow",4]]],[11,"name","","",44,[[],["cow",4]]],[11,"vm_backtrace","","",44,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",44,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",38,[[],["cow",4]]],[11,"name","","",38,[[],["cow",4]]],[11,"vm_backtrace","","",38,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",38,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",62,[[],["cow",4]]],[11,"name","","",62,[[],["cow",4]]],[11,"vm_backtrace","","",62,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",62,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",59,[[],["cow",4]]],[11,"name","","",59,[[],["cow",4]]],[11,"vm_backtrace","","",59,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",59,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",35,[[],["cow",4]]],[11,"name","","",35,[[],["cow",4]]],[11,"vm_backtrace","","",35,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",35,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",45,[[],["cow",4]]],[11,"name","","",45,[[],["cow",4]]],[11,"vm_backtrace","","",45,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",45,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",32,[[],["cow",4]]],[11,"name","","Class name of the `Exception`.",32,[[],["cow",4]]],[11,"vm_backtrace","","",32,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",32,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",63,[[],["cow",4]]],[11,"name","","",63,[[],["cow",4]]],[11,"vm_backtrace","","",63,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",63,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",47,[[],["cow",4]]],[11,"name","","",47,[[],["cow",4]]],[11,"vm_backtrace","","",47,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",47,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",52,[[],["cow",4]]],[11,"name","","",52,[[],["cow",4]]],[11,"vm_backtrace","","",52,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",52,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",61,[[],["cow",4]]],[11,"name","","",61,[[],["cow",4]]],[11,"vm_backtrace","","",61,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",61,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",53,[[],["cow",4]]],[11,"name","","",53,[[],["cow",4]]],[11,"vm_backtrace","","",53,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",53,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",50,[[],["cow",4]]],[11,"name","","",50,[[],["cow",4]]],[11,"vm_backtrace","","",50,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",50,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",64,[[],["cow",4]]],[11,"name","","",64,[[],["cow",4]]],[11,"vm_backtrace","","",64,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",64,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",67,[[],["cow",4]]],[11,"name","","",67,[[],["cow",4]]],[11,"vm_backtrace","","",67,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",67,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",56,[[],["cow",4]]],[11,"name","","",56,[[],["cow",4]]],[11,"vm_backtrace","","",56,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",56,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",40,[[],["cow",4]]],[11,"name","","",40,[[],["cow",4]]],[11,"vm_backtrace","","",40,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",40,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",66,[[],["cow",4]]],[11,"name","","",66,[[],["cow",4]]],[11,"vm_backtrace","","",66,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",66,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",57,[[],["cow",4]]],[11,"name","","",57,[[],["cow",4]]],[11,"vm_backtrace","","",57,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",57,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",55,[[],["cow",4]]],[11,"name","","",55,[[],["cow",4]]],[11,"vm_backtrace","","",55,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",55,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",36,[[],["cow",4]]],[11,"name","","",36,[[],["cow",4]]],[11,"vm_backtrace","","",36,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",36,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",65,[[],["cow",4]]],[11,"name","","",65,[[],["cow",4]]],[11,"vm_backtrace","","",65,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",65,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",23,[[],["cow",4]]],[11,"name","","",23,[[],["cow",4]]],[11,"vm_backtrace","","",23,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",23,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",37,[[],["cow",4]]],[11,"name","","",37,[[],["cow",4]]],[11,"vm_backtrace","","",37,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",37,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",58,[[],["cow",4]]],[11,"name","","",58,[[],["cow",4]]],[11,"vm_backtrace","","",58,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",58,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",51,[[],["cow",4]]],[11,"name","","",51,[[],["cow",4]]],[11,"vm_backtrace","","",51,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",51,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",49,[[],["cow",4]]],[11,"name","","",49,[[],["cow",4]]],[11,"vm_backtrace","","",49,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",49,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"message","","",34,[[],["cow",4]]],[11,"name","","",34,[[],["cow",4]]],[11,"vm_backtrace","","",34,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",34,[[["artichoke",3]],[["mrb_value",3],["option",4]]]],[11,"def_module","","Create a module definition bound to a Rust type `T`.",0,[[["spec",3]],[["result",4],["error",3]]]],[11,"module_spec","","Retrieve a module definition from the interpreter bound to…",0,[[],[["error",3],["result",4],["option",4]]]],[11,"module_of","","",0,[[],[["result",4],["option",4],["error",3]]]],[11,"convert_mut","","",0,[[["global",3],["vec",3]],["value",3]]],[11,"convert_mut","","",0,[[["cow",4]],["value",3]]],[11,"convert_mut","","",0,[[["outcome",4]],["value",3]]],[11,"convert_mut","","",0,[[["option",4],["string",3]],["value",3]]],[11,"convert_mut","","",0,[[],["value",3]]],[11,"convert_mut","","",0,[[["value",3]],["options",3]]],[11,"convert_mut","","",0,[[["rand",4]],["value",3]]],[11,"convert_mut","","",0,[[["option",4]],["value",3]]],[11,"convert_mut","","",0,[[["value",3]],["value",3]]],[11,"convert_mut","","",0,[[["hashmap",3],["vec",3],["randomstate",3]],["value",3]]],[11,"convert_mut","","",0,[[["cow",4]],["value",3]]],[11,"convert_mut","","",0,[[["option",4],["hashmap",3]],["value",3]]],[11,"convert_mut","","",0,[[],["value",3]]],[11,"convert_mut","","",0,[[],["value",3]]],[11,"convert_mut","","",0,[[["option",4]],["value",3]]],[11,"convert_mut","","",0,[[["vec",3],["option",4]],["value",3]]],[11,"convert_mut","","",0,[[["rand",4]],["value",3]]],[11,"convert_mut","","",0,[[["global",3],["vec",3]],["value",3]]],[11,"convert_mut","","",0,[[["string",3]],["value",3]]],[11,"convert_mut","","",0,[[["float",3]],["value",3]]],[11,"def_file_for_type","","",0,[[],[["result",4],["error",3]]]],[11,"def_rb_source_file","","",0,[[],[["result",4],["error",3]]]],[11,"source_is_file","","",0,[[],[["error",3],["result",4]]]],[11,"load_source","","",0,[[],[["error",3],["result",4]]]],[11,"require_source","","",0,[[],[["error",3],["result",4]]]],[11,"read_source_file_contents","","",0,[[],[["cow",4],["result",4],["error",3]]]],[11,"inspect_type_name_for_value","","",0,[[["value",3]]]],[11,"default","","",9,[[],["releasemetadata",3]]],[11,"prng","","",0,[[],[["result",4],["random",3],["error",3]]]],[11,"prng_mut","","",0,[[],[["error",3],["result",4],["random",3]]]],[11,"active_regexp_globals","","",0,[[],[["result",4],["interpreterextracterror",3]]]],[11,"set_active_regexp_globals","","",0,[[],[["result",4],["interpreterextracterror",3]]]],[11,"clear_regexp","","",0,[[],[["result",4],["interpreterextracterror",3]]]],[11,"as_mut","","",33,[[],["artichoke",3]]],[11,"eq","","",9,[[["releasemetadata",3]]]],[11,"ne","","",9,[[["releasemetadata",3]]]],[11,"eval","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"eval_os_str","","",0,[[["osstr",3]],[["value",3],["result",4],["error",3]]]],[11,"eval_file","","",0,[[["path",3]],[["value",3],["result",4],["error",3]]]],[11,"warn","","",0,[[],[["result",4],["error",3]]]],[11,"set_global_variable","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"unset_global_variable","","Unset global variable pointed to by `name`.",0,[[],[["result",4],["error",3]]]],[11,"get_global_variable","","",0,[[],[["result",4],["option",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["vec",3],["error",3],["result",4]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["seed",4],["result",4],["typeerror",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["max",4],["error",3],["result",4]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["vec",3],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["encoding",4],["result",4],["invalidencodingerror",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["vec",3],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3],["value",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["vec",3],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["vec",3],["error",3],["result",4]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["option",4],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["vec",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["vec",3],["vec",3],["global",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["option",4],["error",3],["result",4]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["typeerror",3],["result",4],["captureextract",4]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["error",3],["result",4],["vec",3]]]],[11,"try_convert_mut","","Blanket implementation that always succeeds by delegating…",0,[[],["result",4]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["capturematch",4]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3],["option",4]],[["seed",4],["result",4],["typeerror",3]]]],[11,"try_convert_mut","","",0,[[["value",3],["option",4]],[["max",4],["error",3],["result",4]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["vec",3],["option",4],["global",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["vec",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["osstr",3],["cow",4]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3],["option",4]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["scan",4]],[["result",4],["option",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["error",3],["result",4],["string",3]]]],[11,"try_convert_mut","","",0,[[["value",3],["option",4]],[["result",4],["max",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["max",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["error",3],["option",4],["result",4]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["error",3],["result",4],["option",4]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["vec",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["error",3],["vec",3],["result",4]]]],[11,"try_convert_mut","","",0,[[["value",3],["option",4]],[["option",4],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3],["option",4]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["osstr",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["string",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["error",3],["vec",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["result",4],["error",3],["vec",3]]]],[11,"try_convert_mut","","",0,[[["value",3]],[["error",3],["result",4],["integerstring",3]]]],[11,"try_convert_mut","","",0,[[["global",3],["vec",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[["osstring",3]],[["value",3],["result",4],["error",3]]]],[11,"try_convert_mut","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"top_self","","",0,[[],["value",3]]],[11,"drop","","",33,[[]]],[11,"partial_cmp","","",9,[[["releasemetadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["releasemetadata",3]]]],[11,"le","","",9,[[["releasemetadata",3]]]],[11,"gt","","",9,[[["releasemetadata",3]]]],[11,"ge","","",9,[[["releasemetadata",3]]]],[11,"intern_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"check_interned_bytes","","",0,[[],[["option",4],["error",3],["result",4]]]],[11,"lookup_symbol","","",0,[[],[["error",3],["result",4],["option",4]]]],[11,"symbol_count","","",0,[[]]],[11,"reset_parser","","",0,[[],[["result",4],["error",3]]]],[11,"fetch_lineno","","",0,[[],[["result",4],["error",3]]]],[11,"add_fetch_lineno","","",0,[[],[["result",4],["error",3]]]],[11,"push_context","","",0,[[["context",3]],[["result",4],["error",3]]]],[11,"pop_context","","",0,[[],[["result",4],["option",4],["error",3]]]],[11,"peek_context","","",0,[[],[["result",4],["option",4],["error",3]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"create_arena_savepoint","","",0,[[],[["arenaindex",3],["result",4],["arenasavepointerror",3]]]],[11,"live_object_count","","",0,[[]]],[11,"mark_value","","",0,[[["value",3]]]],[11,"incremental_gc","","",0,[[]]],[11,"full_gc","","",0,[[]]],[11,"enable_gc","","",0,[[],["state",4]]],[11,"disable_gc","","",0,[[],["state",4]]],[11,"as_ref","","",33,[[],["artichoke",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[["integer",3]],["value",3]]],[11,"convert","","",0,[[["option",4]],["value",3]]],[11,"convert","","",0,[[["value",3]],["value",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[["value",3],["option",4]],["value",3]]],[11,"convert","","",0,[[["option",4]],["value",3]]],[11,"convert","","",0,[[["value",3]],[["value",3],["option",4]]]],[11,"convert","","",0,[[],["value",3]]],[11,"convert","","",0,[[],["value",3]]],[11,"try_convert","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert","","",0,[[["value",3]],[["result",4],["option",4],["error",3]]]],[11,"try_convert","","Blanket implementation that always succeeds by delegating…",0,[[],["result",4]]],[11,"try_convert","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"try_convert","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"try_convert","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"try_convert","","",0,[[["value",3]],[["float",3],["error",3],["result",4]]]],[11,"try_convert","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert","","",0,[[["value",3]],[["error",3],["result",4],["option",4]]]],[11,"try_convert","","",0,[[["value",3]],[["error",3],["result",4]]]],[11,"try_convert","","",0,[[["value",3]],[["error",3],["result",4]]]],[11,"try_convert","","",0,[[],[["value",3],["result",4],["error",3]]]],[11,"try_convert","","",0,[[["value",3]],[["result",4],["integer",3],["error",3]]]],[11,"ruby_copyright","","",9,[[]]],[11,"ruby_description","","",9,[[]]],[11,"ruby_engine","","",9,[[]]],[11,"ruby_engine_version","","",9,[[]]],[11,"ruby_patchlevel","","",9,[[]]],[11,"ruby_platform","","",9,[[]]],[11,"ruby_release_date","","",9,[[]]],[11,"ruby_revision","","",9,[[]]],[11,"ruby_version","","",9,[[]]],[11,"artichoke_compiler_version","","",9,[[],["option",4]]],[11,"hash","","",9,[[]]],[11,"deref","","",33,[[],["artichoke",3]]],[11,"define_global_constant","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"define_class_constant","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"define_module_constant","","",0,[[["value",3]],[["result",4],["error",3]]]],[11,"clone","","",9,[[],["releasemetadata",3]]],[11,"eq","","",28,[[["ruby",4]]]],[11,"eq","","",23,[[["incrementlinenoerror",4]]]],[11,"ne","","",23,[[["incrementlinenoerror",4]]]],[11,"eq","","",29,[[["rust",4]]]],[11,"partial_cmp","","",28,[[["ruby",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",29,[[["rust",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",23,[[["incrementlinenoerror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["incrementlinenoerror",4]]]],[11,"le","","",23,[[["incrementlinenoerror",4]]]],[11,"gt","","",23,[[["incrementlinenoerror",4]]]],[11,"ge","","",23,[[["incrementlinenoerror",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",23,[[]]],[11,"cmp","","",29,[[["rust",4]],["ordering",4]]],[11,"cmp","","",28,[[["ruby",4]],["ordering",4]]],[11,"cmp","","",23,[[["incrementlinenoerror",4]],["ordering",4]]],[11,"clone","","",29,[[],["rust",4]]],[11,"clone","","",28,[[],["ruby",4]]],[11,"clone","","",23,[[],["incrementlinenoerror",4]]],[11,"eq","","",66,[[["uncaughtthrowerror",3]]]],[11,"ne","","",66,[[["uncaughtthrowerror",3]]]],[11,"eq","","",67,[[["zerodivisionerror",3]]]],[11,"ne","","",67,[[["zerodivisionerror",3]]]],[11,"eq","","",57,[[["securityerror",3]]]],[11,"ne","","",57,[[["securityerror",3]]]],[11,"eq","","",39,[[["encodingerror",3]]]],[11,"ne","","",39,[[["encodingerror",3]]]],[11,"eq","","",43,[[["floatdomainerror",3]]]],[11,"ne","","",43,[[["floatdomainerror",3]]]],[11,"eq","","",52,[[["nomethoderror",3]]]],[11,"ne","","",52,[[["nomethoderror",3]]]],[11,"eq","","",44,[[["frozenerror",3]]]],[11,"ne","","",44,[[["frozenerror",3]]]],[11,"eq","","",53,[[["notimplementederror",3]]]],[11,"ne","","",53,[[["notimplementederror",3]]]],[11,"eq","","",37,[[["scripterror",3]]]],[11,"ne","","",37,[[["scripterror",3]]]],[11,"eq","","",36,[[["nameerror",3]]]],[11,"ne","","",36,[[["nameerror",3]]]],[11,"eq","","",42,[[["fibererror",3]]]],[11,"ne","","",42,[[["fibererror",3]]]],[11,"eq","","",41,[[["exception",3]]]],[11,"ne","","",41,[[["exception",3]]]],[11,"eq","","",56,[[["runtimeerror",3]]]],[11,"ne","","",56,[[["runtimeerror",3]]]],[11,"eq","","",65,[[["threaderror",3]]]],[11,"ne","","",65,[[["threaderror",3]]]],[11,"eq","","",45,[[["indexerror",3]]]],[11,"ne","","",45,[[["indexerror",3]]]],[11,"eq","","",50,[[["localjumperror",3]]]],[11,"ne","","",50,[[["localjumperror",3]]]],[11,"eq","","",61,[[["syntaxerror",3]]]],[11,"ne","","",61,[[["syntaxerror",3]]]],[11,"eq","","",47,[[["ioerror",3]]]],[11,"ne","","",47,[[["ioerror",3]]]],[11,"eq","","",55,[[["regexperror",3]]]],[11,"ne","","",55,[[["regexperror",3]]]],[11,"eq","","",58,[[["signalexception",3]]]],[11,"ne","","",58,[[["signalexception",3]]]],[11,"eq","","",60,[[["stopiteration",3]]]],[11,"ne","","",60,[[["stopiteration",3]]]],[11,"eq","","",38,[[["argumenterror",3]]]],[11,"ne","","",38,[[["argumenterror",3]]]],[11,"eq","","",59,[[["standarderror",3]]]],[11,"ne","","",59,[[["standarderror",3]]]],[11,"eq","","",49,[[["loaderror",3]]]],[11,"ne","","",49,[[["loaderror",3]]]],[11,"eq","","",46,[[["interrupt",3]]]],[11,"ne","","",46,[[["interrupt",3]]]],[11,"eq","","",34,[[["fatal",3]]]],[11,"ne","","",34,[[["fatal",3]]]],[11,"eq","","",48,[[["keyerror",3]]]],[11,"ne","","",48,[[["keyerror",3]]]],[11,"eq","","",63,[[["systemexit",3]]]],[11,"ne","","",63,[[["systemexit",3]]]],[11,"eq","","",62,[[["systemcallerror",3]]]],[11,"ne","","",62,[[["systemcallerror",3]]]],[11,"eq","","",35,[[["typeerror",3]]]],[11,"ne","","",35,[[["typeerror",3]]]],[11,"eq","","",40,[[["eoferror",3]]]],[11,"ne","","",40,[[["eoferror",3]]]],[11,"eq","","",51,[[["nomemoryerror",3]]]],[11,"ne","","",51,[[["nomemoryerror",3]]]],[11,"eq","","",64,[[["systemstackerror",3]]]],[11,"ne","","",64,[[["systemstackerror",3]]]],[11,"eq","","",54,[[["rangeerror",3]]]],[11,"ne","","",54,[[["rangeerror",3]]]],[11,"partial_cmp","","",56,[[["runtimeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",56,[[["runtimeerror",3]]]],[11,"le","","",56,[[["runtimeerror",3]]]],[11,"gt","","",56,[[["runtimeerror",3]]]],[11,"ge","","",56,[[["runtimeerror",3]]]],[11,"partial_cmp","","",55,[[["regexperror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",55,[[["regexperror",3]]]],[11,"le","","",55,[[["regexperror",3]]]],[11,"gt","","",55,[[["regexperror",3]]]],[11,"ge","","",55,[[["regexperror",3]]]],[11,"partial_cmp","","",58,[[["signalexception",3]],[["ordering",4],["option",4]]]],[11,"lt","","",58,[[["signalexception",3]]]],[11,"le","","",58,[[["signalexception",3]]]],[11,"gt","","",58,[[["signalexception",3]]]],[11,"ge","","",58,[[["signalexception",3]]]],[11,"partial_cmp","","",59,[[["standarderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",59,[[["standarderror",3]]]],[11,"le","","",59,[[["standarderror",3]]]],[11,"gt","","",59,[[["standarderror",3]]]],[11,"ge","","",59,[[["standarderror",3]]]],[11,"partial_cmp","","",51,[[["nomemoryerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",51,[[["nomemoryerror",3]]]],[11,"le","","",51,[[["nomemoryerror",3]]]],[11,"gt","","",51,[[["nomemoryerror",3]]]],[11,"ge","","",51,[[["nomemoryerror",3]]]],[11,"partial_cmp","","",45,[[["indexerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",45,[[["indexerror",3]]]],[11,"le","","",45,[[["indexerror",3]]]],[11,"gt","","",45,[[["indexerror",3]]]],[11,"ge","","",45,[[["indexerror",3]]]],[11,"partial_cmp","","",39,[[["encodingerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["encodingerror",3]]]],[11,"le","","",39,[[["encodingerror",3]]]],[11,"gt","","",39,[[["encodingerror",3]]]],[11,"ge","","",39,[[["encodingerror",3]]]],[11,"partial_cmp","","",60,[[["stopiteration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",60,[[["stopiteration",3]]]],[11,"le","","",60,[[["stopiteration",3]]]],[11,"gt","","",60,[[["stopiteration",3]]]],[11,"ge","","",60,[[["stopiteration",3]]]],[11,"partial_cmp","","",47,[[["ioerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",47,[[["ioerror",3]]]],[11,"le","","",47,[[["ioerror",3]]]],[11,"gt","","",47,[[["ioerror",3]]]],[11,"ge","","",47,[[["ioerror",3]]]],[11,"partial_cmp","","",61,[[["syntaxerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",61,[[["syntaxerror",3]]]],[11,"le","","",61,[[["syntaxerror",3]]]],[11,"gt","","",61,[[["syntaxerror",3]]]],[11,"ge","","",61,[[["syntaxerror",3]]]],[11,"partial_cmp","","",50,[[["localjumperror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",50,[[["localjumperror",3]]]],[11,"le","","",50,[[["localjumperror",3]]]],[11,"gt","","",50,[[["localjumperror",3]]]],[11,"ge","","",50,[[["localjumperror",3]]]],[11,"partial_cmp","","",35,[[["typeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["typeerror",3]]]],[11,"le","","",35,[[["typeerror",3]]]],[11,"gt","","",35,[[["typeerror",3]]]],[11,"ge","","",35,[[["typeerror",3]]]],[11,"partial_cmp","","",62,[[["systemcallerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",62,[[["systemcallerror",3]]]],[11,"le","","",62,[[["systemcallerror",3]]]],[11,"gt","","",62,[[["systemcallerror",3]]]],[11,"ge","","",62,[[["systemcallerror",3]]]],[11,"partial_cmp","","",48,[[["keyerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",48,[[["keyerror",3]]]],[11,"le","","",48,[[["keyerror",3]]]],[11,"gt","","",48,[[["keyerror",3]]]],[11,"ge","","",48,[[["keyerror",3]]]],[11,"partial_cmp","","",36,[[["nameerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["nameerror",3]]]],[11,"le","","",36,[[["nameerror",3]]]],[11,"gt","","",36,[[["nameerror",3]]]],[11,"ge","","",36,[[["nameerror",3]]]],[11,"partial_cmp","","",65,[[["threaderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",65,[[["threaderror",3]]]],[11,"le","","",65,[[["threaderror",3]]]],[11,"gt","","",65,[[["threaderror",3]]]],[11,"ge","","",65,[[["threaderror",3]]]],[11,"partial_cmp","","",42,[[["fibererror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["fibererror",3]]]],[11,"le","","",42,[[["fibererror",3]]]],[11,"gt","","",42,[[["fibererror",3]]]],[11,"ge","","",42,[[["fibererror",3]]]],[11,"partial_cmp","","",46,[[["interrupt",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["interrupt",3]]]],[11,"le","","",46,[[["interrupt",3]]]],[11,"gt","","",46,[[["interrupt",3]]]],[11,"ge","","",46,[[["interrupt",3]]]],[11,"partial_cmp","","",54,[[["rangeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",54,[[["rangeerror",3]]]],[11,"le","","",54,[[["rangeerror",3]]]],[11,"gt","","",54,[[["rangeerror",3]]]],[11,"ge","","",54,[[["rangeerror",3]]]],[11,"partial_cmp","","",64,[[["systemstackerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",64,[[["systemstackerror",3]]]],[11,"le","","",64,[[["systemstackerror",3]]]],[11,"gt","","",64,[[["systemstackerror",3]]]],[11,"ge","","",64,[[["systemstackerror",3]]]],[11,"partial_cmp","","",66,[[["uncaughtthrowerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",66,[[["uncaughtthrowerror",3]]]],[11,"le","","",66,[[["uncaughtthrowerror",3]]]],[11,"gt","","",66,[[["uncaughtthrowerror",3]]]],[11,"ge","","",66,[[["uncaughtthrowerror",3]]]],[11,"partial_cmp","","",41,[[["exception",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["exception",3]]]],[11,"le","","",41,[[["exception",3]]]],[11,"gt","","",41,[[["exception",3]]]],[11,"ge","","",41,[[["exception",3]]]],[11,"partial_cmp","","",38,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["argumenterror",3]]]],[11,"le","","",38,[[["argumenterror",3]]]],[11,"gt","","",38,[[["argumenterror",3]]]],[11,"ge","","",38,[[["argumenterror",3]]]],[11,"partial_cmp","","",44,[[["frozenerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["frozenerror",3]]]],[11,"le","","",44,[[["frozenerror",3]]]],[11,"gt","","",44,[[["frozenerror",3]]]],[11,"ge","","",44,[[["frozenerror",3]]]],[11,"partial_cmp","","",52,[[["nomethoderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",52,[[["nomethoderror",3]]]],[11,"le","","",52,[[["nomethoderror",3]]]],[11,"gt","","",52,[[["nomethoderror",3]]]],[11,"ge","","",52,[[["nomethoderror",3]]]],[11,"partial_cmp","","",43,[[["floatdomainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["floatdomainerror",3]]]],[11,"le","","",43,[[["floatdomainerror",3]]]],[11,"gt","","",43,[[["floatdomainerror",3]]]],[11,"ge","","",43,[[["floatdomainerror",3]]]],[11,"partial_cmp","","",34,[[["fatal",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["fatal",3]]]],[11,"le","","",34,[[["fatal",3]]]],[11,"gt","","",34,[[["fatal",3]]]],[11,"ge","","",34,[[["fatal",3]]]],[11,"partial_cmp","","",63,[[["systemexit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",63,[[["systemexit",3]]]],[11,"le","","",63,[[["systemexit",3]]]],[11,"gt","","",63,[[["systemexit",3]]]],[11,"ge","","",63,[[["systemexit",3]]]],[11,"partial_cmp","","",40,[[["eoferror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["eoferror",3]]]],[11,"le","","",40,[[["eoferror",3]]]],[11,"gt","","",40,[[["eoferror",3]]]],[11,"ge","","",40,[[["eoferror",3]]]],[11,"partial_cmp","","",57,[[["securityerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",57,[[["securityerror",3]]]],[11,"le","","",57,[[["securityerror",3]]]],[11,"gt","","",57,[[["securityerror",3]]]],[11,"ge","","",57,[[["securityerror",3]]]],[11,"partial_cmp","","",53,[[["notimplementederror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",53,[[["notimplementederror",3]]]],[11,"le","","",53,[[["notimplementederror",3]]]],[11,"gt","","",53,[[["notimplementederror",3]]]],[11,"ge","","",53,[[["notimplementederror",3]]]],[11,"partial_cmp","","",49,[[["loaderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",49,[[["loaderror",3]]]],[11,"le","","",49,[[["loaderror",3]]]],[11,"gt","","",49,[[["loaderror",3]]]],[11,"ge","","",49,[[["loaderror",3]]]],[11,"partial_cmp","","",67,[[["zerodivisionerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",67,[[["zerodivisionerror",3]]]],[11,"le","","",67,[[["zerodivisionerror",3]]]],[11,"gt","","",67,[[["zerodivisionerror",3]]]],[11,"ge","","",67,[[["zerodivisionerror",3]]]],[11,"partial_cmp","","",37,[[["scripterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["scripterror",3]]]],[11,"le","","",37,[[["scripterror",3]]]],[11,"gt","","",37,[[["scripterror",3]]]],[11,"ge","","",37,[[["scripterror",3]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",51,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",52,[[]]],[11,"from","","",46,[[["cow",4]],["interrupt",3]]],[11,"from","","",36,[[["cow",4]],["nameerror",3]]],[11,"from","","",52,[[["string",3]],["nomethoderror",3]]],[11,"from","","",54,[[["cow",4]],["rangeerror",3]]],[11,"from","","",54,[[["string",3]],["rangeerror",3]]],[11,"from","","",44,[[["cow",4]],["frozenerror",3]]],[11,"from","","",35,[[["cow",4]],["typeerror",3]]],[11,"from","","",42,[[["global",3],["vec",3]],["fibererror",3]]],[11,"from","","",44,[[],["frozenerror",3]]],[11,"from","","",46,[[],["interrupt",3]]],[11,"from","","",61,[[["global",3],["vec",3]],["syntaxerror",3]]],[11,"from","","",45,[[["cow",4]],["indexerror",3]]],[11,"from","","",67,[[],["zerodivisionerror",3]]],[11,"from","","",67,[[],["zerodivisionerror",3]]],[11,"from","","",38,[[["cow",4]],["argumenterror",3]]],[11,"from","","",67,[[["cow",4]],["zerodivisionerror",3]]],[11,"from","","",58,[[["string",3]],["signalexception",3]]],[11,"from","","",66,[[["global",3],["vec",3]],["uncaughtthrowerror",3]]],[11,"from","","",48,[[],["keyerror",3]]],[11,"from","","",63,[[],["systemexit",3]]],[11,"from","","",40,[[],["eoferror",3]]],[11,"from","","",60,[[["string",3]],["stopiteration",3]]],[11,"from","","",60,[[["global",3],["vec",3]],["stopiteration",3]]],[11,"from","","",66,[[["cow",4]],["uncaughtthrowerror",3]]],[11,"from","","",58,[[["cow",4]],["signalexception",3]]],[11,"from","","",49,[[],["loaderror",3]]],[11,"from","","",45,[[["string",3]],["indexerror",3]]],[11,"from","","",38,[[],["argumenterror",3]]],[11,"from","","",57,[[],["securityerror",3]]],[11,"from","","",37,[[],["scripterror",3]]],[11,"from","","",48,[[["global",3],["vec",3]],["keyerror",3]]],[11,"from","","",67,[[["cow",4]],["zerodivisionerror",3]]],[11,"from","","",52,[[["cow",4]],["nomethoderror",3]]],[11,"from","","",61,[[["string",3]],["syntaxerror",3]]],[11,"from","","",54,[[],["rangeerror",3]]],[11,"from","","",43,[[["cow",4]],["floatdomainerror",3]]],[11,"from","","",43,[[["string",3]],["floatdomainerror",3]]],[11,"from","","",64,[[],["systemstackerror",3]]],[11,"from","","",39,[[["cow",4]],["encodingerror",3]]],[11,"from","","",36,[[["global",3],["vec",3]],["nameerror",3]]],[11,"from","","",44,[[["cow",4]],["frozenerror",3]]],[11,"from","","",63,[[["string",3]],["systemexit",3]]],[11,"from","","",66,[[],["uncaughtthrowerror",3]]],[11,"from","","",59,[[],["standarderror",3]]],[11,"from","","",37,[[["cow",4]],["scripterror",3]]],[11,"from","","",45,[[["cow",4]],["indexerror",3]]],[11,"from","","",43,[[["cow",4]],["floatdomainerror",3]]],[11,"from","","",55,[[],["regexperror",3]]],[11,"from","","",40,[[["string",3]],["eoferror",3]]],[11,"from","","",65,[[["global",3],["vec",3]],["threaderror",3]]],[11,"from","","",62,[[],["systemcallerror",3]]],[11,"from","","",50,[[["global",3],["vec",3]],["localjumperror",3]]],[11,"from","","",55,[[["string",3]],["regexperror",3]]],[11,"from","","",49,[[["cow",4]],["loaderror",3]]],[11,"from","","",50,[[],["localjumperror",3]]],[11,"from","","",38,[[["cow",4]],["argumenterror",3]]],[11,"from","","",43,[[],["floatdomainerror",3]]],[11,"from","","",36,[[["string",3]],["nameerror",3]]],[11,"from","","",66,[[],["uncaughtthrowerror",3]]],[11,"from","","",65,[[["string",3]],["threaderror",3]]],[11,"from","","",34,[[],["fatal",3]]],[11,"from","","",42,[[],["fibererror",3]]],[11,"from","","",46,[[],["interrupt",3]]],[11,"from","","",39,[[["cow",4]],["encodingerror",3]]],[11,"from","","",60,[[],["stopiteration",3]]],[11,"from","","",42,[[["cow",4]],["fibererror",3]]],[11,"from","","",44,[[["global",3],["vec",3]],["frozenerror",3]]],[11,"from","","",44,[[["string",3]],["frozenerror",3]]],[11,"from","","",56,[[["cow",4]],["runtimeerror",3]]],[11,"from","","",67,[[["global",3],["vec",3]],["zerodivisionerror",3]]],[11,"from","","",51,[[["cow",4]],["nomemoryerror",3]]],[11,"from","","",50,[[["string",3]],["localjumperror",3]]],[11,"from","","",38,[[["string",3]],["argumenterror",3]]],[11,"from","","",48,[[["cow",4]],["keyerror",3]]],[11,"from","","",56,[[],["runtimeerror",3]]],[11,"from","","",38,[[["global",3],["vec",3]],["argumenterror",3]]],[11,"from","","",37,[[["string",3]],["scripterror",3]]],[11,"from","","",50,[[["cow",4]],["localjumperror",3]]],[11,"from","","",54,[[["global",3],["vec",3]],["rangeerror",3]]],[11,"from","","",34,[[["string",3]],["fatal",3]]],[11,"from","","",57,[[["global",3],["vec",3]],["securityerror",3]]],[11,"from","","",39,[[["string",3]],["encodingerror",3]]],[11,"from","","",59,[[["cow",4]],["standarderror",3]]],[11,"from","","",39,[[],["encodingerror",3]]],[11,"from","","",58,[[],["signalexception",3]]],[11,"from","","",60,[[["cow",4]],["stopiteration",3]]],[11,"from","","",51,[[],["nomemoryerror",3]]],[11,"from","","",61,[[],["syntaxerror",3]]],[11,"from","","",51,[[],["nomemoryerror",3]]],[11,"from","","",65,[[],["threaderror",3]]],[11,"from","","",48,[[],["keyerror",3]]],[11,"from","","",48,[[["string",3]],["keyerror",3]]],[11,"from","","",63,[[],["systemexit",3]]],[11,"from","","",66,[[["cow",4]],["uncaughtthrowerror",3]]],[11,"from","","",35,[[],["typeerror",3]]],[11,"from","","",57,[[["cow",4]],["securityerror",3]]],[11,"from","","",50,[[["cow",4]],["localjumperror",3]]],[11,"from","","",49,[[["cow",4]],["loaderror",3]]],[11,"from","","",65,[[["cow",4]],["threaderror",3]]],[11,"from","","",43,[[],["floatdomainerror",3]]],[11,"from","","",47,[[],["ioerror",3]]],[11,"from","","",41,[[],["exception",3]]],[11,"from","","",40,[[["global",3],["vec",3]],["eoferror",3]]],[11,"from","","",39,[[["global",3],["vec",3]],["encodingerror",3]]],[11,"from","","",62,[[["global",3],["vec",3]],["systemcallerror",3]]],[11,"from","","",50,[[],["localjumperror",3]]],[11,"from","","",51,[[["cow",4]],["nomemoryerror",3]]],[11,"from","","",54,[[["cow",4]],["rangeerror",3]]],[11,"from","","",37,[[["global",3],["vec",3]],["scripterror",3]]],[11,"from","","",55,[[],["regexperror",3]]],[11,"from","","",57,[[["string",3]],["securityerror",3]]],[11,"from","","",49,[[["string",3]],["loaderror",3]]],[11,"from","","",35,[[["cow",4]],["typeerror",3]]],[11,"from","","",60,[[["cow",4]],["stopiteration",3]]],[11,"from","","",42,[[["cow",4]],["fibererror",3]]],[11,"from","","",53,[[["cow",4]],["notimplementederror",3]]],[11,"from","","",51,[[["global",3],["vec",3]],["nomemoryerror",3]]],[11,"from","","",66,[[["string",3]],["uncaughtthrowerror",3]]],[11,"from","","",39,[[],["encodingerror",3]]],[11,"from","","",52,[[["global",3],["vec",3]],["nomethoderror",3]]],[11,"from","","",41,[[],["exception",3]]],[11,"from","","",46,[[["cow",4]],["interrupt",3]]],[11,"from","","",46,[[["global",3],["vec",3]],["interrupt",3]]],[11,"from","","",61,[[],["syntaxerror",3]]],[11,"from","","",45,[[],["indexerror",3]]],[11,"from","","",53,[[["global",3],["vec",3]],["notimplementederror",3]]],[11,"from","","",41,[[["cow",4]],["exception",3]]],[11,"from","","",52,[[],["nomethoderror",3]]],[11,"from","","",67,[[["string",3]],["zerodivisionerror",3]]],[11,"from","","",57,[[],["securityerror",3]]],[11,"from","","",56,[[["string",3]],["runtimeerror",3]]],[11,"from","","",63,[[["cow",4]],["systemexit",3]]],[11,"from","","",34,[[],["fatal",3]]],[11,"from","","",36,[[],["nameerror",3]]],[11,"from","","",35,[[["global",3],["vec",3]],["typeerror",3]]],[11,"from","","",52,[[],["nomethoderror",3]]],[11,"from","","",58,[[["cow",4]],["signalexception",3]]],[11,"from","","",62,[[],["systemcallerror",3]]],[11,"from","","",53,[[],["notimplementederror",3]]],[11,"from","","",53,[[],["notimplementederror",3]]],[11,"from","","",38,[[],["argumenterror",3]]],[11,"from","","",49,[[["global",3],["vec",3]],["loaderror",3]]],[11,"from","","",62,[[["string",3]],["systemcallerror",3]]],[11,"from","","",42,[[],["fibererror",3]]],[11,"from","","",47,[[["global",3],["vec",3]],["ioerror",3]]],[11,"from","","",62,[[["cow",4]],["systemcallerror",3]]],[11,"from","","",64,[[["cow",4]],["systemstackerror",3]]],[11,"from","","",49,[[],["loaderror",3]]],[11,"from","","",52,[[["cow",4]],["nomethoderror",3]]],[11,"from","","",45,[[],["indexerror",3]]],[11,"from","","",61,[[["cow",4]],["syntaxerror",3]]],[11,"from","","",57,[[["cow",4]],["securityerror",3]]],[11,"from","","",65,[[["cow",4]],["threaderror",3]]],[11,"from","","",54,[[],["rangeerror",3]]],[11,"from","","",59,[[["string",3]],["standarderror",3]]],[11,"from","","",44,[[],["frozenerror",3]]],[11,"from","","",34,[[["cow",4]],["fatal",3]]],[11,"from","","",56,[[["global",3],["vec",3]],["runtimeerror",3]]],[11,"from","","",34,[[["cow",4]],["fatal",3]]],[11,"from","","",36,[[],["nameerror",3]]],[11,"from","","",60,[[],["stopiteration",3]]],[11,"from","","",40,[[["cow",4]],["eoferror",3]]],[11,"from","","",43,[[["global",3],["vec",3]],["floatdomainerror",3]]],[11,"from","","",58,[[],["signalexception",3]]],[11,"from","","",55,[[["cow",4]],["regexperror",3]]],[11,"from","","",62,[[["cow",4]],["systemcallerror",3]]],[11,"from","","",35,[[],["typeerror",3]]],[11,"from","","",40,[[],["eoferror",3]]],[11,"from","","",53,[[["cow",4]],["notimplementederror",3]]],[11,"from","","",35,[[["string",3]],["typeerror",3]]],[11,"from","","",40,[[["cow",4]],["eoferror",3]]],[11,"from","","",63,[[["global",3],["vec",3]],["systemexit",3]]],[11,"from","","",41,[[["global",3],["vec",3]],["exception",3]]],[11,"from","","",34,[[["global",3],["vec",3]],["fatal",3]]],[11,"from","","",42,[[["string",3]],["fibererror",3]]],[11,"from","","",63,[[["cow",4]],["systemexit",3]]],[11,"from","","",61,[[["cow",4]],["syntaxerror",3]]],[11,"from","","",59,[[["cow",4]],["standarderror",3]]],[11,"from","","",65,[[],["threaderror",3]]],[11,"from","","",64,[[["string",3]],["systemstackerror",3]]],[11,"from","","",46,[[["string",3]],["interrupt",3]]],[11,"from","","",55,[[["cow",4]],["regexperror",3]]],[11,"from","","",56,[[],["runtimeerror",3]]],[11,"from","","",41,[[["cow",4]],["exception",3]]],[11,"from","","",45,[[["global",3],["vec",3]],["indexerror",3]]],[11,"from","","",64,[[["cow",4]],["systemstackerror",3]]],[11,"from","","",47,[[["string",3]],["ioerror",3]]],[11,"from","","",47,[[["cow",4]],["ioerror",3]]],[11,"from","","",47,[[],["ioerror",3]]],[11,"from","","",37,[[["cow",4]],["scripterror",3]]],[11,"from","","",58,[[["global",3],["vec",3]],["signalexception",3]]],[11,"from","","",47,[[["cow",4]],["ioerror",3]]],[11,"from","","",53,[[["string",3]],["notimplementederror",3]]],[11,"from","","",51,[[["string",3]],["nomemoryerror",3]]],[11,"from","","",64,[[["global",3],["vec",3]],["systemstackerror",3]]],[11,"from","","",59,[[],["standarderror",3]]],[11,"from","","",64,[[],["systemstackerror",3]]],[11,"from","","",56,[[["cow",4]],["runtimeerror",3]]],[11,"from","","",37,[[],["scripterror",3]]],[11,"from","","",41,[[["string",3]],["exception",3]]],[11,"from","","",59,[[["global",3],["vec",3]],["standarderror",3]]],[11,"from","","",55,[[["global",3],["vec",3]],["regexperror",3]]],[11,"from","","",36,[[["cow",4]],["nameerror",3]]],[11,"from","","",48,[[["cow",4]],["keyerror",3]]],[11,"message","","",52,[[],["cow",4]]],[11,"name","","",52,[[],["cow",4]]],[11,"message","","",35,[[],["cow",4]]],[11,"name","","",35,[[],["cow",4]]],[11,"message","","",53,[[],["cow",4]]],[11,"name","","",53,[[],["cow",4]]],[11,"message","","",64,[[],["cow",4]]],[11,"name","","",64,[[],["cow",4]]],[11,"message","","",58,[[],["cow",4]]],[11,"name","","",58,[[],["cow",4]]],[11,"message","","",61,[[],["cow",4]]],[11,"name","","",61,[[],["cow",4]]],[11,"message","","",63,[[],["cow",4]]],[11,"name","","",63,[[],["cow",4]]],[11,"message","","",41,[[],["cow",4]]],[11,"name","","",41,[[],["cow",4]]],[11,"message","","",60,[[],["cow",4]]],[11,"name","","",60,[[],["cow",4]]],[11,"message","","",56,[[],["cow",4]]],[11,"name","","",56,[[],["cow",4]]],[11,"message","","",67,[[],["cow",4]]],[11,"name","","",67,[[],["cow",4]]],[11,"message","","",40,[[],["cow",4]]],[11,"name","","",40,[[],["cow",4]]],[11,"message","","",42,[[],["cow",4]]],[11,"name","","",42,[[],["cow",4]]],[11,"message","","",48,[[],["cow",4]]],[11,"name","","",48,[[],["cow",4]]],[11,"message","","",44,[[],["cow",4]]],[11,"name","","",44,[[],["cow",4]]],[11,"message","","",38,[[],["cow",4]]],[11,"name","","",38,[[],["cow",4]]],[11,"message","","",39,[[],["cow",4]]],[11,"name","","",39,[[],["cow",4]]],[11,"message","","",55,[[],["cow",4]]],[11,"name","","",55,[[],["cow",4]]],[11,"message","","",62,[[],["cow",4]]],[11,"name","","",62,[[],["cow",4]]],[11,"message","","",51,[[],["cow",4]]],[11,"name","","",51,[[],["cow",4]]],[11,"message","","",49,[[],["cow",4]]],[11,"name","","",49,[[],["cow",4]]],[11,"message","","",37,[[],["cow",4]]],[11,"name","","",37,[[],["cow",4]]],[11,"message","","",54,[[],["cow",4]]],[11,"name","","",54,[[],["cow",4]]],[11,"message","","",46,[[],["cow",4]]],[11,"name","","",46,[[],["cow",4]]],[11,"message","","",47,[[],["cow",4]]],[11,"name","","",47,[[],["cow",4]]],[11,"message","","",57,[[],["cow",4]]],[11,"name","","",57,[[],["cow",4]]],[11,"message","","",66,[[],["cow",4]]],[11,"name","","",66,[[],["cow",4]]],[11,"message","","",43,[[],["cow",4]]],[11,"name","","",43,[[],["cow",4]]],[11,"message","","",65,[[],["cow",4]]],[11,"name","","",65,[[],["cow",4]]],[11,"message","","",45,[[],["cow",4]]],[11,"name","","",45,[[],["cow",4]]],[11,"message","","",50,[[],["cow",4]]],[11,"name","","",50,[[],["cow",4]]],[11,"message","","",59,[[],["cow",4]]],[11,"name","","",59,[[],["cow",4]]],[11,"message","","",36,[[],["cow",4]]],[11,"name","","",36,[[],["cow",4]]],[11,"message","","",34,[[],["cow",4]]],[11,"name","","",34,[[],["cow",4]]],[11,"default","","",59,[[],["standarderror",3]]],[11,"default","","",66,[[],["uncaughtthrowerror",3]]],[11,"default","","",62,[[],["systemcallerror",3]]],[11,"default","","",60,[[],["stopiteration",3]]],[11,"default","","",43,[[],["floatdomainerror",3]]],[11,"default","","",57,[[],["securityerror",3]]],[11,"default","","",45,[[],["indexerror",3]]],[11,"default","","",46,[[],["interrupt",3]]],[11,"default","","",39,[[],["encodingerror",3]]],[11,"default","","",58,[[],["signalexception",3]]],[11,"default","","",36,[[],["nameerror",3]]],[11,"default","","",41,[[],["exception",3]]],[11,"default","","",67,[[],["zerodivisionerror",3]]],[11,"default","","",47,[[],["ioerror",3]]],[11,"default","","",38,[[],["argumenterror",3]]],[11,"default","","",35,[[],["typeerror",3]]],[11,"default","","",34,[[],["fatal",3]]],[11,"default","","",53,[[],["notimplementederror",3]]],[11,"default","","",51,[[],["nomemoryerror",3]]],[11,"default","","",61,[[],["syntaxerror",3]]],[11,"default","","",44,[[],["frozenerror",3]]],[11,"default","","",54,[[],["rangeerror",3]]],[11,"default","","",37,[[],["scripterror",3]]],[11,"default","","",40,[[],["eoferror",3]]],[11,"default","","",64,[[],["systemstackerror",3]]],[11,"default","","",48,[[],["keyerror",3]]],[11,"default","","",50,[[],["localjumperror",3]]],[11,"default","","",55,[[],["regexperror",3]]],[11,"default","","",56,[[],["runtimeerror",3]]],[11,"default","","",65,[[],["threaderror",3]]],[11,"default","","",63,[[],["systemexit",3]]],[11,"default","","",49,[[],["loaderror",3]]],[11,"default","","",52,[[],["nomethoderror",3]]],[11,"default","","",42,[[],["fibererror",3]]],[11,"cmp","","",52,[[["nomethoderror",3]],["ordering",4]]],[11,"cmp","","",50,[[["localjumperror",3]],["ordering",4]]],[11,"cmp","","",56,[[["runtimeerror",3]],["ordering",4]]],[11,"cmp","","",62,[[["systemcallerror",3]],["ordering",4]]],[11,"cmp","","",39,[[["encodingerror",3]],["ordering",4]]],[11,"cmp","","",38,[[["argumenterror",3]],["ordering",4]]],[11,"cmp","","",64,[[["systemstackerror",3]],["ordering",4]]],[11,"cmp","","",36,[[["nameerror",3]],["ordering",4]]],[11,"cmp","","",43,[[["floatdomainerror",3]],["ordering",4]]],[11,"cmp","","",41,[[["exception",3]],["ordering",4]]],[11,"cmp","","",46,[[["interrupt",3]],["ordering",4]]],[11,"cmp","","",35,[[["typeerror",3]],["ordering",4]]],[11,"cmp","","",57,[[["securityerror",3]],["ordering",4]]],[11,"cmp","","",51,[[["nomemoryerror",3]],["ordering",4]]],[11,"cmp","","",47,[[["ioerror",3]],["ordering",4]]],[11,"cmp","","",61,[[["syntaxerror",3]],["ordering",4]]],[11,"cmp","","",60,[[["stopiteration",3]],["ordering",4]]],[11,"cmp","","",45,[[["indexerror",3]],["ordering",4]]],[11,"cmp","","",40,[[["eoferror",3]],["ordering",4]]],[11,"cmp","","",53,[[["notimplementederror",3]],["ordering",4]]],[11,"cmp","","",34,[[["fatal",3]],["ordering",4]]],[11,"cmp","","",49,[[["loaderror",3]],["ordering",4]]],[11,"cmp","","",37,[[["scripterror",3]],["ordering",4]]],[11,"cmp","","",67,[[["zerodivisionerror",3]],["ordering",4]]],[11,"cmp","","",42,[[["fibererror",3]],["ordering",4]]],[11,"cmp","","",44,[[["frozenerror",3]],["ordering",4]]],[11,"cmp","","",58,[[["signalexception",3]],["ordering",4]]],[11,"cmp","","",48,[[["keyerror",3]],["ordering",4]]],[11,"cmp","","",65,[[["threaderror",3]],["ordering",4]]],[11,"cmp","","",66,[[["uncaughtthrowerror",3]],["ordering",4]]],[11,"cmp","","",59,[[["standarderror",3]],["ordering",4]]],[11,"cmp","","",63,[[["systemexit",3]],["ordering",4]]],[11,"cmp","","",54,[[["rangeerror",3]],["ordering",4]]],[11,"cmp","","",55,[[["regexperror",3]],["ordering",4]]],[11,"clone","","",44,[[],["frozenerror",3]]],[11,"clone","","",57,[[],["securityerror",3]]],[11,"clone","","",46,[[],["interrupt",3]]],[11,"clone","","",54,[[],["rangeerror",3]]],[11,"clone","","",38,[[],["argumenterror",3]]],[11,"clone","","",42,[[],["fibererror",3]]],[11,"clone","","",64,[[],["systemstackerror",3]]],[11,"clone","","",60,[[],["stopiteration",3]]],[11,"clone","","",40,[[],["eoferror",3]]],[11,"clone","","",52,[[],["nomethoderror",3]]],[11,"clone","","",66,[[],["uncaughtthrowerror",3]]],[11,"clone","","",65,[[],["threaderror",3]]],[11,"clone","","",59,[[],["standarderror",3]]],[11,"clone","","",50,[[],["localjumperror",3]]],[11,"clone","","",47,[[],["ioerror",3]]],[11,"clone","","",63,[[],["systemexit",3]]],[11,"clone","","",35,[[],["typeerror",3]]],[11,"clone","","",62,[[],["systemcallerror",3]]],[11,"clone","","",51,[[],["nomemoryerror",3]]],[11,"clone","","",61,[[],["syntaxerror",3]]],[11,"clone","","",48,[[],["keyerror",3]]],[11,"clone","","",41,[[],["exception",3]]],[11,"clone","","",43,[[],["floatdomainerror",3]]],[11,"clone","","",58,[[],["signalexception",3]]],[11,"clone","","",34,[[],["fatal",3]]],[11,"clone","","",45,[[],["indexerror",3]]],[11,"clone","","",49,[[],["loaderror",3]]],[11,"clone","","",37,[[],["scripterror",3]]],[11,"clone","","",67,[[],["zerodivisionerror",3]]],[11,"clone","","",53,[[],["notimplementederror",3]]],[11,"clone","","",39,[[],["encodingerror",3]]],[11,"clone","","",56,[[],["runtimeerror",3]]],[11,"clone","","",55,[[],["regexperror",3]]],[11,"clone","","",36,[[],["nameerror",3]]],[11,"drop","artichoke::parser","",2,[[]]],[11,"clone","","",1,[[],["state",4]]],[11,"clone","artichoke::repl","",3,[[],["parserallocerror",3]]],[11,"clone","","",4,[[],["parserlinecounterror",3]]],[11,"clone","","",5,[[],["parserinternalerror",3]]],[11,"clone","","",6,[[],["promptconfig",3]]],[11,"default","artichoke::parser","",1,[[]]],[11,"default","artichoke::repl","",3,[[],["parserallocerror",3]]],[11,"default","","",4,[[],["parserlinecounterror",3]]],[11,"default","","",5,[[],["parserinternalerror",3]]],[11,"default","","",6,[[]]],[11,"cmp","artichoke::parser","",1,[[["state",4]],["ordering",4]]],[11,"cmp","artichoke::repl","",3,[[["parserallocerror",3]],["ordering",4]]],[11,"cmp","","",4,[[["parserlinecounterror",3]],["ordering",4]]],[11,"cmp","","",5,[[["parserinternalerror",3]],["ordering",4]]],[11,"cmp","","",6,[[["promptconfig",3]],["ordering",4]]],[11,"eq","artichoke::parser","",1,[[["state",4]]]],[11,"eq","artichoke::repl","",3,[[["parserallocerror",3]]]],[11,"ne","","",3,[[["parserallocerror",3]]]],[11,"eq","","",4,[[["parserlinecounterror",3]]]],[11,"ne","","",4,[[["parserlinecounterror",3]]]],[11,"eq","","",5,[[["parserinternalerror",3]]]],[11,"ne","","",5,[[["parserinternalerror",3]]]],[11,"eq","","",6,[[["promptconfig",3]]]],[11,"ne","","",6,[[["promptconfig",3]]]],[11,"partial_cmp","artichoke::parser","",1,[[["state",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","artichoke::repl","",3,[[["parserallocerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["parserallocerror",3]]]],[11,"le","","",3,[[["parserallocerror",3]]]],[11,"gt","","",3,[[["parserallocerror",3]]]],[11,"ge","","",3,[[["parserallocerror",3]]]],[11,"partial_cmp","","",4,[[["parserlinecounterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["parserlinecounterror",3]]]],[11,"le","","",4,[[["parserlinecounterror",3]]]],[11,"gt","","",4,[[["parserlinecounterror",3]]]],[11,"ge","","",4,[[["parserlinecounterror",3]]]],[11,"partial_cmp","","",5,[[["parserinternalerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["parserinternalerror",3]]]],[11,"le","","",5,[[["parserinternalerror",3]]]],[11,"gt","","",5,[[["parserinternalerror",3]]]],[11,"ge","","",5,[[["parserinternalerror",3]]]],[11,"partial_cmp","","",6,[[["promptconfig",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["promptconfig",3]]]],[11,"le","","",6,[[["promptconfig",3]]]],[11,"gt","","",6,[[["promptconfig",3]]]],[11,"ge","","",6,[[["promptconfig",3]]]],[11,"fmt","artichoke::parser","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke::repl","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","artichoke::parser","",1,[[]]],[11,"hash","artichoke::repl","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"new","artichoke::prelude","Create a new interpreter from an underlying `mrb` and a…",0,[[["mrb_state",3],["nonnull",3],["global",3],["box",3],["state",3]],["artichoke",3]]],[11,"with_ffi_boundary","","Execute a a closure by moving the [`State`] into the `mrb`…",0,[[],[["result",4],["interpreterextracterror",3]]]],[11,"into_raw","","Consume an interpreter and return the pointer to the…",0,[[["artichoke",3]]]],[11,"close","","Consume an interpreter and free all live objects.",0,[[]]],[11,"lookup_symbol_with_trailing_nul","","",0,[[],[["error",3],["result",4],["option",4]]]],[11,"intern_bytes_with_trailing_nul","","",0,[[],[["result",4],["error",3]]]],[11,"check_interned_bytes_with_trailing_nul","","",0,[[],[["option",4],["error",3],["result",4]]]],[11,"new","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_copyright","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_description","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_engine","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_engine_version","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_patchlevel","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_platform","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_release_date","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_revision","","",9,[[],["releasemetadata",3]]],[11,"with_ruby_version","","",9,[[],["releasemetadata",3]]],[11,"with_artichoke_compiler_version","","",9,[[["option",4]],["releasemetadata",3]]],[11,"ruby_copyright","","",9,[[]]],[11,"ruby_description","","",9,[[]]],[11,"ruby_engine","","",9,[[]]],[11,"ruby_engine_version","","",9,[[]]],[11,"ruby_patchlevel","","",9,[[]]],[11,"ruby_platform","","",9,[[]]],[11,"ruby_release_date","","",9,[[]]],[11,"ruby_revision","","",9,[[]]],[11,"ruby_version","","",9,[[]]],[11,"artichoke_compiler_version","","",9,[[],["option",4]]],[11,"new","","Create a new guard that wraps an interpreter.",33,[[["artichoke",3]],["guard",3]]],[11,"interp","","Access the inner guarded interpreter.",33,[[],["artichoke",3]]],[11,"class_name","","Ruby `Class` name for VM type.",28,[[]]],[11,"new","","Construct a new, default `fatal` Ruby exception.",34,[[],["fatal",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",34,[[]]],[11,"name","","Return this Ruby exception\'s class name.",34,[[]]],[11,"new","","Construct a new, default `TypeError` Ruby exception.",35,[[],["typeerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",35,[[]]],[11,"name","","Return this Ruby exception\'s class name.",35,[[]]],[11,"new","","Construct a new, default `NameError` Ruby exception.",36,[[],["nameerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",36,[[]]],[11,"name","","Return this Ruby exception\'s class name.",36,[[]]],[11,"new","","Construct a new, default `ScriptError` Ruby exception.",37,[[],["scripterror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",37,[[]]],[11,"name","","Return this Ruby exception\'s class name.",37,[[]]],[11,"new","","Construct a new, default `ArgumentError` Ruby exception.",38,[[],["argumenterror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",38,[[]]],[11,"name","","Return this Ruby exception\'s class name.",38,[[]]],[11,"new","","Construct a new, default `EncodingError` Ruby exception.",39,[[],["encodingerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",39,[[]]],[11,"name","","Return this Ruby exception\'s class name.",39,[[]]],[11,"new","","Construct a new, default `EOFError` Ruby exception.",40,[[],["eoferror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",40,[[]]],[11,"name","","Return this Ruby exception\'s class name.",40,[[]]],[11,"new","","Construct a new, default `Exception` Ruby exception.",41,[[],["exception",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",41,[[]]],[11,"name","","Return this Ruby exception\'s class name.",41,[[]]],[11,"new","","Construct a new, default `FiberError` Ruby exception.",42,[[],["fibererror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",42,[[]]],[11,"name","","Return this Ruby exception\'s class name.",42,[[]]],[11,"new","","Construct a new, default `FloatDomainError` Ruby exception.",43,[[],["floatdomainerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",43,[[]]],[11,"name","","Return this Ruby exception\'s class name.",43,[[]]],[11,"new","","Construct a new, default `FrozenError` Ruby exception.",44,[[],["frozenerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",44,[[]]],[11,"name","","Return this Ruby exception\'s class name.",44,[[]]],[11,"new","","Construct a new, default `IndexError` Ruby exception.",45,[[],["indexerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",45,[[]]],[11,"name","","Return this Ruby exception\'s class name.",45,[[]]],[11,"new","","Construct a new, default `Interrupt` Ruby exception.",46,[[],["interrupt",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",46,[[]]],[11,"name","","Return this Ruby exception\'s class name.",46,[[]]],[11,"new","","Construct a new, default `IOError` Ruby exception.",47,[[],["ioerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",47,[[]]],[11,"name","","Return this Ruby exception\'s class name.",47,[[]]],[11,"new","","Construct a new, default `KeyError` Ruby exception.",48,[[],["keyerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",48,[[]]],[11,"name","","Return this Ruby exception\'s class name.",48,[[]]],[11,"new","","Construct a new, default `LoadError` Ruby exception.",49,[[],["loaderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",49,[[]]],[11,"name","","Return this Ruby exception\'s class name.",49,[[]]],[11,"new","","Construct a new, default `LocalJumpError` Ruby exception.",50,[[],["localjumperror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",50,[[]]],[11,"name","","Return this Ruby exception\'s class name.",50,[[]]],[11,"new","","Construct a new, default `NoMemoryError` Ruby exception.",51,[[],["nomemoryerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",51,[[]]],[11,"name","","Return this Ruby exception\'s class name.",51,[[]]],[11,"new","","Construct a new, default `NoMethodError` Ruby exception.",52,[[],["nomethoderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",52,[[]]],[11,"name","","Return this Ruby exception\'s class name.",52,[[]]],[11,"new","","Construct a new, default `NotImplementedError` Ruby…",53,[[],["notimplementederror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",53,[[]]],[11,"name","","Return this Ruby exception\'s class name.",53,[[]]],[11,"new","","Construct a new, default `RangeError` Ruby exception.",54,[[],["rangeerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",54,[[]]],[11,"name","","Return this Ruby exception\'s class name.",54,[[]]],[11,"new","","Construct a new, default `RegexpError` Ruby exception.",55,[[],["regexperror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",55,[[]]],[11,"name","","Return this Ruby exception\'s class name.",55,[[]]],[11,"new","","Construct a new, default `RuntimeError` Ruby exception.",56,[[],["runtimeerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",56,[[]]],[11,"name","","Return this Ruby exception\'s class name.",56,[[]]],[11,"new","","Construct a new, default `SecurityError` Ruby exception.",57,[[],["securityerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",57,[[]]],[11,"name","","Return this Ruby exception\'s class name.",57,[[]]],[11,"new","","Construct a new, default `SignalException` Ruby exception.",58,[[],["signalexception",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",58,[[]]],[11,"name","","Return this Ruby exception\'s class name.",58,[[]]],[11,"new","","Construct a new, default `StandardError` Ruby exception.",59,[[],["standarderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",59,[[]]],[11,"name","","Return this Ruby exception\'s class name.",59,[[]]],[11,"new","","Construct a new, default `StopIteration` Ruby exception.",60,[[],["stopiteration",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",60,[[]]],[11,"name","","Return this Ruby exception\'s class name.",60,[[]]],[11,"new","","Construct a new, default `SyntaxError` Ruby exception.",61,[[],["syntaxerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",61,[[]]],[11,"name","","Return this Ruby exception\'s class name.",61,[[]]],[11,"new","","Construct a new, default `SystemCallError` Ruby exception.",62,[[],["systemcallerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",62,[[]]],[11,"name","","Return this Ruby exception\'s class name.",62,[[]]],[11,"new","","Construct a new, default `SystemExit` Ruby exception.",63,[[],["systemexit",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",63,[[]]],[11,"name","","Return this Ruby exception\'s class name.",63,[[]]],[11,"new","","Construct a new, default `SystemStackError` Ruby exception.",64,[[],["systemstackerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",64,[[]]],[11,"name","","Return this Ruby exception\'s class name.",64,[[]]],[11,"new","","Construct a new, default `ThreadError` Ruby exception.",65,[[],["threaderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",65,[[]]],[11,"name","","Return this Ruby exception\'s class name.",65,[[]]],[11,"new","","Construct a new, default `UncaughtThrowError` Ruby…",66,[[],["uncaughtthrowerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",66,[[]]],[11,"name","","Return this Ruby exception\'s class name.",66,[[]]],[11,"new","","Construct a new, default `ZeroDivisionError` Ruby exception.",67,[[],["zerodivisionerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",67,[[]]],[11,"name","","Return this Ruby exception\'s class name.",67,[[]]]],"p":[[3,"Artichoke"],[4,"State"],[3,"Parser"],[3,"ParserAllocError"],[3,"ParserLineCountError"],[3,"ParserInternalError"],[3,"PromptConfig"],[8,"RubyException"],[8,"MrbGarbageCollection"],[3,"ReleaseMetadata"],[8,"CoerceToNumeric"],[8,"DefineConstant"],[8,"Convert"],[8,"ConvertMut"],[8,"TryConvert"],[8,"TryConvertMut"],[8,"Debug"],[8,"Eval"],[8,"File"],[8,"Globals"],[8,"Intern"],[8,"Io"],[8,"LoadSources"],[4,"IncrementLinenoError"],[8,"Parser"],[8,"Prng"],[8,"Regexp"],[8,"TopSelf"],[4,"Ruby"],[4,"Rust"],[8,"Value"],[8,"Warn"],[3,"Error"],[3,"Guard"],[3,"Fatal"],[3,"TypeError"],[3,"NameError"],[3,"ScriptError"],[3,"ArgumentError"],[3,"EncodingError"],[3,"EOFError"],[3,"Exception"],[3,"FiberError"],[3,"FloatDomainError"],[3,"FrozenError"],[3,"IndexError"],[3,"Interrupt"],[3,"IOError"],[3,"KeyError"],[3,"LoadError"],[3,"LocalJumpError"],[3,"NoMemoryError"],[3,"NoMethodError"],[3,"NotImplementedError"],[3,"RangeError"],[3,"RegexpError"],[3,"RuntimeError"],[3,"SecurityError"],[3,"SignalException"],[3,"StandardError"],[3,"StopIteration"],[3,"SyntaxError"],[3,"SystemCallError"],[3,"SystemExit"],[3,"SystemStackError"],[3,"ThreadError"],[3,"UncaughtThrowError"],[3,"ZeroDivisionError"]]},\
"artichoke_backend":{"doc":"artichoke-backend`artichoke-backend` crate provides a Ruby…","i":[[0,"core","artichoke_backend","A \\\"prelude\\\" for users of the `artichoke-core` crate.",null,null],[8,"CoerceToNumeric","artichoke_backend::core","Coerce Ruby values to native numerics (floats and integers).",null,null],[16,"Value","","Concrete type of boxed Ruby value as inputs to coerce…",0,null],[16,"Float","","Concrete float type to coerce values into, e.g. [`f64`].",0,null],[16,"Error","","Concrete error type for errors encountered when coercing…",0,null],[10,"coerce_to_float","","Coerce the given Ruby value to a `Float`.",0,[[],["result",4]]],[8,"DefineConstant","","Deifne constants on an interprter.",null,null],[16,"Value","","Concrete type for Ruby values.",1,null],[16,"Error","","Concrete error type for fallible operations.",1,null],[10,"define_global_constant","","Define a global constant.",1,[[],["result",4]]],[10,"define_class_constant","","Define a class constant.",1,[[],["result",4]]],[10,"define_module_constant","","Define a module constant.",1,[[],["result",4]]],[8,"Convert","","Infallible conversion between two types.",null,null],[10,"convert","","Performs the infallible conversion.",2,[[]]],[8,"ConvertMut","","Mutable infallible conversion between two types.",null,null],[10,"convert_mut","","Performs the infallible conversion.",3,[[]]],[8,"TryConvert","","Fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",4,null],[10,"try_convert","","Performs the fallible conversion.",4,[[],["result",4]]],[8,"TryConvertMut","","Mutable fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",5,null],[10,"try_convert_mut","","Performs the fallible conversion.",5,[[],["result",4]]],[8,"Debug","","Debugging and `Exception` message support.",null,null],[16,"Value","","Concrete type for return values from eval.",6,null],[10,"inspect_type_name_for_value","","Return a name for thie given value\'s type suitable for…",6,[[]]],[8,"Eval","","Execute code and retrieve its result.",null,null],[16,"Value","","Concrete type for return values from eval.",7,null],[16,"Error","","Concrete error type for eval functions.",7,null],[10,"eval","","Eval code on the Artichoke interpreter using the current…",7,[[],["result",4]]],[10,"eval_os_str","","Eval code on the Artichoke interpreter using the current…",7,[[["osstr",3]],["result",4]]],[10,"eval_file","","Eval code on the Artichoke interpreter using a new file…",7,[[["path",3]],["result",4]]],[8,"File","","Rust extension hook that can be required.",null,null],[16,"Artichoke","","Concrete type for interpreter.",8,null],[16,"Error","","Concrete error type for eval functions.",8,null],[10,"require","","Called when the filename mapped to this type is required…",8,[[],["result",4]]],[8,"Globals","","Get and set global variables on an interpreter.",null,null],[16,"Value","","Concrete value type for global variables.",9,null],[16,"Error","","Concrete error type for failures manipulating global…",9,null],[10,"set_global_variable","","Set global variable pointed to by `name` to the given Ruby…",9,[[],["result",4]]],[10,"unset_global_variable","","Unset global variable pointed to by `name`.",9,[[],["result",4]]],[10,"get_global_variable","","Get the Ruby value stored in the global variable pointed…",9,[[],[["result",4],["option",4]]]],[8,"Intern","","Store and retrieve bytestrings that have the same lifetime…",null,null],[16,"Symbol","","Concrete type for symbol identifiers.",10,null],[16,"Error","","Concrete type for errors returned while interning symbols.",10,null],[18,"SYMBOL_RANGE_START","","The initial `Symbol` index returned by the interner.",10,null],[10,"intern_bytes","","Store an immutable bytestring for the life of the…",10,[[],["result",4]]],[10,"check_interned_bytes","","Check if a bytestring is already interned and return its…",10,[[],[["result",4],["option",4]]]],[11,"intern_string","","Store an immutable string for the life of the interpreter.",10,[[],["result",4]]],[11,"check_interned_string","","Check if a string is already interned and return its…",10,[[],[["result",4],["option",4]]]],[10,"lookup_symbol","","Retrieve the original byte content of an interned…",10,[[],[["result",4],["option",4]]]],[10,"symbol_count","","Retrieve the number of unique strings interned.",10,[[]]],[8,"Io","","Make I/O external to the interpreter.",null,null],[16,"Error","","Concrete error type for errors encountered when reading…",11,null],[10,"print","","Writes the given bytes to the interpreter stdout stream.",11,[[],["result",4]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",11,[[],["result",4]]],[8,"LoadSources","","Load Ruby sources and Rust extensions into an interpreter.",null,null],[16,"Artichoke","","Concrete type for interpreter.",12,null],[16,"Error","","Concrete type for errors returned from filesystem IO.",12,null],[16,"Exception","","Concrete type for errors returned by `File::require`.",12,null],[10,"def_file_for_type","","Add a Rust extension hook to the virtual filesystem. A…",12,[[],["result",4]]],[10,"def_rb_source_file","","Add a Ruby source to the virtual filesystem.",12,[[],["result",4]]],[10,"source_is_file","","Test for a source file at a path.",12,[[],["result",4]]],[10,"load_source","","Load source located at the given path.",12,[[],["result",4]]],[10,"require_source","","Require source located at the given path.",12,[[],["result",4]]],[10,"read_source_file_contents","","Retrieve file contents for a source file.",12,[[],[["result",4],["cow",4]]]],[4,"IncrementLinenoError","","Errors encountered when incrementing line numbers on…",null,null],[13,"Overflow","","An overflow occurred when incrementing the line number.",13,null],[8,"Parser","","Manage parser state, active filename context, and line…",null,null],[16,"Context","","Concrete type for parser context.",14,null],[16,"Error","","Error type for Parser APIs.",14,null],[10,"reset_parser","","Reset parser state to initial values.",14,[[],["result",4]]],[10,"fetch_lineno","","Fetch the current line number from the parser state.",14,[[],["result",4]]],[10,"add_fetch_lineno","","Increment line number and return the new value.",14,[[],["result",4]]],[10,"push_context","","Set the currently active context by modifying the parser…",14,[[],["result",4]]],[10,"pop_context","","Remove the current active context and return it.",14,[[],[["option",4],["result",4]]]],[10,"peek_context","","Return a reference to the currently active context.",14,[[],[["result",4],["option",4]]]],[8,"Prng","","Interpreter global psuedorandom number generator.",null,null],[16,"Error","","Concrete type for PRNG errors.",15,null],[16,"Prng","","Conrete type for the interpreter psuedorandom number…",15,null],[10,"prng","","Return a shared reference to the interpreter psuedorandom…",15,[[],["result",4]]],[10,"prng_mut","","Return a mutable reference to the interpreter psuedorandom…",15,[[],["result",4]]],[8,"Regexp","","Track the state of `Regexp` globals and global interpreter…",null,null],[16,"Error","","Concrete error type for errors encountered when…",16,null],[10,"active_regexp_globals","","Retrieve the current number of set `Regexp` global…",16,[[],["result",4]]],[10,"set_active_regexp_globals","","Set the current number of set `Regexp` global variables.",16,[[],["result",4]]],[10,"clear_regexp","","Clear all `Regexp` state.",16,[[],["result",4]]],[8,"ReleaseMetadata","","Information about an Artichoke build.",null,null],[10,"ruby_copyright","","Copyright information.",17,[[]]],[10,"ruby_description","","A description of the current build.",17,[[]]],[10,"ruby_engine","","The engine, or VM, used in the current build.",17,[[]]],[10,"ruby_engine_version","","The version of the engine, or VM, used in the current build.",17,[[]]],[10,"ruby_patchlevel","","The patch level the current build.",17,[[]]],[10,"ruby_platform","","The target triple of the platform this build targets.",17,[[]]],[10,"ruby_release_date","","The build date of this release.",17,[[]]],[10,"ruby_revision","","The revision count of the Artichoke git repo used for this…",17,[[]]],[10,"ruby_version","","The target MRI Ruby version for this build.",17,[[]]],[10,"artichoke_compiler_version","","A description of the compiler used to build Artichoke.",17,[[],["option",4]]],[8,"TopSelf","","Return a `Value`-wrapped reference to top self.",null,null],[16,"Value","","Concrete [`Value`] type.",18,null],[10,"top_self","","Return a [`Value`]-wrapped reference to \\\"top self\\\".",18,[[]]],[4,"Ruby","","Classes of Ruby types.",null,null],[13,"Array","","Ruby `Array` type.",19,null],[13,"Bool","","Ruby `TrueClass` and `FalseClass` type.",19,null],[13,"Class","","Ruby `Class` type.",19,null],[13,"CPointer","","FFI type for a borrowed C pointer.",19,null],[13,"Data","","FFI type for an owned C pointer.",19,null],[13,"Exception","","Ruby `Exception` type.",19,null],[13,"Fiber","","Ruby `Fiber` type.",19,null],[13,"Fixnum","","Ruby `Fixnum` type.",19,null],[13,"Float","","Ruby `Float` type.",19,null],[13,"Hash","","Ruby `Hash` type.",19,null],[13,"InlineStruct","","Internal type for non-heap allocated structs.",19,null],[13,"Module","","Ruby `Module` type.",19,null],[13,"Nil","","Ruby `nil` singleton type, the only instance of `NilClass`.",19,null],[13,"Object","","Ruby `Object` type.",19,null],[13,"Proc","","Ruby `Proc` type.",19,null],[13,"Range","","Ruby `Range` type.",19,null],[13,"SingletonClass","","Internal type for the singleton class of an object.",19,null],[13,"String","","Ruby `String` type.",19,null],[13,"Symbol","","Ruby `Symbol` type.",19,null],[13,"Unreachable","","Unreachable interpreter value. Receiving one of these from…",19,null],[13,"RecursiveSelfOwnership","","A special `Value` that is a placeholder for collections…",19,null],[4,"Rust","","Classes of Rust types.",null,null],[13,"Bool","","Rust `bool` type.",20,null],[13,"Bytes","","Rust `Vec<u8>` type.",20,null],[13,"Float","","Rust float type.",20,null],[13,"Map","","Rust `HashMap<K, V>` type.",20,null],[13,"Object","","Aribtrary Rust struct type.",20,null],[13,"SignedInt","","Rust signed integer type.",20,null],[13,"String","","Rust `String` type.",20,null],[13,"UnsignedInt","","Rust unsigned integer type.",20,null],[13,"Vec","","Rust `Vec<T>` type.",20,null],[8,"Value","","A boxed Ruby value owned by the interpreter.",null,null],[16,"Artichoke","","Concrete type for Artichoke interpreter.",21,null],[16,"Arg","","Concrete type for arguments passed to `funcall`.",21,null],[16,"Value","","Concrete type for results from `funcall`.",21,null],[16,"Block","","Concrete type for blocks passed to `funcall`.",21,null],[16,"Error","","Concrete error type for funcall errors.",21,null],[10,"funcall","","Call a method on this [`Value`] with arguments and an…",21,[[["option",4]],["result",4]]],[11,"try_into","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[11,"try_into_mut","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[10,"freeze","","Call `#freeze` on this [`Value`].",21,[[],["result",4]]],[10,"is_frozen","","Call `#frozen?` on this [`Value`].",21,[[]]],[10,"is_nil","","Whether `self` is `nil`",21,[[]]],[10,"respond_to","","Whether `self` responds to a method.",21,[[],["result",4]]],[10,"inspect","","Call `#inspect` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"to_s","","Call `#to_s` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"ruby_type","","Return this values Rust-mapped type tag.",21,[[],["ruby",4]]],[8,"Warn","","Emit warnings during interpreter execution to stderr.",null,null],[16,"Error","","Concrete error type for errors encountered when outputting…",22,null],[10,"warn","","Emit a warning message using `Warning#warn`.",22,[[],["result",4]]],[0,"block","artichoke_backend","",null,null],[3,"NoBlockGiven","artichoke_backend::block","",null,null],[11,"new","","Construce a new, empty no block given error.",23,[[]]],[11,"ruby_type","","Return the [`Ruby`] type of the object given instead of a…",23,[[],["ruby",4]]],[3,"Block","","",null,null],[11,"new","","Construct a `Block` from a Ruby value.",24,[[["mrb_value",3]],["option",4]]],[11,"new_unchecked","","Construct a `Block` from a Ruby value.",24,[[["mrb_value",3]]]],[11,"inner","","",24,[[],["mrb_value",3]]],[11,"yield_arg","","",24,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[0,"class","artichoke_backend","",null,null],[3,"Registry","artichoke_backend::class","A registry for Class specs that uses types as keys.",null,null],[3,"Builder","","",null,null],[11,"for_spec","","",25,[[["spec",3],["artichoke",3]]]],[11,"value_is_rust_object","","",25,[[]]],[11,"with_super_class","","",25,[[],[["error",3],["result",4]]]],[11,"add_method","","",25,[[["method",6],["mrb_aspec",6]],[["result",4],["constantnameerror",3]]]],[11,"add_self_method","","",25,[[["method",6],["mrb_aspec",6]],[["result",4],["constantnameerror",3]]]],[11,"define","","",25,[[],[["result",4],["notdefinederror",4]]]],[3,"Rclass","","",null,null],[11,"new","","",26,[[["box",3],["option",4],["cstr",3],["enclosingrubyscope",4]]]],[11,"resolve","","Resolve a type\'s [`sys::RClass`] using its enclosing scope…",26,[[],[["nonnull",3],["option",4]]]],[3,"Spec","","",null,null],[11,"new","","",27,[[["option",4],["option",4],["enclosingrubyscope",4],["free",6]],[["result",4],["constantnameerror",3]]]],[11,"data_type","","",27,[[],["mrb_data_type",3]]],[11,"name","","",27,[[],["cow",4]]],[11,"name_c_str","","",27,[[],["cstr",3]]],[11,"enclosing_scope","","",27,[[],[["enclosingrubyscope",4],["option",4]]]],[11,"fqname","","",27,[[],["cow",4]]],[11,"rclass","","",27,[[],["rclass",3]]],[0,"class_registry","artichoke_backend","",null,null],[8,"ClassRegistry","artichoke_backend::class_registry","",null,null],[10,"def_class","","",28,[[["spec",3]],[["error",3],["result",4]]]],[10,"class_spec","","",28,[[],[["error",3],["result",4],["option",4]]]],[11,"is_class_defined","","",28,[[]]],[10,"class_of","","",28,[[],[["option",4],["error",3],["result",4]]]],[10,"new_instance","","",28,[[],[["option",4],["error",3],["result",4]]]],[0,"convert","artichoke_backend","",null,null],[8,"BoxUnboxVmValue","artichoke_backend::convert","",null,null],[16,"Unboxed","","",29,null],[16,"Guarded","","",29,null],[18,"RUBY_TYPE","","",29,null],[10,"unbox_from_value","","SafetyImplementations may return owned values. These…",29,[[["artichoke",3],["value",3]],[["error",3],["result",4],["unboxedvalueguard",3]]]],[10,"alloc_value","","",29,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[10,"box_into_value","","",29,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[10,"free","","",29,[[]]],[8,"HeapAllocatedData","","",null,null],[18,"RUBY_TYPE","","",30,null],[3,"Immediate","","",null,null],[3,"UnboxedValueGuard","","",null,null],[3,"UnboxRubyError","","Failed to convert from boxed Ruby value to a Rust type.",null,null],[12,"from","","",31,null],[12,"into","","",31,null],[11,"new","","",31,[[["value",3],["rust",4]]]],[3,"BoxIntoRubyError","","Failed to convert from Rust type to a boxed Ruby value.",null,null],[12,"from","","",32,null],[12,"into","","",32,null],[11,"new","","",32,[[["rust",4],["ruby",4]]]],[0,"def","artichoke_backend","",null,null],[6,"Free","artichoke_backend::def","Typedef for an mruby free function for an `mrb_value` with…",null,null],[5,"box_unbox_free","","A generic implementation of a [`Free`] function for…",null,[[]]],[6,"Method","","Typedef for a method exposed in the mruby interpreter.",null,null],[4,"EnclosingRubyScope","","Typesafe wrapper for the `RClass *` of the enclosing scope…",null,null],[13,"Class","","Reference to a Ruby `Class` enclosing scope.",33,null],[13,"Module","","Reference to a Ruby `Module` enclosing scope.",33,null],[11,"class","","Factory for [`EnclosingRubyScope::Class`] that clones a…",33,[[["spec",3]]]],[11,"module","","Factory for [`EnclosingRubyScope::Module`] that clones a…",33,[[["spec",3]]]],[11,"rclass","","Resolve the `RClass *` of the wrapped class or module.",33,[[],[["nonnull",3],["option",4]]]],[11,"fqname","","Get the fully qualified name of the wrapped class or module.",33,[[],["cow",4]]],[3,"ConstantNameError","","",null,null],[11,"new","","",34,[[]]],[4,"NotDefinedError","","",null,null],[13,"EnclosingScope","","",35,null],[13,"Super","","",35,null],[13,"Class","","",35,null],[13,"Method","","",35,null],[13,"Module","","",35,null],[13,"GlobalConstant","","",35,null],[13,"ClassConstant","","",35,null],[13,"ModuleConstant","","",35,null],[11,"enclosing_scope","","",35,[[]]],[11,"super_class","","",35,[[]]],[11,"class","","",35,[[]]],[11,"method","","",35,[[]]],[11,"module","","",35,[[]]],[11,"global_constant","","",35,[[]]],[11,"class_constant","","",35,[[]]],[11,"module_constant","","",35,[[]]],[11,"fqdn","","",35,[[]]],[11,"item_type","","",35,[[]]],[0,"error","artichoke_backend","",null,null],[3,"Error","artichoke_backend::error","",null,null],[5,"raise","","Raise implementation for `RubyException` boxed trait…",null,[[["guard",3]]]],[8,"RubyException","","Polymorphic exception type that corresponds to Ruby\'s…",null,null],[10,"message","","Message of the `Exception`.",36,[[],["cow",4]]],[10,"name","","Class name of the `Exception`.",36,[[],["cow",4]]],[10,"vm_backtrace","","Optional backtrace specified by a `Vec` of frames.",36,[[["artichoke",3]],[["vec",3],["option",4]]]],[10,"as_mrb_value","","Return a raiseable [`sys::mrb_value`].",36,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[0,"exception_handler","artichoke_backend","",null,null],[3,"Builder","artichoke_backend::exception_handler","Incrementally construct a [`CaughtException`].",null,null],[11,"new","","Construct a new, empty `Builder`.",37,[[]]],[11,"with_value","","",37,[[["value",3]]]],[11,"with_name","","",37,[[["string",3]]]],[11,"with_message","","",37,[[["vec",3]]]],[11,"finish","","",37,[[],["caughtexception",3]]],[3,"CaughtException","","An `Exception` rescued with [`sys::mrb_protect`].",null,null],[11,"builder","","Incrementally construct a [`CaughtException`].",38,[[],["builder",3]]],[11,"with_value_class_and_message","","Construct a new `CaughtException`.",38,[[["vec",3],["value",3],["string",3]]]],[5,"last_error","","Transform a `Exception` Ruby `Value` into an [`Error`].",null,[[["value",3],["artichoke",3]],[["error",3],["result",4]]]],[0,"extn","artichoke_backend","",null,null],[0,"core","artichoke_backend::extn","",null,null],[0,"array","artichoke_backend::extn::core","",null,null],[0,"args","artichoke_backend::extn::core::array","",null,null],[4,"ElementReference","artichoke_backend::extn::core::array::args","",null,null],[13,"Empty","","",39,null],[13,"Index","","",39,null],[13,"StartLen","","",39,null],[5,"element_reference","","",null,[[["option",4],["value",3],["artichoke",3]],[["elementreference",4],["error",3],["result",4]]]],[5,"element_assignment","","",null,[[["option",4],["value",3],["artichoke",3]],[["error",3],["result",4]]]],[0,"mruby","artichoke_backend::extn::core::array","",null,null],[5,"init","artichoke_backend::extn::core::array::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::array","",null,null],[5,"clear","artichoke_backend::extn::core::array::trampoline","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"element_reference","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"element_assignment","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"pop","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"concat","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"push","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"reverse_bang","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"len","","",null,[[["value",3],["artichoke",3]],[["error",3],["result",4]]]],[5,"initialize","","",null,[[["option",4],["block",3],["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"initialize_copy","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"shift","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[3,"Array","artichoke_backend::extn::core::array","Contiguous growable vector that implement the [Ruby…",null,null],[3,"Iter","","",null,null],[11,"new","","",40,[[]]],[11,"with_capacity","","",40,[[]]],[11,"assoc","","",40,[[["value",3]]]],[11,"iter","","",40,[[],["iter",3]]],[11,"len","","",40,[[]]],[11,"is_empty","","",40,[[]]],[11,"clear","","",40,[[]]],[11,"initialize","","",40,[[["option",4],["block",3],["option",4],["value",3],["artichoke",3]],[["error",3],["result",4]]]],[11,"get","","",40,[[],[["option",4],["value",3]]]],[11,"set","","",40,[[["value",3]]]],[11,"concat","","",40,[[["value",3],["artichoke",3]],[["error",3],["result",4]]]],[11,"pop","","",40,[[],[["option",4],["value",3]]]],[11,"push","","",40,[[["value",3]]]],[11,"reverse","","",40,[[]]],[11,"shift","","",40,[[],[["option",4],["value",3]]]],[11,"shift_n","","",40,[[]]],[0,"artichoke","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::artichoke","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Artichoke","","",null,null],[3,"Kernel","","",null,null],[0,"comparable","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::comparable","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Comparable","","",null,null],[0,"enumerable","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::enumerable","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Enumerable","","",null,null],[0,"enumerator","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::enumerator","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Enumerator","","",null,null],[0,"env","artichoke_backend::extn::core","ENV is a hash-like accessor for environment variables.",null,null],[0,"mruby","artichoke_backend::extn::core::env","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke_backend::extn::core::env::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::env","Glue between mruby FFI and `ENV` Rust implementation.",null,null],[5,"initialize","artichoke_backend::extn::core::env::trampoline","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"element_reference","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"element_assignment","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_h","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[3,"Environ","artichoke_backend::extn::core::env","",null,null],[11,"new","","",41,[[]]],[11,"get","","",41,[[],[["option",4],["error",3],["result",4]]]],[11,"put","","",41,[[["option",4]],[["error",3],["result",4]]]],[11,"to_map","","",41,[[],[["error",3],["result",4],["hashmap",3]]]],[0,"exception","artichoke_backend::extn::core","Ruby error handling types.",null,null],[3,"ArgumentError","artichoke_backend::extn::core::exception","Ruby `ArgumentError` error type.",null,null],[3,"EncodingError","","Ruby `EncodingError` error type.",null,null],[3,"EOFError","","Ruby `EOFError` error type.",null,null],[3,"Exception","","Ruby `Exception` error type.",null,null],[3,"Fatal","","Ruby `fatal` error type.",null,null],[3,"FiberError","","Ruby `FiberError` error type.",null,null],[3,"FloatDomainError","","Ruby `FloatDomainError` error type.",null,null],[3,"FrozenError","","Ruby `FrozenError` error type.",null,null],[3,"IndexError","","Ruby `IndexError` error type.",null,null],[3,"Interrupt","","Ruby `Interrupt` error type.",null,null],[3,"IOError","","Ruby `IOError` error type.",null,null],[3,"KeyError","","Ruby `KeyError` error type.",null,null],[3,"LoadError","","Ruby `LoadError` error type.",null,null],[3,"LocalJumpError","","Ruby `LocalJumpError` error type.",null,null],[3,"NameError","","Ruby `NameError` error type.",null,null],[3,"NoMemoryError","","Ruby `NoMemoryError` error type.",null,null],[3,"NoMethodError","","Ruby `NoMethodError` error type.",null,null],[3,"NotImplementedError","","Ruby `NotImplementedError` error type.",null,null],[3,"RangeError","","Ruby `RangeError` error type.",null,null],[3,"RegexpError","","Ruby `RegexpError` error type.",null,null],[3,"RuntimeError","","Ruby `RuntimeError` error type.",null,null],[3,"ScriptError","","Ruby `ScriptError` error type.",null,null],[3,"SecurityError","","Ruby `SecurityError` error type.",null,null],[3,"SignalException","","Ruby `SignalException` error type.",null,null],[3,"StandardError","","Ruby `StandardError` error type.",null,null],[3,"StopIteration","","Ruby `StopIteration` error type.",null,null],[3,"SyntaxError","","Ruby `SyntaxError` error type.",null,null],[3,"SystemCallError","","Ruby `SystemCallError` error type.",null,null],[3,"SystemExit","","Ruby `SystemExit` error type.",null,null],[3,"SystemStackError","","Ruby `SystemStackError` error type.",null,null],[3,"ThreadError","","Ruby `ThreadError` error type.",null,null],[3,"TypeError","","Ruby `TypeError` error type.",null,null],[3,"UncaughtThrowError","","Ruby `UncaughtThrowError` error type.",null,null],[3,"ZeroDivisionError","","Ruby `ZeroDivisionError` error type.",null,null],[0,"mruby","","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke_backend::extn::core::exception::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"float","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::float","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Float","","",null,null],[18,"DIG","","The minimum number of significant decimal digits in a…",42,null],[18,"EPSILON","","The difference between 1 and the smallest double-precision…",42,null],[18,"INFINITY","","An expression representing positive infinity.",42,null],[18,"MANT_DIG","","The minimum number of significant decimal digits in a…",42,null],[18,"MAX","","The largest possible integer in a double-precision…",42,null],[18,"MAX_10_EXP","","The largest positive exponent in a double-precision…",42,null],[18,"MAX_EXP","","The largest possible exponent value in a double-precision…",42,null],[18,"MIN","","The smallest positive normalized number in a…",42,null],[18,"MIN_10_EXP","","The smallest negative exponent in a double-precision…",42,null],[18,"MIN_EXP","","The smallest possible exponent value in a double-precision…",42,null],[18,"NAN","","An expression representing a value which is \\\"not a number\\\".",42,null],[18,"NEG_INFINITY","","",42,null],[18,"RADIX","","The base of the floating point, or number of unique digits…",42,null],[18,"ROUNDS","","Represents the rounding mode for floating point addition.",42,null],[11,"new","","Construct a new, zero, float.",42,[[]]],[11,"as_f64","","Return the inner [`f64`].",42,[[]]],[11,"modulo","","Compute the remainder of self and other.",42,[[]]],[11,"coerced_modulo","","",42,[[["value",3],["artichoke",3]],[["error",3],["result",4],["outcome",4]]]],[0,"hash","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::hash","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Hash","","",null,null],[0,"integer","artichoke_backend::extn::core","",null,null],[0,"mruby","artichoke_backend::extn::core::integer","",null,null],[5,"init","artichoke_backend::extn::core::integer::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::integer","",null,null],[5,"chr","artichoke_backend::extn::core::integer::trampoline","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"element_reference","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"div","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"size","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[3,"Integer","artichoke_backend::extn::core::integer","",null,null],[11,"new","","Constructs a new, default, zero `Integer`.",43,[[]]],[11,"as_i64","","",43,[[]]],[11,"as_f64","","",43,[[]]],[11,"chr","","",43,[[["option",4],["value",3],["artichoke",3]],[["error",3],["result",4],["vec",3]]]],[11,"bit","","",43,[[["int",6]],[["error",3],["result",4]]]],[11,"div","","",43,[[["value",3],["artichoke",3]],[["error",3],["result",4],["outcome",4]]]],[11,"size","","",43,[[]]],[0,"kernel","artichoke_backend::extn::core","",null,null],[0,"integer","artichoke_backend::extn::core::kernel","",null,null],[3,"Radix","artichoke_backend::extn::core::kernel::integer","",null,null],[11,"new","","Construct a new `Radix`.",44,[[],["option",4]]],[11,"new_unchecked","","Construct a new `Radix` without checking the value.",44,[[]]],[11,"as_u32","","Extract the `Radix` as the underlying `u32`.",44,[[]]],[3,"IntegerString","","",null,null],[4,"Utf8Error","","",null,null],[13,"NulByte","","",45,null],[13,"InvalidUtf8","","",45,null],[11,"new","","Constructs a new, empty `IntegerString`.",46,[[]]],[11,"from_slice","","",46,[[],["option",4]]],[11,"inner","","",46,[[]]],[11,"as_bytes","","",46,[[]]],[5,"method","","",null,[[["integerstring",3],["option",4],["radix",3]],[["int",6],["result",4],["error",3]]]],[0,"mruby","artichoke_backend::extn::core::kernel","",null,null],[5,"init","artichoke_backend::extn::core::kernel::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"require","artichoke_backend::extn::core::kernel","`Kernel#require`",null,null],[5,"load","artichoke_backend::extn::core::kernel::require","",null,[[["value",3],["artichoke",3]],[["error",3],["result",4]]]],[5,"require","","",null,[[["option",4],["relativepath",3],["value",3],["artichoke",3]],[["error",3],["result",4]]]],[3,"RelativePath","","",null,null],[11,"new","","",47,[[]]],[11,"join","","",47,[[["asref",8],["path",3]],["pathbuf",3]]],[11,"try_from_interp","","",47,[[["artichoke",3]],[["error",3],["result",4]]]],[0,"trampoline","artichoke_backend::extn::core::kernel","",null,null],[5,"integer","artichoke_backend::extn::core::kernel::trampoline","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"load","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"print","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"puts","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"p","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"require","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"require_relative","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[3,"Kernel","artichoke_backend::extn::core::kernel","",null,null],[0,"matchdata","artichoke_backend::extn::core","An implementation of `MatchData` for all [`Regexp`]…",null,null],[0,"mruby","artichoke_backend::extn::core::matchdata","",null,null],[5,"init","artichoke_backend::extn::core::matchdata::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::matchdata","",null,null],[5,"begin","artichoke_backend::extn::core::matchdata::trampoline","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"captures","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"element_reference","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"end","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"length","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"named_captures","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"names","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"offset","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"post_match","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"pre_match","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"regexp","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"string","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_a","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_s","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[3,"Region","artichoke_backend::extn::core::matchdata","",null,null],[4,"Capture","","",null,null],[13,"GroupIndex","","",48,null],[13,"GroupName","","",48,null],[4,"CaptureExtract","","",null,null],[13,"GroupIndex","","",49,null],[13,"GroupName","","",49,null],[13,"Symbol","","",49,null],[4,"CaptureAt","","",null,null],[13,"GroupIndex","","",50,null],[13,"GroupName","","",50,null],[13,"StartLen","","",50,null],[4,"CaptureMatch","","",null,null],[13,"None","","",51,null],[13,"Single","","",51,null],[13,"Range","","",51,null],[3,"MatchData","","",null,null],[11,"new","","",52,[[["vec",3],["regexp",3]]]],[11,"set_region","","",52,[[]]],[11,"matched_region","","",52,[[]]],[11,"begin","","",52,[[["capture",4]],[["result",4],["error",3],["option",4]]]],[11,"capture_at","","",52,[[["captureat",4]],[["capturematch",4],["error",3],["result",4]]]],[11,"captures","","",52,[[],[["error",3],["option",4],["result",4]]]],[11,"end","","",52,[[["capture",4]],[["result",4],["error",3],["option",4]]]],[11,"is_empty","","",52,[[]]],[11,"len","","",52,[[],[["error",3],["result",4]]]],[11,"named_captures","","",52,[[],[["error",3],["result",4],["option",4]]]],[11,"names","","",52,[[],[["vec",3],["vec",3]]]],[11,"offset","","",52,[[["capture",4]],[["result",4],["error",3],["option",4]]]],[11,"pre","","",52,[[]]],[11,"post","","",52,[[]]],[11,"regexp","","",52,[[],["regexp",3]]],[11,"regexp_mut","","",52,[[],["regexp",3]]],[11,"string","","",52,[[]]],[11,"to_a","","",52,[[],[["result",4],["error",3],["option",4]]]],[11,"to_s","","",52,[[],[["error",3],["result",4],["option",4]]]],[0,"math","artichoke_backend::extn::core","The Ruby Math module.",null,null],[3,"DomainError","artichoke_backend::extn::core::math","Error that indicates a math function evaluated to an out…",null,null],[3,"Math","","A handle to the `Math` module.",null,null],[17,"E","","Euler\'s number (e)",null,null],[17,"PI","","Archimedes\' constant (π)",null,null],[0,"mruby","","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke_backend::extn::core::math::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::math","Glue between mruby FFI and `ENV` Rust implementation.",null,null],[5,"acos","artichoke_backend::extn::core::math::trampoline","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"acosh","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"asin","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"asinh","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"atan","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"atan2","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"atanh","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"cbrt","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"cos","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"cosh","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"erf","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"erfc","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"exp","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"frexp","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3]]]],[5,"gamma","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"hypot","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"ldexp","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"lgamma","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3]]]],[5,"log","","",null,[[["option",4],["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"log10","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"log2","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"sin","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"sinh","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"sqrt","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"tan","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[5,"tanh","","",null,[[["value",3],["artichoke",3]],[["fp",6],["error",3],["result",4]]]],[0,"method","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::method","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Method","","",null,null],[0,"module","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::module","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Module","","",null,null],[0,"numeric","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::numeric","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Numeric","","",null,null],[4,"Outcome","","",null,null],[13,"Float","","",53,null],[13,"Integer","","",53,null],[4,"Coercion","","",null,null],[13,"Float","","",54,null],[13,"Integer","","",54,null],[5,"coerce","","If `y` is the same type as `x`, returns an array `[y, x]`.…",null,[[["value",3],["artichoke",3]],[["result",4],["coercion",4],["error",3]]]],[0,"object","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::object","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Object","","",null,null],[0,"proc","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::proc","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Proc","","",null,null],[0,"random","artichoke_backend::extn::core","Random provides an interface to Ruby\'s pseudo-random…",null,null],[4,"Max","artichoke_backend::extn::core::random","A range constraint for generating random numbers.",null,null],[13,"Float","","A maximum float bound.",55,null],[13,"Integer","","A maximum integer bound.",55,null],[13,"None","","The default bound when no bound is supplied.",55,null],[4,"Rand","","A generated random number.",null,null],[13,"Float","","A random float.",56,null],[13,"Integer","","A random integer.",56,null],[0,"mruby","","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke_backend::extn::core::random::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::random","Glue between mruby FFI and `ENV` Rust implementation.",null,null],[5,"initialize","artichoke_backend::extn::core::random::trampoline","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"equal","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"bytes","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"rand","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"seed","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"new_seed","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"srand","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"urandom","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[4,"Seed","artichoke_backend::extn::core::random","",null,null],[13,"New","","",57,null],[13,"None","","",57,null],[11,"new","","Construct a an empty seed.",57,[[]]],[11,"to_mt_seed","","",57,[[],["option",4]]],[5,"new_seed","","",null,[[],[["int",6],["result",4],["error",3]]]],[5,"srand","","",null,[[["seed",4],["artichoke",3]],[["int",6],["result",4],["error",3]]]],[5,"urandom","","",null,[[["int",6]],[["error",3],["result",4],["vec",3]]]],[3,"Random","","",null,null],[11,"new","","",58,[[],[["error",3],["result",4]]]],[11,"with_seed","","",58,[[["option",4]],[["error",3],["result",4]]]],[11,"with_array_seed","","",58,[[["option",4]],[["error",3],["result",4]]]],[11,"bytes","","",58,[[["int",6]],[["error",3],["result",4],["vec",3]]]],[11,"rand","","",58,[[["max",4]],[["error",3],["result",4],["rand",4]]]],[11,"seed","","",58,[[],["int",6]]],[0,"range","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::range","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Range","","",null,null],[0,"regexp","artichoke_backend::extn::core","ruby/spec compliant implementation of `Regexp`.",null,null],[0,"backend","artichoke_backend::extn::core::regexp","",null,null],[0,"lazy","artichoke_backend::extn::core::regexp::backend","",null,null],[3,"Lazy","artichoke_backend::extn::core::regexp::backend::lazy","",null,null],[11,"new","","",59,[[]]],[11,"regexp","","",59,[[],[["result",4],["regexp",3],["error",3]]]],[0,"onig","artichoke_backend::extn::core::regexp::backend","",null,null],[3,"Onig","artichoke_backend::extn::core::regexp::backend::onig","",null,null],[11,"new","","",60,[[["config",3],["encoding",4]],[["error",3],["result",4]]]],[0,"regex","artichoke_backend::extn::core::regexp::backend","",null,null],[0,"utf8","artichoke_backend::extn::core::regexp::backend::regex","",null,null],[3,"Utf8","artichoke_backend::extn::core::regexp::backend::regex::utf8","",null,null],[11,"new","","",61,[[["config",3],["encoding",4]],[["error",3],["result",4]]]],[6,"NilableString","artichoke_backend::extn::core::regexp::backend","",null,null],[6,"NameToCaptureLocations","","",null,null],[4,"Scan","","",null,null],[13,"Collected","","",62,null],[13,"Patterns","","",62,null],[13,"Haystack","","",62,null],[8,"RegexpType","","",null,null],[10,"box_clone","","",63,[[],[["regexptype",8],["box",3]]]],[10,"debug","","",63,[[],["string",3]]],[10,"literal_config","","",63,[[],["config",3]]],[10,"derived_config","","",63,[[],["config",3]]],[10,"encoding","","",63,[[],["encoding",4]]],[10,"inspect","","",63,[[],["vec",3]]],[10,"string","","",63,[[]]],[10,"captures","","",63,[[],[["result",4],["error",3],["option",4]]]],[10,"capture_indexes_for_name","","",63,[[],[["option",4],["error",3],["result",4]]]],[10,"captures_len","","",63,[[["option",4]],[["error",3],["result",4]]]],[10,"capture0","","",63,[[],[["result",4],["option",4],["error",3]]]],[10,"case_match","","",63,[[["artichoke",3]],[["error",3],["result",4]]]],[10,"is_match","","",63,[[["int",6],["option",4]],[["error",3],["result",4]]]],[10,"match_","","",63,[[["int",6],["option",4],["block",3],["option",4],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[10,"match_operator","","",63,[[["artichoke",3]],[["result",4],["error",3],["option",4]]]],[10,"named_captures","","",63,[[],[["nametocapturelocations",6],["error",3],["result",4]]]],[10,"named_captures_for_haystack","","",63,[[],[["error",3],["result",4],["option",4]]]],[10,"names","","",63,[[],[["vec",3],["vec",3]]]],[10,"pos","","",63,[[],[["error",3],["result",4],["option",4]]]],[10,"scan","","",63,[[["block",3],["option",4],["artichoke",3]],[["error",3],["result",4],["scan",4]]]],[0,"enc","artichoke_backend::extn::core::regexp","Parse encoding parameter to `Regexp#initialize` and…",null,null],[3,"InvalidEncodingError","artichoke_backend::extn::core::regexp::enc","",null,null],[11,"new","","Constructs a new, default `InvalidEncodingError`.",64,[[]]],[4,"Encoding","","The encoding of a Regexp literal.",null,null],[13,"Fixed","","",65,null],[13,"No","","",65,null],[13,"None","","",65,null],[11,"new","","",65,[[]]],[11,"bitflags","","Convert an `Encoding` to its bitflag representation.",65,[[],["int",6]]],[11,"modifier_string","","Serialize the encoding flags to a string suitable for a…",65,[[]]],[0,"mruby","artichoke_backend::extn::core::regexp","",null,null],[5,"init","artichoke_backend::extn::core::regexp::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"opts","artichoke_backend::extn::core::regexp","Parse options parameter to `Regexp#initialize` and…",null,null],[4,"RegexpOption","artichoke_backend::extn::core::regexp::opts","The state of a Regexp engine flag in [`Options`].",null,null],[13,"Disabled","","Engine feature is disabled.",66,null],[13,"Enabled","","Engine feature is disabled.",66,null],[11,"new","","Construct a new, disabled `RegexpOption`.",66,[[]]],[11,"is_enabled","","Return whether this option is enabled.",66,[[]]],[3,"Options","","Configuration options for Ruby Regexps.",null,null],[12,"multiline","","Multiline mode.",67,null],[12,"ignore_case","","Case-insensitive mode.",67,null],[12,"extended","","Extended mode with insignificant whitespace.",67,null],[12,"literal","","Whether the Regexp was parsed as a literal, e.g.…",67,null],[11,"new","","Constructs a new, default `Options`.",67,[[]]],[11,"with_ignore_case","","An options instance that has only case insensitive mode…",67,[[]]],[11,"bitflags","","Convert an `Options` to its bitflag representation.",67,[[],["int",6]]],[11,"as_display_modifier","","Serialize the option flags to a string suitable for a…",67,[[]]],[11,"as_inline_modifier","","Serialize the option flags to a string suitable for…",67,[[]]],[0,"pattern","artichoke_backend::extn::core::regexp","Regexp pattern parsers.",null,null],[3,"Pattern","artichoke_backend::extn::core::regexp::pattern","A Regexp pattern including its derived `Options`.",null,null],[11,"new","","Construct a new, empty pattern.",68,[[]]],[11,"pattern","","Return the pattern as a byte slice.",68,[[]]],[11,"into_pattern","","Consume self and return the inner pattern byte vector.",68,[[],["vec",3]]],[11,"options","","Return the `Options` parsed when constructing this…",68,[[],["options",3]]],[5,"parse","","",null,[[["asref",8],["options",3]],["pattern",3]]],[0,"syntax","artichoke_backend::extn::core::regexp","Helpers for parsing Regexp patterns.",null,null],[5,"escape","artichoke_backend::extn::core::regexp::syntax","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["string",3]]]],[5,"is_meta_character","","Returns true if the given character has significance in a…",null,[[]]],[5,"is_non_printable_character","","Returns true if the given character is non-printable and…",null,[[]]],[5,"is_non_supported_non_printable_character","","Returns `Some(_)` if the given character is non-printable…",null,[[],["option",4]]],[0,"trampoline","artichoke_backend::extn::core::regexp","",null,null],[5,"initialize","artichoke_backend::extn::core::regexp::trampoline","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"escape","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"union","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_match","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"match_","","",null,[[["option",4],["block",3],["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"eql","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"case_compare","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"match_operator","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_casefold","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_fixed_encoding","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"hash","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"inspect","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"named_captures","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"names","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"options","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"source","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_s","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[6,"NameToCaptureLocations","artichoke_backend::extn::core::regexp","",null,null],[17,"IGNORECASE","","",null,null],[17,"EXTENDED","","",null,null],[17,"MULTILINE","","",null,null],[17,"FIXEDENCODING","","",null,null],[17,"NOENCODING","","",null,null],[17,"LITERAL","","",null,null],[17,"LAST_MATCHED_STRING","","The string matched by the last successful match.",null,null],[17,"STRING_LEFT_OF_MATCH","","The string to the left of the last successful match.",null,null],[17,"STRING_RIGHT_OF_MATCH","","The string to the right of the last successful match.",null,null],[17,"HIGHEST_MATCH_GROUP","","The highest group matched by the last successful match.",null,null],[17,"LAST_MATCH","","The information about the last match in the current scope.",null,null],[5,"nth_match_group","","Global variable name for the nth capture group from a…",null,[[["nonzerousize",3]],["cow",4]]],[5,"clear_capture_globals","","",null,[[["artichoke",3]],[["error",3],["result",4]]]],[3,"Regexp","","",null,null],[11,"new","","",69,[[["config",3],["encoding",4]],[["error",3],["result",4]]]],[11,"lazy","","",69,[[["vec",3]]]],[11,"initialize","","",69,[[["options",3],["encoding",4],["option",4],["option",4],["value",3],["artichoke",3]],[["error",3],["result",4]]]],[11,"escape","","",69,[[],[["result",4],["error",3],["string",3]]]],[11,"union","","",69,[[["artichoke",3]],[["error",3],["result",4]]]],[11,"inner","","",69,[[],["regexptype",8]]],[11,"case_compare","","",69,[[["value",3],["artichoke",3]],[["error",3],["result",4]]]],[11,"eql","","",69,[[["value",3],["artichoke",3]]]],[11,"hash","","",69,[[]]],[11,"inspect","","",69,[[],["vec",3]]],[11,"is_casefold","","",69,[[]]],[11,"is_fixed_encoding","","",69,[[]]],[11,"is_match","","",69,[[["int",6],["option",4],["option",4]],[["error",3],["result",4]]]],[11,"match_","","",69,[[["int",6],["option",4],["option",4],["block",3],["option",4],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[11,"match_operator","","",69,[[["option",4],["artichoke",3]],[["result",4],["error",3],["option",4]]]],[11,"named_captures","","",69,[[],[["result",4],["nametocapturelocations",6],["error",3]]]],[11,"names","","",69,[[],[["vec",3],["vec",3]]]],[11,"options","","",69,[[],["int",6]]],[11,"source","","",69,[[]]],[11,"string","","",69,[[]]],[3,"Config","","",null,null],[0,"string","artichoke_backend::extn::core","",null,null],[0,"mruby","artichoke_backend::extn::core::string","",null,null],[5,"init","artichoke_backend::extn::core::string::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::string","",null,null],[5,"ord","artichoke_backend::extn::core::string::trampoline","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"scan","","",null,[[["option",4],["block",3],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[3,"String","artichoke_backend::extn::core::string","",null,null],[0,"symbol","artichoke_backend::extn::core","",null,null],[3,"Symbol","artichoke_backend::extn::core::symbol","Identifier bound to an interned bytestring.",null,null],[0,"ffi","","",null,null],[0,"mruby","","",null,null],[5,"init","artichoke_backend::extn::core::symbol::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::symbol","",null,null],[5,"all_symbols","artichoke_backend::extn::core::symbol::trampoline","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"equal_equal","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"ascii_casecmp","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"unicode_casecmp","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_empty","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"length","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"bytes","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"inspect","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[0,"thread","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::thread","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Thread","","",null,null],[3,"Mutex","","",null,null],[0,"time","artichoke_backend::extn::core","Time is an abstraction of dates and times.",null,null],[3,"Time","artichoke_backend::extn::core::time","Implementation of Ruby `Time`, a timezone-aware datetime,…",null,null],[0,"mruby","","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke_backend::extn::core::time::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::core::time","Glue between mruby FFI and `Time` Rust implementation.",null,null],[5,"now","artichoke_backend::extn::core::time::trampoline","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"at","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"mkutc","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"mktime","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_int","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_float","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_rational","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"cmp","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"eql","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"hash","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"initialize","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"initialize_copy","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"mutate_to_local","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"mutate_to_utc","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"as_local","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"as_utc","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"asctime","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_string","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"to_array","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"plus","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"minus","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"succ","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"round","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"second","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"minute","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"hour","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"day","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"month","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"year","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"weekday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"year_day","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_dst","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"timezone","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"utc_offset","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_utc","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_sunday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_monday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_tuesday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_wednesday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_thursday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_friday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"is_saturday","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"microsecond","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"nanosecond","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"subsec","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"strftime","","",null,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[0,"warning","artichoke_backend::extn::core","",null,null],[5,"init","artichoke_backend::extn::core::warning","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Warning","","",null,null],[5,"init","artichoke_backend::extn::core","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"prelude","artichoke_backend::extn","A \\\"prelude\\\" for users of the `extn` module in the…",null,null],[8,"_","artichoke_backend::extn::prelude","Track the state of `Regexp` globals and global interpreter…",null,null],[16,"Error","","Concrete error type for errors encountered when…",16,null],[10,"active_regexp_globals","","Retrieve the current number of set `Regexp` global…",16,[[],["result",4]]],[10,"set_active_regexp_globals","","Set the current number of set `Regexp` global variables.",16,[[],["result",4]]],[10,"clear_regexp","","Clear all `Regexp` state.",16,[[],["result",4]]],[8,"_","","A boxed Ruby value owned by the interpreter.",null,null],[16,"Artichoke","","Concrete type for Artichoke interpreter.",21,null],[16,"Arg","","Concrete type for arguments passed to `funcall`.",21,null],[16,"Value","","Concrete type for results from `funcall`.",21,null],[16,"Block","","Concrete type for blocks passed to `funcall`.",21,null],[16,"Error","","Concrete error type for funcall errors.",21,null],[10,"funcall","","Call a method on this [`Value`] with arguments and an…",21,[[["option",4]],["result",4]]],[11,"try_into","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[11,"try_into_mut","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[10,"freeze","","Call `#freeze` on this [`Value`].",21,[[],["result",4]]],[10,"is_frozen","","Call `#frozen?` on this [`Value`].",21,[[]]],[10,"is_nil","","Whether `self` is `nil`",21,[[]]],[10,"respond_to","","Whether `self` responds to a method.",21,[[],["result",4]]],[10,"inspect","","Call `#inspect` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"to_s","","Call `#to_s` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"ruby_type","","Return this values Rust-mapped type tag.",21,[[],["ruby",4]]],[8,"CoerceToNumeric","","Coerce Ruby values to native numerics (floats and integers).",null,null],[16,"Value","","Concrete type of boxed Ruby value as inputs to coerce…",0,null],[16,"Float","","Concrete float type to coerce values into, e.g. [`f64`].",0,null],[16,"Error","","Concrete error type for errors encountered when coercing…",0,null],[10,"coerce_to_float","","Coerce the given Ruby value to a `Float`.",0,[[],["result",4]]],[8,"DefineConstant","","Deifne constants on an interprter.",null,null],[16,"Value","","Concrete type for Ruby values.",1,null],[16,"Error","","Concrete error type for fallible operations.",1,null],[10,"define_global_constant","","Define a global constant.",1,[[],["result",4]]],[10,"define_class_constant","","Define a class constant.",1,[[],["result",4]]],[10,"define_module_constant","","Define a module constant.",1,[[],["result",4]]],[8,"Convert","","Infallible conversion between two types.",null,null],[10,"convert","","Performs the infallible conversion.",2,[[]]],[8,"ConvertMut","","Mutable infallible conversion between two types.",null,null],[10,"convert_mut","","Performs the infallible conversion.",3,[[]]],[8,"TryConvert","","Fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",4,null],[10,"try_convert","","Performs the fallible conversion.",4,[[],["result",4]]],[8,"TryConvertMut","","Mutable fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",5,null],[10,"try_convert_mut","","Performs the fallible conversion.",5,[[],["result",4]]],[8,"Debug","","Debugging and `Exception` message support.",null,null],[16,"Value","","Concrete type for return values from eval.",6,null],[10,"inspect_type_name_for_value","","Return a name for thie given value\'s type suitable for…",6,[[]]],[8,"Eval","","Execute code and retrieve its result.",null,null],[16,"Value","","Concrete type for return values from eval.",7,null],[16,"Error","","Concrete error type for eval functions.",7,null],[10,"eval","","Eval code on the Artichoke interpreter using the current…",7,[[],["result",4]]],[10,"eval_os_str","","Eval code on the Artichoke interpreter using the current…",7,[[["osstr",3]],["result",4]]],[10,"eval_file","","Eval code on the Artichoke interpreter using a new file…",7,[[["path",3]],["result",4]]],[8,"File","","Rust extension hook that can be required.",null,null],[16,"Artichoke","","Concrete type for interpreter.",8,null],[16,"Error","","Concrete error type for eval functions.",8,null],[10,"require","","Called when the filename mapped to this type is required…",8,[[],["result",4]]],[8,"Globals","","Get and set global variables on an interpreter.",null,null],[16,"Value","","Concrete value type for global variables.",9,null],[16,"Error","","Concrete error type for failures manipulating global…",9,null],[10,"set_global_variable","","Set global variable pointed to by `name` to the given Ruby…",9,[[],["result",4]]],[10,"unset_global_variable","","Unset global variable pointed to by `name`.",9,[[],["result",4]]],[10,"get_global_variable","","Get the Ruby value stored in the global variable pointed…",9,[[],[["result",4],["option",4]]]],[8,"Intern","","Store and retrieve bytestrings that have the same lifetime…",null,null],[16,"Symbol","","Concrete type for symbol identifiers.",10,null],[16,"Error","","Concrete type for errors returned while interning symbols.",10,null],[18,"SYMBOL_RANGE_START","","The initial `Symbol` index returned by the interner.",10,null],[10,"intern_bytes","","Store an immutable bytestring for the life of the…",10,[[],["result",4]]],[10,"check_interned_bytes","","Check if a bytestring is already interned and return its…",10,[[],[["result",4],["option",4]]]],[11,"intern_string","","Store an immutable string for the life of the interpreter.",10,[[],["result",4]]],[11,"check_interned_string","","Check if a string is already interned and return its…",10,[[],[["result",4],["option",4]]]],[10,"lookup_symbol","","Retrieve the original byte content of an interned…",10,[[],[["result",4],["option",4]]]],[10,"symbol_count","","Retrieve the number of unique strings interned.",10,[[]]],[8,"Io","","Make I/O external to the interpreter.",null,null],[16,"Error","","Concrete error type for errors encountered when reading…",11,null],[10,"print","","Writes the given bytes to the interpreter stdout stream.",11,[[],["result",4]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",11,[[],["result",4]]],[8,"LoadSources","","Load Ruby sources and Rust extensions into an interpreter.",null,null],[16,"Artichoke","","Concrete type for interpreter.",12,null],[16,"Error","","Concrete type for errors returned from filesystem IO.",12,null],[16,"Exception","","Concrete type for errors returned by `File::require`.",12,null],[10,"def_file_for_type","","Add a Rust extension hook to the virtual filesystem. A…",12,[[],["result",4]]],[10,"def_rb_source_file","","Add a Ruby source to the virtual filesystem.",12,[[],["result",4]]],[10,"source_is_file","","Test for a source file at a path.",12,[[],["result",4]]],[10,"load_source","","Load source located at the given path.",12,[[],["result",4]]],[10,"require_source","","Require source located at the given path.",12,[[],["result",4]]],[10,"read_source_file_contents","","Retrieve file contents for a source file.",12,[[],[["result",4],["cow",4]]]],[4,"IncrementLinenoError","","Errors encountered when incrementing line numbers on…",null,null],[13,"Overflow","","An overflow occurred when incrementing the line number.",13,null],[8,"Parser","","Manage parser state, active filename context, and line…",null,null],[16,"Context","","Concrete type for parser context.",14,null],[16,"Error","","Error type for Parser APIs.",14,null],[10,"reset_parser","","Reset parser state to initial values.",14,[[],["result",4]]],[10,"fetch_lineno","","Fetch the current line number from the parser state.",14,[[],["result",4]]],[10,"add_fetch_lineno","","Increment line number and return the new value.",14,[[],["result",4]]],[10,"push_context","","Set the currently active context by modifying the parser…",14,[[],["result",4]]],[10,"pop_context","","Remove the current active context and return it.",14,[[],[["option",4],["result",4]]]],[10,"peek_context","","Return a reference to the currently active context.",14,[[],[["result",4],["option",4]]]],[8,"Prng","","Interpreter global psuedorandom number generator.",null,null],[16,"Error","","Concrete type for PRNG errors.",15,null],[16,"Prng","","Conrete type for the interpreter psuedorandom number…",15,null],[10,"prng","","Return a shared reference to the interpreter psuedorandom…",15,[[],["result",4]]],[10,"prng_mut","","Return a mutable reference to the interpreter psuedorandom…",15,[[],["result",4]]],[8,"Regexp","","Track the state of `Regexp` globals and global interpreter…",null,null],[16,"Error","","Concrete error type for errors encountered when…",16,null],[10,"active_regexp_globals","","Retrieve the current number of set `Regexp` global…",16,[[],["result",4]]],[10,"set_active_regexp_globals","","Set the current number of set `Regexp` global variables.",16,[[],["result",4]]],[10,"clear_regexp","","Clear all `Regexp` state.",16,[[],["result",4]]],[8,"ReleaseMetadata","","Information about an Artichoke build.",null,null],[10,"ruby_copyright","","Copyright information.",17,[[]]],[10,"ruby_description","","A description of the current build.",17,[[]]],[10,"ruby_engine","","The engine, or VM, used in the current build.",17,[[]]],[10,"ruby_engine_version","","The version of the engine, or VM, used in the current build.",17,[[]]],[10,"ruby_patchlevel","","The patch level the current build.",17,[[]]],[10,"ruby_platform","","The target triple of the platform this build targets.",17,[[]]],[10,"ruby_release_date","","The build date of this release.",17,[[]]],[10,"ruby_revision","","The revision count of the Artichoke git repo used for this…",17,[[]]],[10,"ruby_version","","The target MRI Ruby version for this build.",17,[[]]],[10,"artichoke_compiler_version","","A description of the compiler used to build Artichoke.",17,[[],["option",4]]],[8,"TopSelf","","Return a `Value`-wrapped reference to top self.",null,null],[16,"Value","","Concrete [`Value`] type.",18,null],[10,"top_self","","Return a [`Value`]-wrapped reference to \\\"top self\\\".",18,[[]]],[4,"Ruby","","Classes of Ruby types.",null,null],[13,"Array","","Ruby `Array` type.",19,null],[13,"Bool","","Ruby `TrueClass` and `FalseClass` type.",19,null],[13,"Class","","Ruby `Class` type.",19,null],[13,"CPointer","","FFI type for a borrowed C pointer.",19,null],[13,"Data","","FFI type for an owned C pointer.",19,null],[13,"Exception","","Ruby `Exception` type.",19,null],[13,"Fiber","","Ruby `Fiber` type.",19,null],[13,"Fixnum","","Ruby `Fixnum` type.",19,null],[13,"Float","","Ruby `Float` type.",19,null],[13,"Hash","","Ruby `Hash` type.",19,null],[13,"InlineStruct","","Internal type for non-heap allocated structs.",19,null],[13,"Module","","Ruby `Module` type.",19,null],[13,"Nil","","Ruby `nil` singleton type, the only instance of `NilClass`.",19,null],[13,"Object","","Ruby `Object` type.",19,null],[13,"Proc","","Ruby `Proc` type.",19,null],[13,"Range","","Ruby `Range` type.",19,null],[13,"SingletonClass","","Internal type for the singleton class of an object.",19,null],[13,"String","","Ruby `String` type.",19,null],[13,"Symbol","","Ruby `Symbol` type.",19,null],[13,"Unreachable","","Unreachable interpreter value. Receiving one of these from…",19,null],[13,"RecursiveSelfOwnership","","A special `Value` that is a placeholder for collections…",19,null],[4,"Rust","","Classes of Rust types.",null,null],[13,"Bool","","Rust `bool` type.",20,null],[13,"Bytes","","Rust `Vec<u8>` type.",20,null],[13,"Float","","Rust float type.",20,null],[13,"Map","","Rust `HashMap<K, V>` type.",20,null],[13,"Object","","Aribtrary Rust struct type.",20,null],[13,"SignedInt","","Rust signed integer type.",20,null],[13,"String","","Rust `String` type.",20,null],[13,"UnsignedInt","","Rust unsigned integer type.",20,null],[13,"Vec","","Rust `Vec<T>` type.",20,null],[8,"Value","","A boxed Ruby value owned by the interpreter.",null,null],[16,"Artichoke","","Concrete type for Artichoke interpreter.",21,null],[16,"Arg","","Concrete type for arguments passed to `funcall`.",21,null],[16,"Value","","Concrete type for results from `funcall`.",21,null],[16,"Block","","Concrete type for blocks passed to `funcall`.",21,null],[16,"Error","","Concrete error type for funcall errors.",21,null],[10,"funcall","","Call a method on this [`Value`] with arguments and an…",21,[[["option",4]],["result",4]]],[11,"try_into","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[11,"try_into_mut","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[10,"freeze","","Call `#freeze` on this [`Value`].",21,[[],["result",4]]],[10,"is_frozen","","Call `#frozen?` on this [`Value`].",21,[[]]],[10,"is_nil","","Whether `self` is `nil`",21,[[]]],[10,"respond_to","","Whether `self` responds to a method.",21,[[],["result",4]]],[10,"inspect","","Call `#inspect` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"to_s","","Call `#to_s` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"ruby_type","","Return this values Rust-mapped type tag.",21,[[],["ruby",4]]],[8,"Warn","","Emit warnings during interpreter execution to stderr.",null,null],[16,"Error","","Concrete error type for errors encountered when outputting…",22,null],[10,"warn","","Emit a warning message using `Warning#warn`.",22,[[],["result",4]]],[8,"BoxUnboxVmValue","","",null,null],[16,"Unboxed","","",29,null],[16,"Guarded","","",29,null],[18,"RUBY_TYPE","artichoke_backend::convert","",29,null],[10,"unbox_from_value","artichoke_backend::extn::prelude","SafetyImplementations may return owned values. These…",29,[[["artichoke",3],["value",3]],[["error",3],["result",4],["unboxedvalueguard",3]]]],[10,"alloc_value","","",29,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[10,"box_into_value","","",29,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[10,"free","","",29,[[]]],[8,"HeapAllocatedData","","",null,null],[18,"RUBY_TYPE","artichoke_backend::convert","",30,null],[6,"InitializeResult","artichoke_backend::extn::prelude","Type alias for errors returned from `init` functions in…",null,null],[0,"stdlib","artichoke_backend::extn","",null,null],[0,"abbrev","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::abbrev","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Abbrev","","",null,null],[0,"base64","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::base64","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Base64","","",null,null],[0,"cmath","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::cmath","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"CMath","","",null,null],[0,"delegate","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::delegate","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Delegator","","",null,null],[3,"SimpleDelegator","","",null,null],[0,"forwardable","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::forwardable","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Forwardable","","",null,null],[0,"json","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::json","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Json","","",null,null],[0,"monitor","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::monitor","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Monitor","","",null,null],[0,"ostruct","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::ostruct","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"OpenStruct","","",null,null],[0,"securerandom","artichoke_backend::extn::stdlib","Secure random number generator interface.",null,null],[5,"alphanumeric","artichoke_backend::extn::stdlib::securerandom","Generate a random sequence of ASCII alphanumeric bytes.",null,[[["option",4]],[["argumenterror",3],["result",4],["string",3]]]],[5,"base64","","Generate a base64-encoded [`String`] of random bytes.",null,[[["option",4]],[["result",4],["string",3],["error",4]]]],[5,"encode","artichoke_backend::extn::stdlib::securerandom::hex","Encode arbitrary octets as base16. Returns a [`String`].",null,[[],["string",3]]],[5,"encode_into","","Encode arbitrary octets as base16 into the given [`String`].",null,[[["string",3]]]],[5,"format_into","","Write hex-encoded octets into the given [`fmt::Write`].",null,[[],[["error",3],["result",4]]]],[5,"write_into","","Write hex-encoded octets into the given [`io::Write`].",null,[[],[["result",4],["error",3]]]],[3,"Hex","","An iterator over a byte slice that returns the data as a…",null,null],[5,"escape_byte","","Map from a `u8` to a hex encoded string literal.",null,[[]]],[5,"hex","artichoke_backend::extn::stdlib::securerandom","Generate a hex-encoded [`String`] of random bytes.",null,[[["option",4]],[["result",4],["string",3],["error",4]]]],[5,"random_bytes","","Generate a vector of random bytes.",null,[[["option",4]],[["result",4],["vec",3],["error",4]]]],[5,"random_number","","Generate a single random number, either a float or an…",null,[[["max",4]],[["result",4],["rand",4],["domainerror",3]]]],[5,"urlsafe_base64","","Generate a URL-safe base64-encoded [`String`] of random…",null,[[["option",4]],[["result",4],["string",3],["error",4]]]],[5,"uuid","","Generate a version 4 UUID and return a [`String`].",null,[[],[["randombyteserror",3],["result",4],["string",3]]]],[3,"ArgumentError","","Error that indicates an argument parsing or value logic…",null,null],[3,"DomainError","","Error that indicates the given maximum value is not finite…",null,null],[4,"SecureRandomError","","Sum type of all errors possibly returned from…",null,null],[13,"Argument","","Error that indicates an argument parsing or value logic…",70,null],[13,"RandomBytes","","Error that indicates the underlying source of randomness…",70,null],[4,"Max","","Max value when generating a random number from a range.",null,null],[13,"Float","","Generate floats in the range `[0, max)`.",71,null],[13,"Integer","","Generate signed integers in the range `[0, max)`.",71,null],[13,"None","","Generate floats in the range `[0.0, 1.0]`.",71,null],[4,"Rand","","Random numeric value generated from the secure random…",null,null],[13,"Float","","A random float that is greater than or equal to zero.",72,null],[13,"Integer","","A random signed integer that is greater than or equal to…",72,null],[3,"RandomBytesError","","Error that indicates the underlying source of randomness…",null,null],[3,"SecureRandom","","A handle to the underlying secure random number generator.",null,null],[0,"mruby","","FFI glue between the Rust trampolines and the mruby C…",null,null],[5,"init","artichoke_backend::extn::stdlib::securerandom::mruby","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"trampoline","artichoke_backend::extn::stdlib::securerandom","Glue between mruby FFI and `securerandom` Rust…",null,null],[5,"alphanumeric","artichoke_backend::extn::stdlib::securerandom::trampoline","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"base64","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"urlsafe_base64","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"hex","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"random_bytes","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"random_number","","",null,[[["option",4],["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[5,"uuid","","",null,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[0,"set","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::set","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Set","","",null,null],[3,"SortedSet","","",null,null],[0,"shellwords","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::shellwords","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"Shellwords","","",null,null],[0,"strscan","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::strscan","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"StringScanner","","",null,null],[0,"time","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::time","",null,[[["artichoke",3]],["initializeresult",6]]],[0,"uri","artichoke_backend::extn::stdlib","",null,null],[5,"init","artichoke_backend::extn::stdlib::uri","",null,[[["artichoke",3]],["initializeresult",6]]],[3,"IpSocket","","",null,null],[3,"IpAddr","","",null,null],[3,"Uri","","",null,null],[5,"init","artichoke_backend::extn::stdlib","",null,[[["artichoke",3]],["initializeresult",6]]],[17,"INPUT_RECORD_SEPARATOR","artichoke_backend::extn","",null,null],[5,"init","","",null,[[["releasemetadata",3],["artichoke",3]],["initializeresult",6]]],[0,"ffi","artichoke_backend","Functions for interacting directly with mruby structs from…",null,null],[5,"from_user_data","artichoke_backend::ffi","Extract an [`Artichoke`] interpreter from the user data…",null,[[],[["result",4],["artichoke",3],["interpreterextracterror",3]]]],[3,"InterpreterExtractError","","Failed to extract Artichoke interpreter at an FFI boundary.",null,null],[11,"new","","Constructs a new, default `InterpreterExtractError`.",73,[[]]],[5,"bytes_to_os_str","","Convert a byte slice to a platform-specific [`OsStr`].",null,[[],[["osstr",3],["result",4],["convertbyteserror",3]]]],[5,"os_str_to_bytes","","Convert a platform-specific [`OsStr`] to a byte slice.",null,[[["osstr",3]],[["result",4],["convertbyteserror",3]]]],[5,"os_string_to_bytes","","Convert a platform-specific [`OsString`] to a byte vec.",null,[[["osstring",3]],[["convertbyteserror",3],["result",4],["vec",3]]]],[3,"ConvertBytesError","","",null,null],[11,"new","","Constructs a new, default `ConvertBytesError`.",74,[[]]],[0,"fs","artichoke_backend","Virtual filesystem.",null,null],[0,"hybrid","artichoke_backend::fs","",null,null],[3,"Hybrid","artichoke_backend::fs::hybrid","",null,null],[11,"new","","",75,[[]]],[0,"memory","artichoke_backend::fs","",null,null],[3,"Extension","artichoke_backend::fs::memory","",null,null],[3,"Code","","",null,null],[11,"new","","",76,[[]]],[11,"into_inner","","",76,[[],["cow",4]]],[3,"Entry","","",null,null],[3,"Memory","","Virtual filesystem for sources, extensions, and require…",null,null],[11,"new","","Create a new in memory virtual filesystem.",77,[[]]],[11,"with_working_directory","","Create a new in memory virtual filesystem with the given…",77,[[]]],[0,"native","artichoke_backend::fs","",null,null],[3,"Native","artichoke_backend::fs::native","",null,null],[11,"new","","",78,[[]]],[17,"RUBY_LOAD_PATH","artichoke_backend::fs","Directory at which Ruby sources and extensions are stored…",null,null],[6,"ExtensionHook","","Function type for extension hooks stored in the virtual…",null,null],[5,"filesystem","","",null,[[],[["box",3],["filesystem",8]]]],[8,"Filesystem","","Filesystem APIs required by an Artichoke interpreter.",null,null],[10,"is_file","","Check whether `path` points to a file in the virtual…",79,[[["path",3]]]],[10,"read_file","","Read file contents for the file at `path`.",79,[[["path",3]],[["cow",4],["result",6]]]],[10,"write_file","","Write file contents into the virtual file system at `path`.",79,[[["cow",4],["path",3]],["result",6]]],[10,"get_extension","","Retrieve an extension hook for the file at `path`.",79,[[["path",3]],[["extensionhook",6],["option",4]]]],[10,"register_extension","","Write extension hook into the virtual file system at `path`.",79,[[["path",3],["extensionhook",6]],["result",6]]],[10,"is_required","","Check whether a file at `path` has been required already.",79,[[["path",3]]]],[10,"mark_required","","Mark a source at `path` as required on the interpreter.",79,[[["path",3]],["result",6]]],[0,"gc","artichoke_backend","",null,null],[0,"arena","artichoke_backend::gc","Garbage collection arenas for native code.",null,null],[3,"ArenaSavepointError","artichoke_backend::gc::arena","Failed to create a new GC arena savepoint.",null,null],[11,"new","","Constructs a new, default `ArenaSavepointError`.",80,[[]]],[3,"ArenaIndex","","Interpreter guard that acts as a GC arena savepoint.",null,null],[11,"new","","Create a new arena savepoint.",81,[[["artichoke",3]],[["result",4],["arenasavepointerror",3]]]],[11,"restore","","Restore the arena stack pointer to its prior index.",81,[[]]],[11,"interp","","Access the inner guarded interpreter.",81,[[],["artichoke",3]]],[8,"MrbGarbageCollection","artichoke_backend::gc","Garbage collection primitives for an mruby interpreter.",null,null],[10,"create_arena_savepoint","","Create a savepoint in the GC arena.",82,[[],[["arenaindex",3],["arenasavepointerror",3],["result",4]]]],[10,"live_object_count","","Retrieve the number of live objects on the interpreter heap.",82,[[]]],[10,"mark_value","","Mark a [`Value`] as reachable in the mruby garbage…",82,[[["value",3]]]],[10,"incremental_gc","","Perform an incremental garbage collection.",82,[[]]],[10,"full_gc","","Perform a full garbage collection.",82,[[]]],[10,"enable_gc","","Enable garbage collection.",82,[[],["state",4]]],[10,"disable_gc","","Disable garbage collection.",82,[[],["state",4]]],[4,"State","","",null,null],[13,"Disabled","","",83,null],[13,"Enabled","","",83,null],[0,"method","artichoke_backend","",null,null],[4,"Type","artichoke_backend::method","",null,null],[13,"Class","","",84,null],[13,"Global","","",84,null],[13,"Instance","","",84,null],[13,"Module","","",84,null],[3,"Spec","","",null,null],[11,"new","","",85,[[["method",6],["mrb_aspec",6],["type",4]],[["result",4],["constantnameerror",3]]]],[11,"method_type","","",85,[[],["type",4]]],[11,"method","","",85,[[],["method",6]]],[11,"name","","",85,[[],["cow",4]]],[11,"name_c_str","","",85,[[],["cstr",3]]],[11,"define","","Define this method on the class-like pointed to by `into`.",85,[[["rclass",3],["artichoke",3]],[["result",4],["notdefinederror",4]]]],[0,"module","artichoke_backend","",null,null],[3,"Registry","artichoke_backend::module","A registry for Module specs that uses types as keys.",null,null],[3,"Builder","","",null,null],[11,"for_spec","","",86,[[["spec",3],["artichoke",3]]]],[11,"add_method","","",86,[[["method",6],["mrb_aspec",6]],[["result",4],["constantnameerror",3]]]],[11,"add_self_method","","",86,[[["method",6],["mrb_aspec",6]],[["result",4],["constantnameerror",3]]]],[11,"add_module_method","","",86,[[["method",6],["mrb_aspec",6]],[["result",4],["constantnameerror",3]]]],[11,"define","","",86,[[],[["result",4],["notdefinederror",4]]]],[3,"Rclass","","",null,null],[11,"new","","",87,[[["box",3],["option",4],["cstr",3],["enclosingrubyscope",4]]]],[11,"resolve","","Resolve a type\'s [`sys::RClass`] using its enclosing scope…",87,[[],[["nonnull",3],["option",4]]]],[3,"Spec","","",null,null],[11,"new","","",88,[[["enclosingrubyscope",4],["option",4],["artichoke",3]],[["error",3],["result",4]]]],[11,"name","","",88,[[],["cow",4]]],[11,"name_c_str","","",88,[[],["cstr",3]]],[11,"enclosing_scope","","",88,[[],[["enclosingrubyscope",4],["option",4]]]],[11,"fqname","","",88,[[],["cow",4]]],[11,"rclass","","",88,[[],["rclass",3]]],[0,"module_registry","artichoke_backend","",null,null],[8,"ModuleRegistry","artichoke_backend::module_registry","",null,null],[10,"def_module","","",89,[[["spec",3]],[["error",3],["result",4]]]],[10,"module_spec","","",89,[[],[["error",3],["option",4],["result",4]]]],[11,"is_module_defined","","",89,[[]]],[10,"module_of","","",89,[[],[["option",4],["error",3],["result",4]]]],[0,"release_metadata","artichoke_backend","",null,null],[3,"ReleaseMetadata","artichoke_backend::release_metadata","",null,null],[12,"copyright","","",90,null],[12,"description","","",90,null],[12,"engine","","",90,null],[12,"engine_version","","",90,null],[12,"patchlevel","","",90,null],[12,"platform","","",90,null],[12,"release_date","","",90,null],[12,"revision","","",90,null],[12,"ruby_version","","",90,null],[12,"compiler_version","","",90,null],[11,"new","","",90,[[]]],[11,"with_ruby_copyright","","",90,[[]]],[11,"with_ruby_description","","",90,[[]]],[11,"with_ruby_engine","","",90,[[]]],[11,"with_ruby_engine_version","","",90,[[]]],[11,"with_ruby_patchlevel","","",90,[[]]],[11,"with_ruby_platform","","",90,[[]]],[11,"with_ruby_release_date","","",90,[[]]],[11,"with_ruby_revision","","",90,[[]]],[11,"with_ruby_version","","",90,[[]]],[11,"with_artichoke_compiler_version","","",90,[[["option",4]]]],[11,"ruby_copyright","","",90,[[]]],[11,"ruby_description","","",90,[[]]],[11,"ruby_engine","","",90,[[]]],[11,"ruby_engine_version","","",90,[[]]],[11,"ruby_patchlevel","","",90,[[]]],[11,"ruby_platform","","",90,[[]]],[11,"ruby_release_date","","",90,[[]]],[11,"ruby_revision","","",90,[[]]],[11,"ruby_version","","",90,[[]]],[11,"artichoke_compiler_version","","",90,[[],["option",4]]],[0,"state","artichoke_backend","",null,null],[0,"output","artichoke_backend::state","",null,null],[6,"Strategy","artichoke_backend::state::output","",null,null],[8,"Output","","",null,null],[10,"as_debug","","",91,[[],["debug",8]]],[10,"write_stdout","","",91,[[["asref",8]],["result",6]]],[10,"write_stderr","","",91,[[["asref",8]],["result",6]]],[11,"print","","",91,[[["asref",8]]]],[11,"puts","","",91,[[["asref",8]]]],[3,"Process","","",null,null],[11,"new","","Constructs a new, default `Process` output strategy.",92,[[]]],[3,"Captured","","",null,null],[11,"new","","Constructs a new, default `Captured` output strategy.",93,[[]]],[11,"clear","","",93,[[]]],[11,"stdout","","",93,[[]]],[11,"stderr","","",93,[[]]],[3,"Null","","",null,null],[11,"new","","Constructs a new, default `Null` output strategy.",94,[[]]],[0,"parser","artichoke_backend::state","",null,null],[17,"TOP_FILENAME","artichoke_backend::state::parser","Filename of the top eval context.",null,null],[3,"State","","",null,null],[11,"new","","",95,[[["mrb_state",3]],["option",4]]],[11,"close","","",95,[[["mrb_state",3]]]],[11,"context_mut","","",95,[[],["mrbc_context",3]]],[11,"reset","","Reset line number to `1`.",95,[[["mrb_state",3]]]],[11,"fetch_lineno","","Fetch the current line number from the parser state.",95,[[]]],[11,"add_fetch_lineno","","Increment line number and return the new value.",95,[[],[["result",4],["incrementlinenoerror",4]]]],[11,"push_context","","Push a [`Context`] onto the stack.",95,[[["context",3],["mrb_state",3]]]],[11,"pop_context","","Removes the last element from the context stack and…",95,[[["mrb_state",3]],[["context",3],["option",4]]]],[11,"peek_context","","Returns the last [`Context`], or `None` if the context…",95,[[],[["option",4],["context",3]]]],[3,"Context","","`Context` is used to manipulate the current filename on…",null,null],[11,"new","","Create a new [`Context`].",96,[[],["option",4]]],[11,"new_unchecked","","Create a new [`Context`] without checking for NUL bytes in…",96,[[]]],[11,"root","","Create a root, or default, [`Context`].",96,[[]]],[11,"filename","","Filename of this `Context`.",96,[[]]],[11,"filename_as_c_str","","FFI-safe NUL-terminated C String of this `Context`.",96,[[],["cstr",3]]],[0,"regexp","artichoke_backend::state","",null,null],[3,"State","artichoke_backend::state::regexp","",null,null],[11,"new","","Constructs a new, default Regexp `State`.",97,[[]]],[11,"clear","","",97,[[]]],[11,"active_regexp_globals","","",97,[[]]],[11,"set_active_regexp_globals","","",97,[[]]],[3,"State","artichoke_backend::state","Container for interpreter global state.",null,null],[12,"parser","","",98,null],[12,"classes","","",98,null],[12,"modules","","",98,null],[12,"vfs","","",98,null],[12,"regexp","","",98,null],[12,"symbols","","",98,null],[12,"output","","",98,null],[12,"prng","","",98,null],[11,"new","","Create a new `State`.",98,[[],[["result",4],["interpreterallocerror",3]]]],[0,"string","artichoke_backend","Utilities for working with Ruby `String`s.",null,null],[5,"format_unicode_debug_into","artichoke_backend::string","Write a UTF-8 debug representation of a byte slice into…",null,[[],[["writeerror",3],["result",4]]]],[3,"WriteError","","Error type for [`format_unicode_debug_into`].",null,null],[11,"into_inner","","",99,[[],["error",3]]],[0,"sys","artichoke_backend","Rust bindings for mruby, customized for Artichoke.",null,null],[5,"mrb_float_read","artichoke_backend::sys","",null,null],[5,"mrb_objspace_each_objects","","",null,null],[5,"mrb_free_context","","",null,null],[5,"mrb_object_dead_p","","",null,null],[5,"mrb_define_class","","",null,null],[5,"mrb_define_module","","",null,null],[5,"mrb_singleton_class","","",null,null],[5,"mrb_include_module","","",null,null],[5,"mrb_prepend_module","","",null,null],[5,"mrb_define_method","","",null,null],[5,"mrb_define_class_method","","",null,null],[5,"mrb_define_singleton_method","","",null,null],[5,"mrb_define_module_function","","",null,null],[5,"mrb_define_const","","",null,null],[5,"mrb_undef_method","","",null,null],[5,"mrb_undef_method_id","","",null,null],[5,"mrb_undef_class_method","","",null,null],[5,"mrb_obj_new","","",null,null],[5,"mrb_class_new","","",null,null],[5,"mrb_module_new","","",null,null],[5,"mrb_class_defined","","",null,null],[5,"mrb_class_get","","",null,null],[5,"mrb_exc_get","","",null,null],[5,"mrb_class_defined_under","","",null,null],[5,"mrb_class_get_under","","",null,null],[5,"mrb_module_get","","",null,null],[5,"mrb_module_get_under","","",null,null],[5,"mrb_notimplement","","",null,null],[5,"mrb_notimplement_m","","",null,null],[5,"mrb_obj_dup","","",null,null],[5,"mrb_obj_respond_to","","",null,null],[5,"mrb_define_class_under","","",null,null],[5,"mrb_define_module_under","","",null,null],[5,"mrb_get_args","","",null,null],[5,"mrb_get_argc","","",null,null],[5,"mrb_get_argv","","",null,null],[5,"mrb_funcall","","",null,null],[5,"mrb_funcall_argv","","",null,null],[5,"mrb_funcall_with_block","","",null,null],[5,"mrb_intern_cstr","","",null,null],[5,"mrb_intern","","",null,null],[5,"mrb_intern_static","","",null,null],[5,"mrb_intern_str","","",null,null],[5,"mrb_check_intern_cstr","","",null,null],[5,"mrb_check_intern","","",null,null],[5,"mrb_check_intern_str","","",null,null],[5,"mrb_sym_name","","",null,null],[5,"mrb_sym_name_len","","",null,null],[5,"mrb_sym_dump","","",null,null],[5,"mrb_sym_str","","",null,null],[5,"mrb_malloc","","",null,null],[5,"mrb_calloc","","",null,null],[5,"mrb_realloc","","",null,null],[5,"mrb_realloc_simple","","",null,null],[5,"mrb_malloc_simple","","",null,null],[5,"mrb_obj_alloc","","",null,null],[5,"mrb_free","","",null,null],[5,"mrb_str_new","","",null,null],[5,"mrb_str_new_cstr","","",null,null],[5,"mrb_str_new_static","","",null,null],[5,"mrb_obj_freeze","","",null,null],[5,"mrb_open","","",null,null],[5,"mrb_open_allocf","","",null,null],[5,"mrb_open_core","","",null,null],[5,"mrb_close","","",null,null],[5,"mrb_default_allocf","","",null,null],[5,"mrb_top_self","","",null,null],[5,"mrb_run","","",null,null],[5,"mrb_top_run","","",null,null],[5,"mrb_vm_run","","",null,null],[5,"mrb_vm_exec","","",null,null],[5,"mrb_p","","",null,null],[5,"mrb_obj_id","","",null,null],[5,"mrb_obj_to_sym","","",null,null],[5,"mrb_obj_eq","","",null,null],[5,"mrb_obj_equal","","",null,null],[5,"mrb_equal","","",null,null],[5,"mrb_convert_to_integer","","",null,null],[5,"mrb_Integer","","",null,null],[5,"mrb_Float","","",null,null],[5,"mrb_inspect","","",null,null],[5,"mrb_eql","","",null,null],[5,"mrb_cmp","","",null,null],[5,"mrb_garbage_collect","","",null,null],[5,"mrb_full_gc","","",null,null],[5,"mrb_incremental_gc","","",null,null],[5,"mrb_gc_mark","","",null,null],[5,"mrb_field_write_barrier","","",null,null],[5,"mrb_write_barrier","","",null,null],[5,"mrb_check_convert_type","","",null,null],[5,"mrb_any_to_s","","",null,null],[5,"mrb_obj_classname","","",null,null],[5,"mrb_obj_class","","",null,null],[5,"mrb_class_path","","",null,null],[5,"mrb_convert_type","","",null,null],[5,"mrb_obj_is_kind_of","","",null,null],[5,"mrb_obj_inspect","","",null,null],[5,"mrb_obj_clone","","",null,null],[5,"mrb_exc_new","","",null,null],[5,"mrb_exc_raise","","",null,null],[5,"mrb_raise","","",null,null],[5,"mrb_raisef","","",null,null],[5,"mrb_name_error","","",null,null],[5,"mrb_frozen_error","","",null,null],[5,"mrb_warn","","",null,null],[5,"mrb_bug","","",null,null],[5,"mrb_print_backtrace","","",null,null],[5,"mrb_print_error","","",null,null],[5,"mrb_vformat","","",null,null],[5,"mrb_yield","","",null,null],[5,"mrb_yield_argv","","",null,null],[5,"mrb_yield_with_class","","",null,null],[5,"mrb_yield_cont","","",null,null],[5,"mrb_gc_protect","","",null,null],[5,"mrb_gc_register","","",null,null],[5,"mrb_gc_unregister","","",null,null],[5,"mrb_to_int","","",null,null],[5,"mrb_to_str","","",null,null],[5,"mrb_check_type","","",null,null],[5,"mrb_define_alias","","",null,null],[5,"mrb_class_name","","",null,null],[5,"mrb_define_global_const","","",null,null],[5,"mrb_attr_get","","",null,null],[5,"mrb_respond_to","","",null,null],[5,"mrb_obj_is_instance_of","","",null,null],[5,"mrb_func_basic_p","","",null,null],[5,"mrb_fiber_resume","","",null,null],[5,"mrb_fiber_yield","","",null,null],[5,"mrb_fiber_alive_p","","",null,null],[5,"mrb_stack_extend","","",null,null],[5,"mrb_pool_open","","",null,null],[5,"mrb_pool_close","","",null,null],[5,"mrb_pool_alloc","","",null,null],[5,"mrb_pool_realloc","","",null,null],[5,"mrb_pool_can_realloc","","",null,null],[5,"mrb_alloca","","",null,null],[5,"mrb_state_atexit","","",null,null],[5,"mrb_show_version","","",null,null],[5,"mrb_show_copyright","","",null,null],[5,"mrb_format","","",null,null],[5,"mrb_ary_decref","","",null,null],[5,"mrb_ary_modify","","",null,null],[5,"mrb_ary_new_capa","","",null,null],[5,"mrb_ary_new","","",null,null],[5,"mrb_ary_new_from_values","","",null,null],[5,"mrb_assoc_new","","",null,null],[5,"mrb_ary_concat","","",null,null],[5,"mrb_ary_splat","","",null,null],[5,"mrb_ary_push","","",null,null],[5,"mrb_ary_pop","","",null,null],[5,"mrb_ary_ref","","",null,null],[5,"mrb_ary_set","","",null,null],[5,"mrb_ary_replace","","",null,null],[5,"mrb_ensure_array_type","","",null,null],[5,"mrb_check_array_type","","",null,null],[5,"mrb_ary_unshift","","",null,null],[5,"mrb_ary_entry","","",null,null],[5,"mrb_ary_splice","","",null,null],[5,"mrb_ary_shift","","",null,null],[5,"mrb_ary_clear","","",null,null],[5,"mrb_ary_join","","",null,null],[5,"mrb_ary_resize","","",null,null],[5,"mrb_define_class_id","","",null,null],[5,"mrb_define_module_id","","",null,null],[5,"mrb_vm_define_class","","",null,null],[5,"mrb_vm_define_module","","",null,null],[5,"mrb_define_method_raw","","",null,null],[5,"mrb_define_method_id","","",null,null],[5,"mrb_alias_method","","",null,null],[5,"mrb_method_search_vm","","",null,null],[5,"mrb_method_search","","",null,null],[5,"mrb_class_real","","",null,null],[5,"mrb_instance_new","","",null,null],[5,"mrb_class_name_class","","",null,null],[5,"mrb_const_name_p","","",null,null],[5,"mrb_class_find_path","","",null,null],[5,"mrb_gc_mark_mt","","",null,null],[5,"mrb_gc_mark_mt_size","","",null,null],[5,"mrb_gc_free_mt","","",null,null],[5,"mrbc_context_new","","",null,null],[5,"mrbc_context_free","","",null,null],[5,"mrbc_filename","","",null,null],[5,"mrbc_partial_hook","","",null,null],[5,"mrb_parser_new","","",null,null],[5,"mrb_parser_free","","",null,null],[5,"mrb_parser_parse","","",null,null],[5,"mrb_parser_set_filename","","",null,null],[5,"mrb_parser_get_filename","","",null,null],[5,"mrb_parse_string","","",null,null],[5,"mrb_parse_nstring","","",null,null],[5,"mrb_generate_code","","",null,null],[5,"mrb_load_exec","","",null,null],[5,"mrb_load_string","","",null,null],[5,"mrb_load_nstring","","",null,null],[5,"mrb_load_string_cxt","","",null,null],[5,"mrb_load_nstring_cxt","","",null,null],[5,"mrb_data_object_alloc","","",null,null],[5,"mrb_data_check_type","","",null,null],[5,"mrb_data_get_ptr","","",null,null],[5,"mrb_data_check_get_ptr","","",null,null],[5,"mrb_add_irep","","",null,null],[5,"mrb_load_irep","","",null,null],[5,"mrb_load_irep_buf","","",null,null],[5,"mrb_load_irep_cxt","","",null,null],[5,"mrb_load_irep_buf_cxt","","",null,null],[5,"mrb_irep_free","","",null,null],[5,"mrb_irep_incref","","",null,null],[5,"mrb_irep_decref","","",null,null],[5,"mrb_irep_cutref","","",null,null],[5,"mrb_irep_remove_lv","","",null,null],[5,"mrb_decode_insn","","",null,null],[5,"mrb_dump_irep","","",null,null],[5,"mrb_read_irep","","",null,null],[5,"mrb_read_irep_buf","","",null,null],[5,"mrb_sys_fail","","",null,null],[5,"mrb_exc_new_str","","",null,null],[5,"mrb_make_exception","","",null,null],[5,"mrb_exc_backtrace","","",null,null],[5,"mrb_get_backtrace","","",null,null],[5,"mrb_no_method_error","","",null,null],[5,"mrb_f_raise","","",null,null],[5,"mrb_protect","","",null,null],[5,"mrb_ensure","","",null,null],[5,"mrb_rescue","","",null,null],[5,"mrb_rescue_exceptions","","",null,null],[5,"mrb_hash_new_capa","","",null,null],[5,"mrb_ensure_hash_type","","",null,null],[5,"mrb_check_hash_type","","",null,null],[5,"mrb_hash_new","","",null,null],[5,"mrb_hash_set","","",null,null],[5,"mrb_hash_get","","",null,null],[5,"mrb_hash_fetch","","",null,null],[5,"mrb_hash_delete_key","","",null,null],[5,"mrb_hash_keys","","",null,null],[5,"mrb_hash_key_p","","",null,null],[5,"mrb_hash_empty_p","","",null,null],[5,"mrb_hash_values","","",null,null],[5,"mrb_hash_clear","","",null,null],[5,"mrb_hash_size","","",null,null],[5,"mrb_hash_dup","","",null,null],[5,"mrb_hash_merge","","",null,null],[5,"mrb_gc_mark_hash","","",null,null],[5,"mrb_gc_mark_hash_size","","",null,null],[5,"mrb_gc_free_hash","","",null,null],[5,"mrb_hash_foreach","","",null,null],[5,"mrb_flo_to_fixnum","","",null,null],[5,"mrb_fixnum_to_str","","",null,null],[5,"mrb_float_to_str","","",null,null],[5,"mrb_to_flo","","",null,null],[5,"mrb_int_value","","",null,null],[5,"mrb_num_plus","","",null,null],[5,"mrb_num_minus","","",null,null],[5,"mrb_num_mul","","",null,null],[5,"mrb_env_unshare","","",null,null],[5,"mrb_proc_new","","",null,null],[5,"mrb_closure_new","","",null,null],[5,"mrb_proc_new_cfunc","","",null,null],[5,"mrb_closure_new_cfunc","","",null,null],[5,"mrb_proc_copy","","",null,null],[5,"mrb_proc_arity","","",null,null],[5,"mrb_f_send","","",null,null],[5,"mrb_proc_new_cfunc_with_env","","",null,null],[5,"mrb_proc_cfunc_env_get","","",null,null],[5,"mrb_range_ptr","","",null,null],[5,"mrb_range_new","","",null,null],[5,"mrb_range_beg_len","","",null,null],[5,"mrb_get_values_at","","",null,null],[5,"mrb_gc_mark_range","","",null,null],[7,"mrb_digitmap","","",null,null],[5,"mrb_str_strlen","","",null,null],[5,"mrb_gc_free_str","","",null,null],[5,"mrb_str_modify","","",null,null],[5,"mrb_str_modify_keep_ascii","","",null,null],[5,"mrb_str_index","","",null,null],[5,"mrb_str_concat","","",null,null],[5,"mrb_str_plus","","",null,null],[5,"mrb_ptr_to_str","","",null,null],[5,"mrb_obj_as_string","","",null,null],[5,"mrb_str_resize","","",null,null],[5,"mrb_str_substr","","",null,null],[5,"mrb_ensure_string_type","","",null,null],[5,"mrb_check_string_type","","",null,null],[5,"mrb_string_type","","",null,null],[5,"mrb_str_new_capa","","",null,null],[5,"mrb_str_buf_new","","",null,null],[5,"mrb_string_cstr","","",null,null],[5,"mrb_string_value_cstr","","",null,null],[5,"mrb_string_value_ptr","","",null,null],[5,"mrb_string_value_len","","",null,null],[5,"mrb_str_dup","","",null,null],[5,"mrb_str_intern","","",null,null],[5,"mrb_str_to_inum","","",null,null],[5,"mrb_cstr_to_inum","","",null,null],[5,"mrb_str_to_dbl","","",null,null],[5,"mrb_cstr_to_dbl","","",null,null],[5,"mrb_str_to_str","","",null,null],[5,"mrb_str_equal","","",null,null],[5,"mrb_str_cat","","",null,null],[5,"mrb_str_cat_cstr","","",null,null],[5,"mrb_str_cat_str","","",null,null],[5,"mrb_str_append","","",null,null],[5,"mrb_str_cmp","","",null,null],[5,"mrb_str_to_cstr","","",null,null],[5,"mrb_str_pool","","",null,null],[5,"mrb_str_hash","","",null,null],[5,"mrb_str_dump","","",null,null],[5,"mrb_str_inspect","","",null,null],[5,"mrb_str_beg_len","","",null,null],[5,"mrb_str_byte_subseq","","",null,null],[5,"mrb_utf8_len","","",null,null],[5,"mrb_vm_special_get","","",null,null],[5,"mrb_vm_special_set","","",null,null],[5,"mrb_vm_cv_get","","",null,null],[5,"mrb_vm_cv_set","","",null,null],[5,"mrb_vm_const_get","","",null,null],[5,"mrb_vm_const_set","","",null,null],[5,"mrb_const_get","","",null,null],[5,"mrb_const_set","","",null,null],[5,"mrb_const_defined","","",null,null],[5,"mrb_const_remove","","",null,null],[5,"mrb_iv_name_sym_p","","",null,null],[5,"mrb_iv_name_sym_check","","",null,null],[5,"mrb_obj_iv_get","","",null,null],[5,"mrb_obj_iv_set","","",null,null],[5,"mrb_obj_iv_defined","","",null,null],[5,"mrb_iv_get","","",null,null],[5,"mrb_iv_set","","",null,null],[5,"mrb_iv_defined","","",null,null],[5,"mrb_iv_remove","","",null,null],[5,"mrb_iv_copy","","",null,null],[5,"mrb_const_defined_at","","",null,null],[5,"mrb_gv_get","","",null,null],[5,"mrb_gv_set","","",null,null],[5,"mrb_gv_remove","","",null,null],[5,"mrb_cv_get","","",null,null],[5,"mrb_mod_cv_set","","",null,null],[5,"mrb_cv_set","","",null,null],[5,"mrb_cv_defined","","",null,null],[5,"mrb_obj_iv_inspect","","",null,null],[5,"mrb_obj_iv_set_force","","",null,null],[5,"mrb_mod_constants","","",null,null],[5,"mrb_f_global_variables","","",null,null],[5,"mrb_obj_instance_variables","","",null,null],[5,"mrb_mod_class_variables","","",null,null],[5,"mrb_mod_cv_get","","",null,null],[5,"mrb_mod_cv_defined","","",null,null],[5,"mrb_ident_p","","",null,null],[5,"mrb_gc_mark_gv","","",null,null],[5,"mrb_gc_free_gv","","",null,null],[5,"mrb_gc_mark_iv","","",null,null],[5,"mrb_gc_mark_iv_size","","",null,null],[5,"mrb_gc_free_iv","","",null,null],[5,"mrb_iv_foreach","","",null,null],[5,"mrb_sys_value_is_nil","","",null,null],[5,"mrb_sys_value_is_false","","",null,null],[5,"mrb_sys_value_is_true","","",null,null],[5,"mrb_sys_range_excl","","",null,null],[5,"mrb_sys_obj_frozen","","",null,null],[5,"mrb_sys_fixnum_to_cint","","",null,null],[5,"mrb_sys_float_to_cdouble","","",null,null],[5,"mrb_sys_cptr_ptr","","",null,null],[5,"mrb_sys_basic_ptr","","",null,null],[5,"mrb_sys_obj_ptr","","",null,null],[5,"mrb_sys_proc_ptr","","",null,null],[5,"mrb_sys_class_ptr","","",null,null],[5,"mrb_sys_class_to_rclass","","",null,null],[5,"mrb_sys_class_of_value","","",null,null],[5,"mrb_sys_nil_value","","",null,null],[5,"mrb_sys_false_value","","",null,null],[5,"mrb_sys_true_value","","",null,null],[5,"mrb_sys_fixnum_value","","",null,null],[5,"mrb_sys_float_value","","",null,null],[5,"mrb_sys_cptr_value","","",null,null],[5,"mrb_sys_obj_value","","",null,null],[5,"mrb_sys_class_value","","",null,null],[5,"mrb_sys_module_value","","",null,null],[5,"mrb_sys_data_value","","",null,null],[5,"mrb_sys_proc_value","","",null,null],[5,"mrb_sys_new_symbol","","",null,null],[5,"mrb_sys_set_instance_tt","","",null,null],[5,"mrb_sys_data_init","","",null,null],[5,"mrb_sys_raise","","",null,null],[5,"mrb_sys_raise_current_exception","","",null,null],[5,"mrb_sys_ary_len","","",null,null],[5,"mrb_sys_gc_arena_save","","",null,null],[5,"mrb_sys_gc_arena_restore","","",null,null],[5,"mrb_sys_gc_disable","","",null,null],[5,"mrb_sys_gc_enable","","",null,null],[5,"mrb_sys_value_is_dead","","",null,null],[5,"mrb_sys_gc_live_objects","","",null,null],[5,"mrb_sys_safe_gc_mark","","",null,null],[5,"mrb_init_mrbgems","","",null,null],[0,"specifiers","","Format specifiers for `mrb_get_args` function.",null,null],[17,"OBJECT","artichoke_backend::sys::specifiers","Could be used to retrieve any type of argument",null,null],[17,"CLASS","","Retrieve a Class argument",null,null],[17,"MODULE","","Retreive a Module argument",null,null],[17,"STRING","","Retrieve a String argument",null,null],[17,"NILABLE_STRING","","Retrieve a String argument or `nil`",null,null],[17,"ARRAY","","Retrieve an Array argument",null,null],[17,"NILABLE_ARRAY","","Retrieve an Array argument or `nil`",null,null],[17,"HASH","","Retrieve a Hash argument",null,null],[17,"NILABLE_HASH","","Retrieve a Hash argument or `nil`",null,null],[17,"CSTRING_AND_LEN","","Retrieve a `CString` and its length. Usable like:",null,null],[17,"NULLABLE_CSTRING_AND_LEN","","Retrieve a `CString` and its length. Gives (NULL, 0) for…",null,null],[17,"CSTRING","","Retrieve a NUL-terminated `CString` argument",null,null],[17,"NULLABLE_CSTRING","","Retrieve a NUL-terminated `CString` argument. Gives NULL…",null,null],[17,"CARRAY_AND_LEN","","Receive two arguments, a C Array of `mrb_value`s and len.…",null,null],[17,"NULLABLE_CARRAY_AND_LEN","","Receive two arguments, a C Array of `mrb_value`s and len.…",null,null],[17,"FLOAT","","Retrieve a Float argument.",null,null],[17,"INTEGER","","Retrieve an Integer argument.",null,null],[17,"BOOLEAN","","Retrieve a Boolean argument.",null,null],[17,"SYMBOL","","Retrieve a Symbol argument.",null,null],[17,"DATA","","Receive two arguments, a `void *` pointer to data and an…",null,null],[17,"INLINE_STRUCT","","Internal, retrieve a `void *`.",null,null],[17,"BLOCK","","Retrieve a Block argument.",null,null],[17,"BLOCK_REQUIRED","","Retrieve a Block argument and raise an exception if none…",null,null],[17,"REST","","Retrieve the rest of arguments as an array; Usable like:",null,null],[17,"REST_NO_COPY","","Retrieve the rest of arguments as an array; avoid copy of…",null,null],[17,"FOLLOWING_ARGS_OPTIONAL","","The following args specified are optional.",null,null],[17,"PREVIOUS_OPTIONAL_ARG_GIVEN","","Retrieve a boolean indicating whether the previous…",null,null],[5,"mrb_args_req","artichoke_backend::sys","Function requires n arguments.",null,[[],["mrb_aspec",6]]],[5,"mrb_args_opt","","Function takes n optional arguments",null,[[],["mrb_aspec",6]]],[5,"mrb_args_req_and_opt","","Function takes n1 mandatory arguments and n2 optional…",null,[[],["mrb_aspec",6]]],[5,"mrb_args_rest","","rest argument",null,[[],["mrb_aspec",6]]],[5,"mrb_args_post","","required arguments after rest",null,[[],["mrb_aspec",6]]],[5,"mrb_args_key","","keyword arguments (n of keys, kdict)",null,[[],["mrb_aspec",6]]],[5,"mrb_args_block","","Function takes a block argument",null,[[],["mrb_aspec",6]]],[5,"mrb_args_any","","Function accepts any number of arguments",null,[[],["mrb_aspec",6]]],[5,"mrb_args_none","","Function accepts no arguments",null,[[],["mrb_aspec",6]]],[3,"__BindgenBitfieldUnit","","",null,null],[3,"__IncompleteArrayField","","",null,null],[17,"MRB_INT_BIT","","",null,null],[17,"MRB_PRIo","","",null,null],[17,"MRB_PRId","","",null,null],[17,"MRB_PRIx","","",null,null],[17,"MRB_FL_OBJ_IS_FROZEN","","",null,null],[17,"MRB_FIXNUM_SHIFT","","",null,null],[17,"MRB_SYMBOL_MAX","","",null,null],[17,"MRB_EACH_OBJ_OK","","",null,null],[17,"MRB_EACH_OBJ_BREAK","","",null,null],[17,"MRB_GC_ARENA_SIZE","","",null,null],[17,"MRUBY_RUBY_VERSION","","",null,null],[17,"MRUBY_RUBY_ENGINE","","",null,null],[17,"MRUBY_RELEASE_MAJOR","","",null,null],[17,"MRUBY_RELEASE_MINOR","","",null,null],[17,"MRUBY_RELEASE_TEENY","","",null,null],[17,"MRUBY_RELEASE_NO","","",null,null],[17,"MRUBY_RELEASE_YEAR","","",null,null],[17,"MRUBY_RELEASE_MONTH","","",null,null],[17,"MRUBY_RELEASE_DAY","","",null,null],[17,"MRUBY_BIRTH_YEAR","","",null,null],[17,"MRUBY_AUTHOR","","",null,null],[17,"MRB_FIXED_STATE_ATEXIT_STACK_SIZE","","",null,null],[17,"MRB_METHOD_CACHE_SIZE","","",null,null],[17,"MRB_ARY_EMBED_MASK","","",null,null],[17,"MRB_ARY_SHARED","","",null,null],[17,"MRB_FL_CLASS_IS_PREPENDED","","",null,null],[17,"MRB_FL_CLASS_IS_ORIGIN","","",null,null],[17,"MRB_FL_CLASS_IS_INHERITED","","",null,null],[17,"MRB_INSTANCE_TT_MASK","","",null,null],[17,"MRB_PARSER_TOKBUF_MAX","","",null,null],[17,"MRB_PARSER_TOKBUF_SIZE","","",null,null],[17,"MRB_ISEQ_NO_FREE","","",null,null],[17,"MRB_DUMP_OK","","",null,null],[17,"MRB_DUMP_GENERAL_FAILURE","","",null,null],[17,"MRB_DUMP_WRITE_FAULT","","",null,null],[17,"MRB_DUMP_READ_FAULT","","",null,null],[17,"MRB_DUMP_CRC_ERROR","","",null,null],[17,"MRB_DUMP_INVALID_FILE_HEADER","","",null,null],[17,"MRB_DUMP_INVALID_IREP","","",null,null],[17,"MRB_DUMP_INVALID_ARGUMENT","","",null,null],[17,"MRB_DUMP_NULL_SYM_LEN","","",null,null],[17,"MRB_DUMP_DEFAULT_STR_LEN","","",null,null],[17,"MRB_HASH_DEFAULT","","",null,null],[17,"MRB_HASH_PROC_DEFAULT","","",null,null],[17,"MRB_ENV_STACK_UNSHARED","","",null,null],[17,"MRB_PROC_CFUNC_FL","","",null,null],[17,"MRB_PROC_STRICT","","",null,null],[17,"MRB_PROC_ORPHAN","","",null,null],[17,"MRB_PROC_ENVSET","","",null,null],[17,"MRB_PROC_SCOPE","","",null,null],[17,"MRB_METHOD_FUNC_FL","","",null,null],[17,"MRB_METHOD_NOARG_FL","","",null,null],[17,"REGEXP_CLASS","","",null,null],[17,"MRB_STR_SHARED","","",null,null],[17,"MRB_STR_FSHARED","","",null,null],[17,"MRB_STR_NOFREE","","",null,null],[17,"MRB_STR_EMBED","","",null,null],[17,"MRB_STR_POOL","","",null,null],[17,"MRB_STR_ASCII","","",null,null],[17,"MRB_STR_EMBED_LEN_SHIFT","","",null,null],[17,"MRB_STR_EMBED_LEN_BITSIZE","","",null,null],[17,"MRB_STR_EMBED_LEN_MASK","","",null,null],[17,"MRB_STR_TYPE_MASK","","",null,null],[6,"va_list","","",null,null],[6,"__uint8_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"mrb_sym","","",null,null],[6,"mrb_bool","","",null,null],[6,"mrb_int","","",null,null],[6,"mrb_float","","",null,null],[4,"mrb_vtype","","",null,null],[13,"MRB_TT_FALSE","","",100,null],[13,"MRB_TT_TRUE","","",100,null],[13,"MRB_TT_FLOAT","","",100,null],[13,"MRB_TT_FIXNUM","","",100,null],[13,"MRB_TT_SYMBOL","","",100,null],[13,"MRB_TT_UNDEF","","",100,null],[13,"MRB_TT_CPTR","","",100,null],[13,"MRB_TT_FREE","","",100,null],[13,"MRB_TT_OBJECT","","",100,null],[13,"MRB_TT_CLASS","","",100,null],[13,"MRB_TT_MODULE","","",100,null],[13,"MRB_TT_ICLASS","","",100,null],[13,"MRB_TT_SCLASS","","",100,null],[13,"MRB_TT_PROC","","",100,null],[13,"MRB_TT_ARRAY","","",100,null],[13,"MRB_TT_HASH","","",100,null],[13,"MRB_TT_STRING","","",100,null],[13,"MRB_TT_RANGE","","",100,null],[13,"MRB_TT_EXCEPTION","","",100,null],[13,"MRB_TT_FILE","","",100,null],[13,"MRB_TT_ENV","","",100,null],[13,"MRB_TT_DATA","","",100,null],[13,"MRB_TT_FIBER","","",100,null],[13,"MRB_TT_ISTRUCT","","",100,null],[13,"MRB_TT_BREAK","","",100,null],[13,"MRB_TT_MAXDEFINE","","",100,null],[3,"RBasic","","",null,null],[12,"c","","",101,null],[12,"gcnext","","",101,null],[12,"_bitfield_1","","",101,null],[12,"__bindgen_padding_0","","",101,null],[3,"RObject","","",null,null],[12,"c","","",102,null],[12,"gcnext","","",102,null],[12,"_bitfield_1","","",102,null],[12,"iv","","",102,null],[3,"RFiber","","",null,null],[12,"c","","",103,null],[12,"gcnext","","",103,null],[12,"_bitfield_1","","",103,null],[12,"cxt","","",103,null],[19,"mrb_value_union","","",null,null],[12,"f","","",104,null],[12,"p","","",104,null],[12,"i","","",104,null],[12,"sym","","",104,null],[3,"mrb_value","","",null,null],[12,"value","","",105,null],[12,"tt","","",105,null],[6,"mrb_each_object_callback","","",null,null],[17,"mrb_gc_state_MRB_GC_STATE_ROOT","","",null,null],[17,"mrb_gc_state_MRB_GC_STATE_MARK","","",null,null],[17,"mrb_gc_state_MRB_GC_STATE_SWEEP","","",null,null],[6,"mrb_gc_state","","",null,null],[3,"mrb_heap_page","","",null,null],[12,"freelist","","",106,null],[12,"prev","","",106,null],[12,"next","","",106,null],[12,"free_next","","",106,null],[12,"free_prev","","",106,null],[12,"_bitfield_1","","",106,null],[12,"objects","","",106,null],[3,"mrb_gc","","",null,null],[12,"heaps","","",107,null],[12,"sweeps","","",107,null],[12,"free_heaps","","",107,null],[12,"live","","",107,null],[12,"arena","","",107,null],[12,"arena_capa","","",107,null],[12,"arena_idx","","",107,null],[12,"state","","",107,null],[12,"current_white_part","","",107,null],[12,"gray_list","","",107,null],[12,"atomic_gray_list","","",107,null],[12,"live_after_mark","","",107,null],[12,"threshold","","",107,null],[12,"interval_ratio","","",107,null],[12,"step_ratio","","",107,null],[12,"_bitfield_1","","",107,null],[12,"majorgc_old_threshold","","",107,null],[6,"mrb_code","","",null,null],[6,"mrb_aspec","","",null,null],[6,"mrb_allocf","","",null,null],[3,"mrb_callinfo","","",null,null],[12,"mid","","",108,null],[12,"proc_","","",108,null],[12,"stackent","","",108,null],[12,"ridx","","",108,null],[12,"epos","","",108,null],[12,"env","","",108,null],[12,"pc","","",108,null],[12,"err","","",108,null],[12,"argc","","",108,null],[12,"acc","","",108,null],[12,"target_class","","",108,null],[17,"mrb_fiber_state_MRB_FIBER_CREATED","","",null,null],[17,"mrb_fiber_state_MRB_FIBER_RUNNING","","",null,null],[17,"mrb_fiber_state_MRB_FIBER_RESUMED","","",null,null],[17,"mrb_fiber_state_MRB_FIBER_SUSPENDED","","",null,null],[17,"mrb_fiber_state_MRB_FIBER_TRANSFERRED","","",null,null],[17,"mrb_fiber_state_MRB_FIBER_TERMINATED","","",null,null],[6,"mrb_fiber_state","","",null,null],[3,"mrb_context","","",null,null],[12,"prev","","",109,null],[12,"stack","","",109,null],[12,"stbase","","",109,null],[12,"stend","","",109,null],[12,"ci","","",109,null],[12,"cibase","","",109,null],[12,"ciend","","",109,null],[12,"rescue","","",109,null],[12,"rsize","","",109,null],[12,"ensure","","",109,null],[12,"esize","","",109,null],[12,"eidx","","",109,null],[12,"status","","",109,null],[12,"vmexec","","",109,null],[12,"fib","","",109,null],[6,"mrb_func_t","","",null,null],[6,"mrb_method_t","","",null,null],[6,"mrb_atexit_func","","",null,null],[3,"mrb_state","","",null,null],[12,"jmp","","",110,null],[12,"allocf","","",110,null],[12,"allocf_ud","","",110,null],[12,"c","","",110,null],[12,"root_c","","",110,null],[12,"globals","","",110,null],[12,"exc","","",110,null],[12,"top_self","","",110,null],[12,"object_class","","",110,null],[12,"class_class","","",110,null],[12,"module_class","","",110,null],[12,"proc_class","","",110,null],[12,"string_class","","",110,null],[12,"array_class","","",110,null],[12,"hash_class","","",110,null],[12,"range_class","","",110,null],[12,"float_class","","",110,null],[12,"fixnum_class","","",110,null],[12,"true_class","","",110,null],[12,"false_class","","",110,null],[12,"nil_class","","",110,null],[12,"symbol_class","","",110,null],[12,"kernel_module","","",110,null],[12,"gc","","",110,null],[12,"symidx","","",110,null],[12,"symtbl","","",110,null],[12,"symhash","","",110,null],[12,"symcapa","","",110,null],[12,"symbuf","","",110,null],[12,"eException_class","","",110,null],[12,"eStandardError_class","","",110,null],[12,"nomem_err","","",110,null],[12,"stack_err","","",110,null],[12,"ud","","",110,null],[12,"atexit_stack","","",110,null],[12,"atexit_stack_len","","",110,null],[12,"ecall_nest","","",110,null],[6,"mrb_args_format","","",null,null],[3,"mrb_kwargs","","",null,null],[12,"num","","",111,null],[12,"values","","",111,null],[12,"table","","",111,null],[12,"required","","",111,null],[12,"rest","","",111,null],[3,"mrb_pool","","",null,null],[3,"mrb_shared_array","","",null,null],[12,"refcnt","","",112,null],[12,"len","","",112,null],[12,"ptr","","",112,null],[3,"RArray","","",null,null],[12,"c","","",113,null],[12,"gcnext","","",113,null],[12,"_bitfield_1","","",113,null],[12,"as_","","",113,null],[19,"RArray__bindgen_ty_1","","",null,null],[12,"heap","","",114,null],[12,"ary","","",114,null],[3,"RArray__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"len","","",115,null],[12,"aux","","",115,null],[12,"ptr","","",115,null],[19,"RArray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"capa","","",116,null],[12,"shared","","",116,null],[3,"RClass","","",null,null],[12,"c","","",117,null],[12,"gcnext","","",117,null],[12,"_bitfield_1","","",117,null],[12,"iv","","",117,null],[12,"mt","","",117,null],[12,"super_","","",117,null],[3,"mrbc_context","","",null,null],[12,"syms","","",118,null],[12,"slen","","",118,null],[12,"filename","","",118,null],[12,"lineno","","",118,null],[12,"partial_hook","","",118,null],[12,"partial_data","","",118,null],[12,"target_class","","",118,null],[12,"_bitfield_1","","",118,null],[12,"parser_nerr","","",118,null],[3,"mrb_ast_node","","",null,null],[12,"car","","",119,null],[12,"cdr","","",119,null],[12,"lineno","","",119,null],[12,"filename_index","","",119,null],[4,"mrb_lex_state_enum","","",null,null],[13,"EXPR_BEG","","",120,null],[13,"EXPR_END","","",120,null],[13,"EXPR_ENDARG","","",120,null],[13,"EXPR_ENDFN","","",120,null],[13,"EXPR_ARG","","",120,null],[13,"EXPR_CMDARG","","",120,null],[13,"EXPR_MID","","",120,null],[13,"EXPR_FNAME","","",120,null],[13,"EXPR_DOT","","",120,null],[13,"EXPR_CLASS","","",120,null],[13,"EXPR_VALUE","","",120,null],[13,"EXPR_MAX_STATE","","",120,null],[3,"mrb_parser_message","","",null,null],[12,"lineno","","",121,null],[12,"column","","",121,null],[12,"message","","",121,null],[17,"mrb_string_type_str_not_parsing","","",null,null],[17,"mrb_string_type_str_squote","","",null,null],[17,"mrb_string_type_str_dquote","","",null,null],[17,"mrb_string_type_str_regexp","","",null,null],[17,"mrb_string_type_str_sword","","",null,null],[17,"mrb_string_type_str_dword","","",null,null],[17,"mrb_string_type_str_ssym","","",null,null],[17,"mrb_string_type_str_ssymbols","","",null,null],[17,"mrb_string_type_str_dsymbols","","",null,null],[17,"mrb_string_type_str_heredoc","","",null,null],[17,"mrb_string_type_str_xquote","","",null,null],[6,"mrb_string_type","","",null,null],[3,"mrb_parser_heredoc_info","","",null,null],[12,"_bitfield_1","","",122,null],[12,"type_","","",122,null],[12,"term","","",122,null],[12,"term_len","","",122,null],[12,"doc","","",122,null],[3,"mrb_parser_state","","",null,null],[12,"mrb","","",123,null],[12,"pool","","",123,null],[12,"cells","","",123,null],[12,"s","","",123,null],[12,"send","","",123,null],[12,"cxt","","",123,null],[12,"filename_sym","","",123,null],[12,"lineno","","",123,null],[12,"column","","",123,null],[12,"lstate","","",123,null],[12,"lex_strterm","","",123,null],[12,"cond_stack","","",123,null],[12,"cmdarg_stack","","",123,null],[12,"paren_nest","","",123,null],[12,"lpar_beg","","",123,null],[12,"in_def","","",123,null],[12,"in_single","","",123,null],[12,"_bitfield_1","","",123,null],[12,"locals","","",123,null],[12,"pb","","",123,null],[12,"tokbuf","","",123,null],[12,"buf","","",123,null],[12,"tidx","","",123,null],[12,"tsiz","","",123,null],[12,"all_heredocs","","",123,null],[12,"heredocs_from_nextline","","",123,null],[12,"parsing_heredoc","","",123,null],[12,"lex_strterm_before_heredoc","","",123,null],[12,"ylval","","",123,null],[12,"nerr","","",123,null],[12,"nwarn","","",123,null],[12,"tree","","",123,null],[12,"_bitfield_2","","",123,null],[12,"error_buffer","","",123,null],[12,"warn_buffer","","",123,null],[12,"filename_table","","",123,null],[12,"filename_table_length","","",123,null],[12,"current_filename_index","","",123,null],[12,"jmp","","",123,null],[3,"mrb_data_type","","",null,null],[12,"struct_name","","",124,null],[12,"dfree","","",124,null],[3,"RData","","",null,null],[12,"c","","",125,null],[12,"gcnext","","",125,null],[12,"_bitfield_1","","",125,null],[12,"iv","","",125,null],[12,"type_","","",125,null],[12,"data","","",125,null],[3,"mrb_locals","","",null,null],[12,"name","","",126,null],[12,"r","","",126,null],[3,"mrb_irep","","",null,null],[12,"nlocals","","",127,null],[12,"nregs","","",127,null],[12,"flags","","",127,null],[12,"iseq","","",127,null],[12,"pool","","",127,null],[12,"syms","","",127,null],[12,"reps","","",127,null],[12,"lv","","",127,null],[12,"debug_info","","",127,null],[12,"ilen","","",127,null],[12,"plen","","",127,null],[12,"slen","","",127,null],[12,"rlen","","",127,null],[12,"refcnt","","",127,null],[3,"mrb_insn_data","","",null,null],[12,"insn","","",128,null],[12,"a","","",128,null],[12,"b","","",128,null],[12,"c","","",128,null],[3,"RHash","","",null,null],[12,"c","","",129,null],[12,"gcnext","","",129,null],[12,"_bitfield_1","","",129,null],[12,"iv","","",129,null],[12,"ht","","",129,null],[6,"mrb_hash_foreach_func","","",null,null],[6,"khint_t","","",null,null],[17,"mrb_insn_OP_NOP","","",null,null],[17,"mrb_insn_OP_MOVE","","",null,null],[17,"mrb_insn_OP_LOADL","","",null,null],[17,"mrb_insn_OP_LOADI","","",null,null],[17,"mrb_insn_OP_LOADINEG","","",null,null],[17,"mrb_insn_OP_LOADI__1","","",null,null],[17,"mrb_insn_OP_LOADI_0","","",null,null],[17,"mrb_insn_OP_LOADI_1","","",null,null],[17,"mrb_insn_OP_LOADI_2","","",null,null],[17,"mrb_insn_OP_LOADI_3","","",null,null],[17,"mrb_insn_OP_LOADI_4","","",null,null],[17,"mrb_insn_OP_LOADI_5","","",null,null],[17,"mrb_insn_OP_LOADI_6","","",null,null],[17,"mrb_insn_OP_LOADI_7","","",null,null],[17,"mrb_insn_OP_LOADSYM","","",null,null],[17,"mrb_insn_OP_LOADNIL","","",null,null],[17,"mrb_insn_OP_LOADSELF","","",null,null],[17,"mrb_insn_OP_LOADT","","",null,null],[17,"mrb_insn_OP_LOADF","","",null,null],[17,"mrb_insn_OP_GETGV","","",null,null],[17,"mrb_insn_OP_SETGV","","",null,null],[17,"mrb_insn_OP_GETSV","","",null,null],[17,"mrb_insn_OP_SETSV","","",null,null],[17,"mrb_insn_OP_GETIV","","",null,null],[17,"mrb_insn_OP_SETIV","","",null,null],[17,"mrb_insn_OP_GETCV","","",null,null],[17,"mrb_insn_OP_SETCV","","",null,null],[17,"mrb_insn_OP_GETCONST","","",null,null],[17,"mrb_insn_OP_SETCONST","","",null,null],[17,"mrb_insn_OP_GETMCNST","","",null,null],[17,"mrb_insn_OP_SETMCNST","","",null,null],[17,"mrb_insn_OP_GETUPVAR","","",null,null],[17,"mrb_insn_OP_SETUPVAR","","",null,null],[17,"mrb_insn_OP_JMP","","",null,null],[17,"mrb_insn_OP_JMPIF","","",null,null],[17,"mrb_insn_OP_JMPNOT","","",null,null],[17,"mrb_insn_OP_JMPNIL","","",null,null],[17,"mrb_insn_OP_ONERR","","",null,null],[17,"mrb_insn_OP_EXCEPT","","",null,null],[17,"mrb_insn_OP_RESCUE","","",null,null],[17,"mrb_insn_OP_POPERR","","",null,null],[17,"mrb_insn_OP_RAISE","","",null,null],[17,"mrb_insn_OP_EPUSH","","",null,null],[17,"mrb_insn_OP_EPOP","","",null,null],[17,"mrb_insn_OP_SENDV","","",null,null],[17,"mrb_insn_OP_SENDVB","","",null,null],[17,"mrb_insn_OP_SEND","","",null,null],[17,"mrb_insn_OP_SENDB","","",null,null],[17,"mrb_insn_OP_CALL","","",null,null],[17,"mrb_insn_OP_SUPER","","",null,null],[17,"mrb_insn_OP_ARGARY","","",null,null],[17,"mrb_insn_OP_ENTER","","",null,null],[17,"mrb_insn_OP_KEY_P","","",null,null],[17,"mrb_insn_OP_KEYEND","","",null,null],[17,"mrb_insn_OP_KARG","","",null,null],[17,"mrb_insn_OP_RETURN","","",null,null],[17,"mrb_insn_OP_RETURN_BLK","","",null,null],[17,"mrb_insn_OP_BREAK","","",null,null],[17,"mrb_insn_OP_BLKPUSH","","",null,null],[17,"mrb_insn_OP_ADD","","",null,null],[17,"mrb_insn_OP_ADDI","","",null,null],[17,"mrb_insn_OP_SUB","","",null,null],[17,"mrb_insn_OP_SUBI","","",null,null],[17,"mrb_insn_OP_MUL","","",null,null],[17,"mrb_insn_OP_DIV","","",null,null],[17,"mrb_insn_OP_EQ","","",null,null],[17,"mrb_insn_OP_LT","","",null,null],[17,"mrb_insn_OP_LE","","",null,null],[17,"mrb_insn_OP_GT","","",null,null],[17,"mrb_insn_OP_GE","","",null,null],[17,"mrb_insn_OP_ARRAY","","",null,null],[17,"mrb_insn_OP_ARRAY2","","",null,null],[17,"mrb_insn_OP_ARYCAT","","",null,null],[17,"mrb_insn_OP_ARYPUSH","","",null,null],[17,"mrb_insn_OP_ARYDUP","","",null,null],[17,"mrb_insn_OP_AREF","","",null,null],[17,"mrb_insn_OP_ASET","","",null,null],[17,"mrb_insn_OP_APOST","","",null,null],[17,"mrb_insn_OP_INTERN","","",null,null],[17,"mrb_insn_OP_STRING","","",null,null],[17,"mrb_insn_OP_STRCAT","","",null,null],[17,"mrb_insn_OP_HASH","","",null,null],[17,"mrb_insn_OP_HASHADD","","",null,null],[17,"mrb_insn_OP_HASHCAT","","",null,null],[17,"mrb_insn_OP_LAMBDA","","",null,null],[17,"mrb_insn_OP_BLOCK","","",null,null],[17,"mrb_insn_OP_METHOD","","",null,null],[17,"mrb_insn_OP_RANGE_INC","","",null,null],[17,"mrb_insn_OP_RANGE_EXC","","",null,null],[17,"mrb_insn_OP_OCLASS","","",null,null],[17,"mrb_insn_OP_CLASS","","",null,null],[17,"mrb_insn_OP_MODULE","","",null,null],[17,"mrb_insn_OP_EXEC","","",null,null],[17,"mrb_insn_OP_DEF","","",null,null],[17,"mrb_insn_OP_ALIAS","","",null,null],[17,"mrb_insn_OP_UNDEF","","",null,null],[17,"mrb_insn_OP_SCLASS","","",null,null],[17,"mrb_insn_OP_TCLASS","","",null,null],[17,"mrb_insn_OP_DEBUG","","",null,null],[17,"mrb_insn_OP_ERR","","",null,null],[17,"mrb_insn_OP_EXT1","","",null,null],[17,"mrb_insn_OP_EXT2","","",null,null],[17,"mrb_insn_OP_EXT3","","",null,null],[17,"mrb_insn_OP_STOP","","",null,null],[6,"mrb_insn","","",null,null],[3,"REnv","","",null,null],[12,"c","","",130,null],[12,"gcnext","","",130,null],[12,"_bitfield_1","","",130,null],[12,"stack","","",130,null],[12,"cxt","","",130,null],[12,"mid","","",130,null],[3,"RProc","","",null,null],[12,"c","","",131,null],[12,"gcnext","","",131,null],[12,"_bitfield_1","","",131,null],[12,"body","","",131,null],[12,"upper","","",131,null],[12,"e","","",131,null],[19,"RProc__bindgen_ty_1","","",null,null],[12,"irep","","",132,null],[12,"func","","",132,null],[19,"RProc__bindgen_ty_2","","",null,null],[12,"target_class","","",133,null],[12,"env","","",133,null],[3,"kh_mt","","",null,null],[12,"n_buckets","","",134,null],[12,"size","","",134,null],[12,"n_occupied","","",134,null],[12,"ed_flags","","",134,null],[12,"keys","","",134,null],[12,"vals","","",134,null],[3,"mrb_range_edges","","",null,null],[12,"beg","","",135,null],[12,"end","","",135,null],[3,"RRange","","",null,null],[12,"c","","",136,null],[12,"gcnext","","",136,null],[12,"_bitfield_1","","",136,null],[12,"edges","","",136,null],[12,"excl","","",136,null],[4,"mrb_range_beg_len","","",null,null],[13,"MRB_RANGE_TYPE_MISMATCH","","",137,null],[13,"MRB_RANGE_OK","","",137,null],[13,"MRB_RANGE_OUT","","",137,null],[3,"RString","","",null,null],[12,"c","","",138,null],[12,"gcnext","","",138,null],[12,"_bitfield_1","","",138,null],[12,"as_","","",138,null],[19,"RString__bindgen_ty_1","","",null,null],[12,"heap","","",139,null],[3,"RString__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"len","","",140,null],[12,"aux","","",140,null],[12,"ptr","","",140,null],[19,"RString__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"capa","","",141,null],[12,"shared","","",141,null],[12,"fshared","","",141,null],[6,"__jmp_buf","","",null,null],[3,"__sigset_t","","",null,null],[12,"__val","","",142,null],[3,"__jmp_buf_tag","","",null,null],[12,"__jmpbuf","","",143,null],[12,"__mask_was_saved","","",143,null],[12,"__saved_mask","","",143,null],[6,"jmp_buf","","",null,null],[3,"mrb_jmpbuf","","",null,null],[12,"impl_","","",144,null],[6,"mrb_iv_foreach_func","","",null,null],[6,"__builtin_va_list","","",null,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",145,null],[12,"fp_offset","","",145,null],[12,"overflow_arg_area","","",145,null],[12,"reg_save_area","","",145,null],[3,"iv_tbl","","",null,null],[12,"_address","","",146,null],[3,"symbol_name","","",null,null],[12,"_address","","",147,null],[3,"mrb_irep_debug_info","","",null,null],[12,"_address","","",148,null],[3,"htable","","",null,null],[12,"_address","","",149,null],[3,"mrb_shared_string","","",null,null],[12,"_address","","",150,null],[5,"mrb_sys_mruby_version","","Version metadata `String` for embedded mruby.",null,[[],["string",3]]],[5,"mrb_sys_state_debug","","Debug representation for [`mrb_state`].",null,[[],["string",3]]],[0,"types","artichoke_backend","",null,null],[4,"Ruby","artichoke_backend::types","Classes of Ruby types.",null,null],[13,"Array","","Ruby `Array` type.",19,null],[13,"Bool","","Ruby `TrueClass` and `FalseClass` type.",19,null],[13,"Class","","Ruby `Class` type.",19,null],[13,"CPointer","","FFI type for a borrowed C pointer.",19,null],[13,"Data","","FFI type for an owned C pointer.",19,null],[13,"Exception","","Ruby `Exception` type.",19,null],[13,"Fiber","","Ruby `Fiber` type.",19,null],[13,"Fixnum","","Ruby `Fixnum` type.",19,null],[13,"Float","","Ruby `Float` type.",19,null],[13,"Hash","","Ruby `Hash` type.",19,null],[13,"InlineStruct","","Internal type for non-heap allocated structs.",19,null],[13,"Module","","Ruby `Module` type.",19,null],[13,"Nil","","Ruby `nil` singleton type, the only instance of `NilClass`.",19,null],[13,"Object","","Ruby `Object` type.",19,null],[13,"Proc","","Ruby `Proc` type.",19,null],[13,"Range","","Ruby `Range` type.",19,null],[13,"SingletonClass","","Internal type for the singleton class of an object.",19,null],[13,"String","","Ruby `String` type.",19,null],[13,"Symbol","","Ruby `Symbol` type.",19,null],[13,"Unreachable","","Unreachable interpreter value. Receiving one of these from…",19,null],[13,"RecursiveSelfOwnership","","A special `Value` that is a placeholder for collections…",19,null],[4,"Rust","","Classes of Rust types.",null,null],[13,"Bool","","Rust `bool` type.",20,null],[13,"Bytes","","Rust `Vec<u8>` type.",20,null],[13,"Float","","Rust float type.",20,null],[13,"Map","","Rust `HashMap<K, V>` type.",20,null],[13,"Object","","Aribtrary Rust struct type.",20,null],[13,"SignedInt","","Rust signed integer type.",20,null],[13,"String","","Rust `String` type.",20,null],[13,"UnsignedInt","","Rust unsigned integer type.",20,null],[13,"Vec","","Rust `Vec<T>` type.",20,null],[6,"Fp","","Artichoke native floating point type.",null,null],[6,"Int","","Artichoke native integer type.",null,null],[5,"ruby_from_mrb_value","","Parse a [`Ruby`] type classifier from a [`sys::mrb_value`].",null,[[["mrb_value",3]],["ruby",4]]],[0,"value","artichoke_backend","",null,null],[17,"MRB_FUNCALL_ARGC_MAX","artichoke_backend::value","Max argument count for function calls including initialize…",null,null],[3,"Value","","Boxed Ruby value in the [`Artichoke`] interpreter.",null,null],[11,"new","","Create a new, empty Ruby value.",151,[[]]],[11,"nil","","Create a `nil` Ruby Value.",151,[[]]],[11,"inner","","The [`sys::mrb_value`] that this [`Value`] wraps.",151,[[],["mrb_value",3]]],[11,"is_unreachable","","Whether a value is an interpreter-only variant not exposed…",151,[[]]],[11,"is_dead","","Return whether this object is unreachable by any GC roots.",151,[[["artichoke",3]]]],[11,"is_range","","",151,[[["int",6],["artichoke",3]],[["error",3],["option",4],["result",4]]]],[11,"implicitly_convert_to_int","","",151,[[["artichoke",3]],[["int",6],["typeerror",3],["result",4]]]],[11,"implicitly_convert_to_string","","",151,[[["artichoke",3]],[["typeerror",3],["result",4]]]],[11,"implicitly_convert_to_nilable_string","","",151,[[["artichoke",3]],[["typeerror",3],["result",4],["option",4]]]],[3,"ArgCountError","","Argument count exceeds maximum allowed by the VM.",null,null],[12,"given","","Number of arguments given.",152,null],[12,"max","","Maximum number of arguments supported.",152,null],[11,"new","","Constructs a new, empty `ArgCountError`.",152,[[]]],[0,"prelude","artichoke_backend","A \\\"prelude\\\" for users of the `artichoke-backend` crate.",null,null],[8,"CoerceToNumeric","artichoke_backend::prelude","Coerce Ruby values to native numerics (floats and integers).",null,null],[16,"Value","","Concrete type of boxed Ruby value as inputs to coerce…",0,null],[16,"Float","","Concrete float type to coerce values into, e.g. [`f64`].",0,null],[16,"Error","","Concrete error type for errors encountered when coercing…",0,null],[10,"coerce_to_float","","Coerce the given Ruby value to a `Float`.",0,[[],["result",4]]],[8,"DefineConstant","","Deifne constants on an interprter.",null,null],[16,"Value","","Concrete type for Ruby values.",1,null],[16,"Error","","Concrete error type for fallible operations.",1,null],[10,"define_global_constant","","Define a global constant.",1,[[],["result",4]]],[10,"define_class_constant","","Define a class constant.",1,[[],["result",4]]],[10,"define_module_constant","","Define a module constant.",1,[[],["result",4]]],[8,"Convert","","Infallible conversion between two types.",null,null],[10,"convert","","Performs the infallible conversion.",2,[[]]],[8,"ConvertMut","","Mutable infallible conversion between two types.",null,null],[10,"convert_mut","","Performs the infallible conversion.",3,[[]]],[8,"TryConvert","","Fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",4,null],[10,"try_convert","","Performs the fallible conversion.",4,[[],["result",4]]],[8,"TryConvertMut","","Mutable fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",5,null],[10,"try_convert_mut","","Performs the fallible conversion.",5,[[],["result",4]]],[8,"Debug","","Debugging and `Exception` message support.",null,null],[16,"Value","","Concrete type for return values from eval.",6,null],[10,"inspect_type_name_for_value","","Return a name for thie given value\'s type suitable for…",6,[[]]],[8,"Eval","","Execute code and retrieve its result.",null,null],[16,"Value","","Concrete type for return values from eval.",7,null],[16,"Error","","Concrete error type for eval functions.",7,null],[10,"eval","","Eval code on the Artichoke interpreter using the current…",7,[[],["result",4]]],[10,"eval_os_str","","Eval code on the Artichoke interpreter using the current…",7,[[["osstr",3]],["result",4]]],[10,"eval_file","","Eval code on the Artichoke interpreter using a new file…",7,[[["path",3]],["result",4]]],[8,"File","","Rust extension hook that can be required.",null,null],[16,"Artichoke","","Concrete type for interpreter.",8,null],[16,"Error","","Concrete error type for eval functions.",8,null],[10,"require","","Called when the filename mapped to this type is required…",8,[[],["result",4]]],[8,"Globals","","Get and set global variables on an interpreter.",null,null],[16,"Value","","Concrete value type for global variables.",9,null],[16,"Error","","Concrete error type for failures manipulating global…",9,null],[10,"set_global_variable","","Set global variable pointed to by `name` to the given Ruby…",9,[[],["result",4]]],[10,"unset_global_variable","","Unset global variable pointed to by `name`.",9,[[],["result",4]]],[10,"get_global_variable","","Get the Ruby value stored in the global variable pointed…",9,[[],[["result",4],["option",4]]]],[8,"Intern","","Store and retrieve bytestrings that have the same lifetime…",null,null],[16,"Symbol","","Concrete type for symbol identifiers.",10,null],[16,"Error","","Concrete type for errors returned while interning symbols.",10,null],[18,"SYMBOL_RANGE_START","","The initial `Symbol` index returned by the interner.",10,null],[10,"intern_bytes","","Store an immutable bytestring for the life of the…",10,[[],["result",4]]],[10,"check_interned_bytes","","Check if a bytestring is already interned and return its…",10,[[],[["result",4],["option",4]]]],[11,"intern_string","","Store an immutable string for the life of the interpreter.",10,[[],["result",4]]],[11,"check_interned_string","","Check if a string is already interned and return its…",10,[[],[["result",4],["option",4]]]],[10,"lookup_symbol","","Retrieve the original byte content of an interned…",10,[[],[["result",4],["option",4]]]],[10,"symbol_count","","Retrieve the number of unique strings interned.",10,[[]]],[8,"Io","","Make I/O external to the interpreter.",null,null],[16,"Error","","Concrete error type for errors encountered when reading…",11,null],[10,"print","","Writes the given bytes to the interpreter stdout stream.",11,[[],["result",4]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",11,[[],["result",4]]],[8,"LoadSources","","Load Ruby sources and Rust extensions into an interpreter.",null,null],[16,"Artichoke","","Concrete type for interpreter.",12,null],[16,"Error","","Concrete type for errors returned from filesystem IO.",12,null],[16,"Exception","","Concrete type for errors returned by `File::require`.",12,null],[10,"def_file_for_type","","Add a Rust extension hook to the virtual filesystem. A…",12,[[],["result",4]]],[10,"def_rb_source_file","","Add a Ruby source to the virtual filesystem.",12,[[],["result",4]]],[10,"source_is_file","","Test for a source file at a path.",12,[[],["result",4]]],[10,"load_source","","Load source located at the given path.",12,[[],["result",4]]],[10,"require_source","","Require source located at the given path.",12,[[],["result",4]]],[10,"read_source_file_contents","","Retrieve file contents for a source file.",12,[[],[["result",4],["cow",4]]]],[4,"IncrementLinenoError","","Errors encountered when incrementing line numbers on…",null,null],[13,"Overflow","","An overflow occurred when incrementing the line number.",13,null],[8,"Parser","","Manage parser state, active filename context, and line…",null,null],[16,"Context","","Concrete type for parser context.",14,null],[16,"Error","","Error type for Parser APIs.",14,null],[10,"reset_parser","","Reset parser state to initial values.",14,[[],["result",4]]],[10,"fetch_lineno","","Fetch the current line number from the parser state.",14,[[],["result",4]]],[10,"add_fetch_lineno","","Increment line number and return the new value.",14,[[],["result",4]]],[10,"push_context","","Set the currently active context by modifying the parser…",14,[[],["result",4]]],[10,"pop_context","","Remove the current active context and return it.",14,[[],[["option",4],["result",4]]]],[10,"peek_context","","Return a reference to the currently active context.",14,[[],[["result",4],["option",4]]]],[8,"Prng","","Interpreter global psuedorandom number generator.",null,null],[16,"Error","","Concrete type for PRNG errors.",15,null],[16,"Prng","","Conrete type for the interpreter psuedorandom number…",15,null],[10,"prng","","Return a shared reference to the interpreter psuedorandom…",15,[[],["result",4]]],[10,"prng_mut","","Return a mutable reference to the interpreter psuedorandom…",15,[[],["result",4]]],[8,"Regexp","","Track the state of `Regexp` globals and global interpreter…",null,null],[16,"Error","","Concrete error type for errors encountered when…",16,null],[10,"active_regexp_globals","","Retrieve the current number of set `Regexp` global…",16,[[],["result",4]]],[10,"set_active_regexp_globals","","Set the current number of set `Regexp` global variables.",16,[[],["result",4]]],[10,"clear_regexp","","Clear all `Regexp` state.",16,[[],["result",4]]],[8,"ReleaseMetadata","","Information about an Artichoke build.",null,null],[10,"ruby_copyright","","Copyright information.",17,[[]]],[10,"ruby_description","","A description of the current build.",17,[[]]],[10,"ruby_engine","","The engine, or VM, used in the current build.",17,[[]]],[10,"ruby_engine_version","","The version of the engine, or VM, used in the current build.",17,[[]]],[10,"ruby_patchlevel","","The patch level the current build.",17,[[]]],[10,"ruby_platform","","The target triple of the platform this build targets.",17,[[]]],[10,"ruby_release_date","","The build date of this release.",17,[[]]],[10,"ruby_revision","","The revision count of the Artichoke git repo used for this…",17,[[]]],[10,"ruby_version","","The target MRI Ruby version for this build.",17,[[]]],[10,"artichoke_compiler_version","","A description of the compiler used to build Artichoke.",17,[[],["option",4]]],[8,"TopSelf","","Return a `Value`-wrapped reference to top self.",null,null],[16,"Value","","Concrete [`Value`] type.",18,null],[10,"top_self","","Return a [`Value`]-wrapped reference to \\\"top self\\\".",18,[[]]],[4,"Ruby","","Classes of Ruby types.",null,null],[13,"Array","","Ruby `Array` type.",19,null],[13,"Bool","","Ruby `TrueClass` and `FalseClass` type.",19,null],[13,"Class","","Ruby `Class` type.",19,null],[13,"CPointer","","FFI type for a borrowed C pointer.",19,null],[13,"Data","","FFI type for an owned C pointer.",19,null],[13,"Exception","","Ruby `Exception` type.",19,null],[13,"Fiber","","Ruby `Fiber` type.",19,null],[13,"Fixnum","","Ruby `Fixnum` type.",19,null],[13,"Float","","Ruby `Float` type.",19,null],[13,"Hash","","Ruby `Hash` type.",19,null],[13,"InlineStruct","","Internal type for non-heap allocated structs.",19,null],[13,"Module","","Ruby `Module` type.",19,null],[13,"Nil","","Ruby `nil` singleton type, the only instance of `NilClass`.",19,null],[13,"Object","","Ruby `Object` type.",19,null],[13,"Proc","","Ruby `Proc` type.",19,null],[13,"Range","","Ruby `Range` type.",19,null],[13,"SingletonClass","","Internal type for the singleton class of an object.",19,null],[13,"String","","Ruby `String` type.",19,null],[13,"Symbol","","Ruby `Symbol` type.",19,null],[13,"Unreachable","","Unreachable interpreter value. Receiving one of these from…",19,null],[13,"RecursiveSelfOwnership","","A special `Value` that is a placeholder for collections…",19,null],[4,"Rust","","Classes of Rust types.",null,null],[13,"Bool","","Rust `bool` type.",20,null],[13,"Bytes","","Rust `Vec<u8>` type.",20,null],[13,"Float","","Rust float type.",20,null],[13,"Map","","Rust `HashMap<K, V>` type.",20,null],[13,"Object","","Aribtrary Rust struct type.",20,null],[13,"SignedInt","","Rust signed integer type.",20,null],[13,"String","","Rust `String` type.",20,null],[13,"UnsignedInt","","Rust unsigned integer type.",20,null],[13,"Vec","","Rust `Vec<T>` type.",20,null],[8,"Value","","A boxed Ruby value owned by the interpreter.",null,null],[16,"Artichoke","","Concrete type for Artichoke interpreter.",21,null],[16,"Arg","","Concrete type for arguments passed to `funcall`.",21,null],[16,"Value","","Concrete type for results from `funcall`.",21,null],[16,"Block","","Concrete type for blocks passed to `funcall`.",21,null],[16,"Error","","Concrete error type for funcall errors.",21,null],[10,"funcall","","Call a method on this [`Value`] with arguments and an…",21,[[["option",4]],["result",4]]],[11,"try_into","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[11,"try_into_mut","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[10,"freeze","","Call `#freeze` on this [`Value`].",21,[[],["result",4]]],[10,"is_frozen","","Call `#frozen?` on this [`Value`].",21,[[]]],[10,"is_nil","","Whether `self` is `nil`",21,[[]]],[10,"respond_to","","Whether `self` responds to a method.",21,[[],["result",4]]],[10,"inspect","","Call `#inspect` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"to_s","","Call `#to_s` on this [`Value`].",21,[[],[["global",3],["vec",3]]]],[10,"ruby_type","","Return this values Rust-mapped type tag.",21,[[],["ruby",4]]],[8,"Warn","","Emit warnings during interpreter execution to stderr.",null,null],[16,"Error","","Concrete error type for errors encountered when outputting…",22,null],[10,"warn","","Emit a warning message using `Warning#warn`.",22,[[],["result",4]]],[3,"Artichoke","","Interpreter instance.",null,null],[12,"mrb","","Underlying mruby interpreter.",153,null],[12,"state","","Interpreter state.",153,null],[3,"Guard","","Interpreter guard that prepares an [`Artichoke`] to…",null,null],[3,"Artichoke","artichoke_backend","Interpreter instance.",null,null],[12,"mrb","","Underlying mruby interpreter.",153,null],[12,"state","","Interpreter state.",153,null],[3,"Guard","","Interpreter guard that prepares an [`Artichoke`] to…",null,null],[5,"interpreter","","Create and initialize an [`Artichoke`] interpreter.",null,[[],[["artichoke",3],["result",4],["error",3]]]],[5,"interpreter_with_config","","Create and initialize an [`Artichoke`] interpreter with…",null,[[["releasemetadata",3]],[["artichoke",3],["result",4],["error",3]]]],[14,"unwrap_interpreter","","Extract an `Artichoke` instance from the userdata on a…",null,null],[14,"mrb_get_args","","Extract `sys::mrb_value`s from a `sys::mrb_state` to adapt…",null,null],[11,"from","artichoke_backend::prelude","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"all_symbols","","",153,[[],["allsymbols",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"from","artichoke_backend::block","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","artichoke_backend::class","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","artichoke_backend::convert","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","artichoke_backend::def","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","artichoke_backend::error","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_string","","",158,[[],["string",3]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","artichoke_backend::exception_handler","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","artichoke_backend::extn::core::array::args","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","artichoke_backend::extn::core::array","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"into_iter","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"from","artichoke_backend::extn::core::artichoke","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"from","artichoke_backend::extn::core::comparable","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"from","artichoke_backend::extn::core::enumerable","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"from","artichoke_backend::extn::core::enumerator","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"from","artichoke_backend::extn::core::env","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","artichoke_backend::extn::core::exception","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"to_string","","",165,[[],["string",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"to_string","","",166,[[],["string",3]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"to_string","","",167,[[],["string",3]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"to_string","","",168,[[],["string",3]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"to_string","","",169,[[],["string",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"to_string","","",170,[[],["string",3]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"to_string","","",171,[[],["string",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"to_string","","",174,[[],["string",3]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"to_string","","",177,[[],["string",3]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"to_string","","",178,[[],["string",3]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"to_string","","",179,[[],["string",3]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"to_string","","",180,[[],["string",3]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"to_string","","",181,[[],["string",3]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"to_string","","",182,[[],["string",3]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"vzip","","",182,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"to_string","","",183,[[],["string",3]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"to_string","","",184,[[],["string",3]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"vzip","","",184,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"to_string","","",185,[[],["string",3]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"vzip","","",185,[[]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"to_string","","",186,[[],["string",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"vzip","","",186,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"to_string","","",187,[[],["string",3]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"to_string","","",188,[[],["string",3]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"to_string","","",189,[[],["string",3]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"to_string","","",190,[[],["string",3]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"to_string","","",191,[[],["string",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"vzip","","",191,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"to_string","","",192,[[],["string",3]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"to_string","","",193,[[],["string",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"vzip","","",193,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"to_string","","",194,[[],["string",3]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"to_string","","",195,[[],["string",3]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"to_string","","",196,[[],["string",3]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"to_string","","",197,[[],["string",3]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"to_string","","",198,[[],["string",3]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"vzip","","",198,[[]]],[11,"from","artichoke_backend::extn::core::float","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","artichoke_backend::extn::core::hash","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"vzip","","",199,[[]]],[11,"from","artichoke_backend::extn::core::integer","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","artichoke_backend::extn::core::kernel::integer","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","artichoke_backend::extn::core::kernel::require","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","artichoke_backend::extn::core::kernel","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"from","artichoke_backend::extn::core::matchdata","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"vzip","","",201,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","artichoke_backend::extn::core::math","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"to_string","","",202,[[],["string",3]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"vzip","","",202,[[]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"vzip","","",203,[[]]],[11,"from","artichoke_backend::extn::core::method","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"vzip","","",204,[[]]],[11,"from","artichoke_backend::extn::core::module","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"vzip","","",205,[[]]],[11,"from","artichoke_backend::extn::core::numeric","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"vzip","","",206,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","artichoke_backend::extn::core::object","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"vzip","","",207,[[]]],[11,"from","artichoke_backend::extn::core::proc","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"vzip","","",208,[[]]],[11,"from","artichoke_backend::extn::core::random","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","artichoke_backend::extn::core::range","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"vzip","","",209,[[]]],[11,"from","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","artichoke_backend::extn::core::regexp::backend::onig","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","artichoke_backend::extn::core::regexp::backend::regex::utf8","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","artichoke_backend::extn::core::regexp::backend","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","artichoke_backend::extn::core::regexp::enc","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","artichoke_backend::extn::core::regexp::opts","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","artichoke_backend::extn::core::regexp::pattern","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","artichoke_backend::extn::core::regexp","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"vzip","","",210,[[]]],[11,"from","artichoke_backend::extn::core::string","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"vzip","","",211,[[]]],[11,"from","artichoke_backend::extn::core::symbol","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"vzip","","",212,[[]]],[11,"from","artichoke_backend::extn::core::thread","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"vzip","","",213,[[]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"vzip","","",214,[[]]],[11,"from","artichoke_backend::extn::core::time","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"vzip","","",215,[[]]],[11,"from","artichoke_backend::extn::core::warning","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"vzip","","",216,[[]]],[11,"from","artichoke_backend::extn::stdlib::abbrev","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"vzip","","",217,[[]]],[11,"from","artichoke_backend::extn::stdlib::base64","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"vzip","","",218,[[]]],[11,"from","artichoke_backend::extn::stdlib::cmath","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"vzip","","",219,[[]]],[11,"from","artichoke_backend::extn::stdlib::delegate","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"vzip","","",220,[[]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"vzip","","",221,[[]]],[11,"from","artichoke_backend::extn::stdlib::forwardable","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"vzip","","",222,[[]]],[11,"from","artichoke_backend::extn::stdlib::json","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"vzip","","",223,[[]]],[11,"from","artichoke_backend::extn::stdlib::monitor","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"vzip","","",224,[[]]],[11,"from","artichoke_backend::extn::stdlib::ostruct","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"vzip","","",225,[[]]],[11,"from","artichoke_backend::extn::stdlib::securerandom::hex","",226,[[]]],[11,"into","","",226,[[]]],[11,"into_iter","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"vzip","","",226,[[]]],[11,"from","artichoke_backend::extn::stdlib::securerandom","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"to_string","","",227,[[],["string",3]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"vzip","","",227,[[]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"to_string","","",228,[[],["string",3]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"vzip","","",228,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"to_string","","",229,[[],["string",3]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"vzip","","",229,[[]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"vzip","","",230,[[]]],[11,"from","artichoke_backend::extn::stdlib::set","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"vzip","","",231,[[]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"vzip","","",232,[[]]],[11,"from","artichoke_backend::extn::stdlib::shellwords","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"vzip","","",233,[[]]],[11,"from","artichoke_backend::extn::stdlib::strscan","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"vzip","","",234,[[]]],[11,"from","artichoke_backend::extn::stdlib::uri","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"vzip","","",235,[[]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"vzip","","",236,[[]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"vzip","","",237,[[]]],[11,"from","artichoke_backend::ffi","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","artichoke_backend::fs::hybrid","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","artichoke_backend::fs::memory","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"vzip","","",238,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"vzip","","",239,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","artichoke_backend::fs::native","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","artichoke_backend::gc::arena","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","artichoke_backend::gc","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","artichoke_backend::method","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","artichoke_backend::module","",240,[[]]],[11,"into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"vzip","","",240,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","artichoke_backend::release_metadata","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","artichoke_backend::state::output","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","artichoke_backend::state::parser","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","artichoke_backend::state::regexp","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","artichoke_backend::state","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","artichoke_backend::string","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"to_string","","",99,[[],["string",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","artichoke_backend::sys","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"vzip","","",241,[[]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"vzip","","",242,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"vzip","","",243,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"from","artichoke_backend::value","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"to_string","","",152,[[],["string",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"eq","artichoke_backend::prelude","",19,[[["ruby",4]]]],[11,"eq","","",13,[[["incrementlinenoerror",4]]]],[11,"ne","","",13,[[["incrementlinenoerror",4]]]],[11,"eq","","",20,[[["rust",4]]]],[11,"partial_cmp","","",19,[[["ruby",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["rust",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",13,[[["incrementlinenoerror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["incrementlinenoerror",4]]]],[11,"le","","",13,[[["incrementlinenoerror",4]]]],[11,"gt","","",13,[[["incrementlinenoerror",4]]]],[11,"ge","","",13,[[["incrementlinenoerror",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",13,[[]]],[11,"cmp","","",20,[[["rust",4]],["ordering",4]]],[11,"cmp","","",19,[[["ruby",4]],["ordering",4]]],[11,"cmp","","",13,[[["incrementlinenoerror",4]],["ordering",4]]],[11,"clone","","",20,[[],["rust",4]]],[11,"clone","","",19,[[],["ruby",4]]],[11,"clone","","",13,[[],["incrementlinenoerror",4]]],[11,"eq","artichoke_backend::extn::core::exception","",197,[[["uncaughtthrowerror",3]]]],[11,"ne","","",197,[[["uncaughtthrowerror",3]]]],[11,"eq","","",198,[[["zerodivisionerror",3]]]],[11,"ne","","",198,[[["zerodivisionerror",3]]]],[11,"eq","","",187,[[["securityerror",3]]]],[11,"ne","","",187,[[["securityerror",3]]]],[11,"eq","","",166,[[["encodingerror",3]]]],[11,"ne","","",166,[[["encodingerror",3]]]],[11,"eq","","",171,[[["floatdomainerror",3]]]],[11,"ne","","",171,[[["floatdomainerror",3]]]],[11,"eq","","",181,[[["nomethoderror",3]]]],[11,"ne","","",181,[[["nomethoderror",3]]]],[11,"eq","","",172,[[["frozenerror",3]]]],[11,"ne","","",172,[[["frozenerror",3]]]],[11,"eq","","",182,[[["notimplementederror",3]]]],[11,"ne","","",182,[[["notimplementederror",3]]]],[11,"eq","","",186,[[["scripterror",3]]]],[11,"ne","","",186,[[["scripterror",3]]]],[11,"eq","","",179,[[["nameerror",3]]]],[11,"ne","","",179,[[["nameerror",3]]]],[11,"eq","","",170,[[["fibererror",3]]]],[11,"ne","","",170,[[["fibererror",3]]]],[11,"eq","","",168,[[["exception",3]]]],[11,"ne","","",168,[[["exception",3]]]],[11,"eq","","",185,[[["runtimeerror",3]]]],[11,"ne","","",185,[[["runtimeerror",3]]]],[11,"eq","","",195,[[["threaderror",3]]]],[11,"ne","","",195,[[["threaderror",3]]]],[11,"eq","","",173,[[["indexerror",3]]]],[11,"ne","","",173,[[["indexerror",3]]]],[11,"eq","","",178,[[["localjumperror",3]]]],[11,"ne","","",178,[[["localjumperror",3]]]],[11,"eq","","",191,[[["syntaxerror",3]]]],[11,"ne","","",191,[[["syntaxerror",3]]]],[11,"eq","","",175,[[["ioerror",3]]]],[11,"ne","","",175,[[["ioerror",3]]]],[11,"eq","","",184,[[["regexperror",3]]]],[11,"ne","","",184,[[["regexperror",3]]]],[11,"eq","","",188,[[["signalexception",3]]]],[11,"ne","","",188,[[["signalexception",3]]]],[11,"eq","","",190,[[["stopiteration",3]]]],[11,"ne","","",190,[[["stopiteration",3]]]],[11,"eq","","",165,[[["argumenterror",3]]]],[11,"ne","","",165,[[["argumenterror",3]]]],[11,"eq","","",189,[[["standarderror",3]]]],[11,"ne","","",189,[[["standarderror",3]]]],[11,"eq","","",177,[[["loaderror",3]]]],[11,"ne","","",177,[[["loaderror",3]]]],[11,"eq","","",174,[[["interrupt",3]]]],[11,"ne","","",174,[[["interrupt",3]]]],[11,"eq","","",169,[[["fatal",3]]]],[11,"ne","","",169,[[["fatal",3]]]],[11,"eq","","",176,[[["keyerror",3]]]],[11,"ne","","",176,[[["keyerror",3]]]],[11,"eq","","",193,[[["systemexit",3]]]],[11,"ne","","",193,[[["systemexit",3]]]],[11,"eq","","",192,[[["systemcallerror",3]]]],[11,"ne","","",192,[[["systemcallerror",3]]]],[11,"eq","","",196,[[["typeerror",3]]]],[11,"ne","","",196,[[["typeerror",3]]]],[11,"eq","","",167,[[["eoferror",3]]]],[11,"ne","","",167,[[["eoferror",3]]]],[11,"eq","","",180,[[["nomemoryerror",3]]]],[11,"ne","","",180,[[["nomemoryerror",3]]]],[11,"eq","","",194,[[["systemstackerror",3]]]],[11,"ne","","",194,[[["systemstackerror",3]]]],[11,"eq","","",183,[[["rangeerror",3]]]],[11,"ne","","",183,[[["rangeerror",3]]]],[11,"partial_cmp","","",185,[[["runtimeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",185,[[["runtimeerror",3]]]],[11,"le","","",185,[[["runtimeerror",3]]]],[11,"gt","","",185,[[["runtimeerror",3]]]],[11,"ge","","",185,[[["runtimeerror",3]]]],[11,"partial_cmp","","",184,[[["regexperror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",184,[[["regexperror",3]]]],[11,"le","","",184,[[["regexperror",3]]]],[11,"gt","","",184,[[["regexperror",3]]]],[11,"ge","","",184,[[["regexperror",3]]]],[11,"partial_cmp","","",188,[[["signalexception",3]],[["ordering",4],["option",4]]]],[11,"lt","","",188,[[["signalexception",3]]]],[11,"le","","",188,[[["signalexception",3]]]],[11,"gt","","",188,[[["signalexception",3]]]],[11,"ge","","",188,[[["signalexception",3]]]],[11,"partial_cmp","","",189,[[["standarderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",189,[[["standarderror",3]]]],[11,"le","","",189,[[["standarderror",3]]]],[11,"gt","","",189,[[["standarderror",3]]]],[11,"ge","","",189,[[["standarderror",3]]]],[11,"partial_cmp","","",180,[[["nomemoryerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",180,[[["nomemoryerror",3]]]],[11,"le","","",180,[[["nomemoryerror",3]]]],[11,"gt","","",180,[[["nomemoryerror",3]]]],[11,"ge","","",180,[[["nomemoryerror",3]]]],[11,"partial_cmp","","",173,[[["indexerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",173,[[["indexerror",3]]]],[11,"le","","",173,[[["indexerror",3]]]],[11,"gt","","",173,[[["indexerror",3]]]],[11,"ge","","",173,[[["indexerror",3]]]],[11,"partial_cmp","","",166,[[["encodingerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",166,[[["encodingerror",3]]]],[11,"le","","",166,[[["encodingerror",3]]]],[11,"gt","","",166,[[["encodingerror",3]]]],[11,"ge","","",166,[[["encodingerror",3]]]],[11,"partial_cmp","","",190,[[["stopiteration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",190,[[["stopiteration",3]]]],[11,"le","","",190,[[["stopiteration",3]]]],[11,"gt","","",190,[[["stopiteration",3]]]],[11,"ge","","",190,[[["stopiteration",3]]]],[11,"partial_cmp","","",175,[[["ioerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",175,[[["ioerror",3]]]],[11,"le","","",175,[[["ioerror",3]]]],[11,"gt","","",175,[[["ioerror",3]]]],[11,"ge","","",175,[[["ioerror",3]]]],[11,"partial_cmp","","",191,[[["syntaxerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",191,[[["syntaxerror",3]]]],[11,"le","","",191,[[["syntaxerror",3]]]],[11,"gt","","",191,[[["syntaxerror",3]]]],[11,"ge","","",191,[[["syntaxerror",3]]]],[11,"partial_cmp","","",178,[[["localjumperror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",178,[[["localjumperror",3]]]],[11,"le","","",178,[[["localjumperror",3]]]],[11,"gt","","",178,[[["localjumperror",3]]]],[11,"ge","","",178,[[["localjumperror",3]]]],[11,"partial_cmp","","",196,[[["typeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",196,[[["typeerror",3]]]],[11,"le","","",196,[[["typeerror",3]]]],[11,"gt","","",196,[[["typeerror",3]]]],[11,"ge","","",196,[[["typeerror",3]]]],[11,"partial_cmp","","",192,[[["systemcallerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",192,[[["systemcallerror",3]]]],[11,"le","","",192,[[["systemcallerror",3]]]],[11,"gt","","",192,[[["systemcallerror",3]]]],[11,"ge","","",192,[[["systemcallerror",3]]]],[11,"partial_cmp","","",176,[[["keyerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",176,[[["keyerror",3]]]],[11,"le","","",176,[[["keyerror",3]]]],[11,"gt","","",176,[[["keyerror",3]]]],[11,"ge","","",176,[[["keyerror",3]]]],[11,"partial_cmp","","",179,[[["nameerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",179,[[["nameerror",3]]]],[11,"le","","",179,[[["nameerror",3]]]],[11,"gt","","",179,[[["nameerror",3]]]],[11,"ge","","",179,[[["nameerror",3]]]],[11,"partial_cmp","","",195,[[["threaderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",195,[[["threaderror",3]]]],[11,"le","","",195,[[["threaderror",3]]]],[11,"gt","","",195,[[["threaderror",3]]]],[11,"ge","","",195,[[["threaderror",3]]]],[11,"partial_cmp","","",170,[[["fibererror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",170,[[["fibererror",3]]]],[11,"le","","",170,[[["fibererror",3]]]],[11,"gt","","",170,[[["fibererror",3]]]],[11,"ge","","",170,[[["fibererror",3]]]],[11,"partial_cmp","","",174,[[["interrupt",3]],[["ordering",4],["option",4]]]],[11,"lt","","",174,[[["interrupt",3]]]],[11,"le","","",174,[[["interrupt",3]]]],[11,"gt","","",174,[[["interrupt",3]]]],[11,"ge","","",174,[[["interrupt",3]]]],[11,"partial_cmp","","",183,[[["rangeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",183,[[["rangeerror",3]]]],[11,"le","","",183,[[["rangeerror",3]]]],[11,"gt","","",183,[[["rangeerror",3]]]],[11,"ge","","",183,[[["rangeerror",3]]]],[11,"partial_cmp","","",194,[[["systemstackerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",194,[[["systemstackerror",3]]]],[11,"le","","",194,[[["systemstackerror",3]]]],[11,"gt","","",194,[[["systemstackerror",3]]]],[11,"ge","","",194,[[["systemstackerror",3]]]],[11,"partial_cmp","","",197,[[["uncaughtthrowerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",197,[[["uncaughtthrowerror",3]]]],[11,"le","","",197,[[["uncaughtthrowerror",3]]]],[11,"gt","","",197,[[["uncaughtthrowerror",3]]]],[11,"ge","","",197,[[["uncaughtthrowerror",3]]]],[11,"partial_cmp","","",168,[[["exception",3]],[["ordering",4],["option",4]]]],[11,"lt","","",168,[[["exception",3]]]],[11,"le","","",168,[[["exception",3]]]],[11,"gt","","",168,[[["exception",3]]]],[11,"ge","","",168,[[["exception",3]]]],[11,"partial_cmp","","",165,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",165,[[["argumenterror",3]]]],[11,"le","","",165,[[["argumenterror",3]]]],[11,"gt","","",165,[[["argumenterror",3]]]],[11,"ge","","",165,[[["argumenterror",3]]]],[11,"partial_cmp","","",172,[[["frozenerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",172,[[["frozenerror",3]]]],[11,"le","","",172,[[["frozenerror",3]]]],[11,"gt","","",172,[[["frozenerror",3]]]],[11,"ge","","",172,[[["frozenerror",3]]]],[11,"partial_cmp","","",181,[[["nomethoderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",181,[[["nomethoderror",3]]]],[11,"le","","",181,[[["nomethoderror",3]]]],[11,"gt","","",181,[[["nomethoderror",3]]]],[11,"ge","","",181,[[["nomethoderror",3]]]],[11,"partial_cmp","","",171,[[["floatdomainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",171,[[["floatdomainerror",3]]]],[11,"le","","",171,[[["floatdomainerror",3]]]],[11,"gt","","",171,[[["floatdomainerror",3]]]],[11,"ge","","",171,[[["floatdomainerror",3]]]],[11,"partial_cmp","","",169,[[["fatal",3]],[["ordering",4],["option",4]]]],[11,"lt","","",169,[[["fatal",3]]]],[11,"le","","",169,[[["fatal",3]]]],[11,"gt","","",169,[[["fatal",3]]]],[11,"ge","","",169,[[["fatal",3]]]],[11,"partial_cmp","","",193,[[["systemexit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",193,[[["systemexit",3]]]],[11,"le","","",193,[[["systemexit",3]]]],[11,"gt","","",193,[[["systemexit",3]]]],[11,"ge","","",193,[[["systemexit",3]]]],[11,"partial_cmp","","",167,[[["eoferror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",167,[[["eoferror",3]]]],[11,"le","","",167,[[["eoferror",3]]]],[11,"gt","","",167,[[["eoferror",3]]]],[11,"ge","","",167,[[["eoferror",3]]]],[11,"partial_cmp","","",187,[[["securityerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",187,[[["securityerror",3]]]],[11,"le","","",187,[[["securityerror",3]]]],[11,"gt","","",187,[[["securityerror",3]]]],[11,"ge","","",187,[[["securityerror",3]]]],[11,"partial_cmp","","",182,[[["notimplementederror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",182,[[["notimplementederror",3]]]],[11,"le","","",182,[[["notimplementederror",3]]]],[11,"gt","","",182,[[["notimplementederror",3]]]],[11,"ge","","",182,[[["notimplementederror",3]]]],[11,"partial_cmp","","",177,[[["loaderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",177,[[["loaderror",3]]]],[11,"le","","",177,[[["loaderror",3]]]],[11,"gt","","",177,[[["loaderror",3]]]],[11,"ge","","",177,[[["loaderror",3]]]],[11,"partial_cmp","","",198,[[["zerodivisionerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",198,[[["zerodivisionerror",3]]]],[11,"le","","",198,[[["zerodivisionerror",3]]]],[11,"gt","","",198,[[["zerodivisionerror",3]]]],[11,"ge","","",198,[[["zerodivisionerror",3]]]],[11,"partial_cmp","","",186,[[["scripterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",186,[[["scripterror",3]]]],[11,"le","","",186,[[["scripterror",3]]]],[11,"gt","","",186,[[["scripterror",3]]]],[11,"ge","","",186,[[["scripterror",3]]]],[11,"fmt","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",180,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",198,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",197,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",193,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",181,[[]]],[11,"from","","",174,[[["cow",4]],["interrupt",3]]],[11,"from","","",179,[[["cow",4]],["nameerror",3]]],[11,"from","","",181,[[["string",3]],["nomethoderror",3]]],[11,"from","","",183,[[["cow",4]],["rangeerror",3]]],[11,"from","","",183,[[["string",3]],["rangeerror",3]]],[11,"from","","",172,[[["cow",4]],["frozenerror",3]]],[11,"from","","",196,[[["cow",4]],["typeerror",3]]],[11,"from","","",170,[[["global",3],["vec",3]],["fibererror",3]]],[11,"from","","",172,[[],["frozenerror",3]]],[11,"from","","",174,[[],["interrupt",3]]],[11,"from","","",191,[[["global",3],["vec",3]],["syntaxerror",3]]],[11,"from","","",173,[[["cow",4]],["indexerror",3]]],[11,"from","","",198,[[],["zerodivisionerror",3]]],[11,"from","","",198,[[],["zerodivisionerror",3]]],[11,"from","","",165,[[["cow",4]],["argumenterror",3]]],[11,"from","","",198,[[["cow",4]],["zerodivisionerror",3]]],[11,"from","","",188,[[["string",3]],["signalexception",3]]],[11,"from","","",197,[[["global",3],["vec",3]],["uncaughtthrowerror",3]]],[11,"from","","",176,[[],["keyerror",3]]],[11,"from","","",193,[[],["systemexit",3]]],[11,"from","","",167,[[],["eoferror",3]]],[11,"from","","",190,[[["string",3]],["stopiteration",3]]],[11,"from","","",190,[[["global",3],["vec",3]],["stopiteration",3]]],[11,"from","","",197,[[["cow",4]],["uncaughtthrowerror",3]]],[11,"from","","",188,[[["cow",4]],["signalexception",3]]],[11,"from","","",177,[[],["loaderror",3]]],[11,"from","","",173,[[["string",3]],["indexerror",3]]],[11,"from","","",165,[[],["argumenterror",3]]],[11,"from","","",187,[[],["securityerror",3]]],[11,"from","","",186,[[],["scripterror",3]]],[11,"from","","",176,[[["global",3],["vec",3]],["keyerror",3]]],[11,"from","","",198,[[["cow",4]],["zerodivisionerror",3]]],[11,"from","","",181,[[["cow",4]],["nomethoderror",3]]],[11,"from","","",191,[[["string",3]],["syntaxerror",3]]],[11,"from","","",183,[[],["rangeerror",3]]],[11,"from","","",171,[[["cow",4]],["floatdomainerror",3]]],[11,"from","","",171,[[["string",3]],["floatdomainerror",3]]],[11,"from","","",194,[[],["systemstackerror",3]]],[11,"from","","",166,[[["cow",4]],["encodingerror",3]]],[11,"from","","",179,[[["global",3],["vec",3]],["nameerror",3]]],[11,"from","","",172,[[["cow",4]],["frozenerror",3]]],[11,"from","","",193,[[["string",3]],["systemexit",3]]],[11,"from","","",197,[[],["uncaughtthrowerror",3]]],[11,"from","","",189,[[],["standarderror",3]]],[11,"from","","",186,[[["cow",4]],["scripterror",3]]],[11,"from","","",173,[[["cow",4]],["indexerror",3]]],[11,"from","","",171,[[["cow",4]],["floatdomainerror",3]]],[11,"from","","",184,[[],["regexperror",3]]],[11,"from","","",167,[[["string",3]],["eoferror",3]]],[11,"from","","",195,[[["global",3],["vec",3]],["threaderror",3]]],[11,"from","","",192,[[],["systemcallerror",3]]],[11,"from","","",178,[[["global",3],["vec",3]],["localjumperror",3]]],[11,"from","","",184,[[["string",3]],["regexperror",3]]],[11,"from","","",177,[[["cow",4]],["loaderror",3]]],[11,"from","","",178,[[],["localjumperror",3]]],[11,"from","","",165,[[["cow",4]],["argumenterror",3]]],[11,"from","","",171,[[],["floatdomainerror",3]]],[11,"from","","",179,[[["string",3]],["nameerror",3]]],[11,"from","","",197,[[],["uncaughtthrowerror",3]]],[11,"from","","",195,[[["string",3]],["threaderror",3]]],[11,"from","","",169,[[],["fatal",3]]],[11,"from","","",170,[[],["fibererror",3]]],[11,"from","","",174,[[],["interrupt",3]]],[11,"from","","",166,[[["cow",4]],["encodingerror",3]]],[11,"from","","",190,[[],["stopiteration",3]]],[11,"from","","",170,[[["cow",4]],["fibererror",3]]],[11,"from","","",172,[[["global",3],["vec",3]],["frozenerror",3]]],[11,"from","","",172,[[["string",3]],["frozenerror",3]]],[11,"from","","",185,[[["cow",4]],["runtimeerror",3]]],[11,"from","","",198,[[["global",3],["vec",3]],["zerodivisionerror",3]]],[11,"from","","",180,[[["cow",4]],["nomemoryerror",3]]],[11,"from","","",178,[[["string",3]],["localjumperror",3]]],[11,"from","","",165,[[["string",3]],["argumenterror",3]]],[11,"from","","",176,[[["cow",4]],["keyerror",3]]],[11,"from","","",185,[[],["runtimeerror",3]]],[11,"from","","",165,[[["global",3],["vec",3]],["argumenterror",3]]],[11,"from","","",186,[[["string",3]],["scripterror",3]]],[11,"from","","",178,[[["cow",4]],["localjumperror",3]]],[11,"from","","",183,[[["global",3],["vec",3]],["rangeerror",3]]],[11,"from","","",169,[[["string",3]],["fatal",3]]],[11,"from","","",187,[[["global",3],["vec",3]],["securityerror",3]]],[11,"from","","",166,[[["string",3]],["encodingerror",3]]],[11,"from","","",189,[[["cow",4]],["standarderror",3]]],[11,"from","","",166,[[],["encodingerror",3]]],[11,"from","","",188,[[],["signalexception",3]]],[11,"from","","",190,[[["cow",4]],["stopiteration",3]]],[11,"from","","",180,[[],["nomemoryerror",3]]],[11,"from","","",191,[[],["syntaxerror",3]]],[11,"from","","",180,[[],["nomemoryerror",3]]],[11,"from","","",195,[[],["threaderror",3]]],[11,"from","","",176,[[],["keyerror",3]]],[11,"from","","",176,[[["string",3]],["keyerror",3]]],[11,"from","","",193,[[],["systemexit",3]]],[11,"from","","",197,[[["cow",4]],["uncaughtthrowerror",3]]],[11,"from","","",196,[[],["typeerror",3]]],[11,"from","","",187,[[["cow",4]],["securityerror",3]]],[11,"from","","",178,[[["cow",4]],["localjumperror",3]]],[11,"from","","",177,[[["cow",4]],["loaderror",3]]],[11,"from","","",195,[[["cow",4]],["threaderror",3]]],[11,"from","","",171,[[],["floatdomainerror",3]]],[11,"from","","",175,[[],["ioerror",3]]],[11,"from","","",168,[[],["exception",3]]],[11,"from","","",167,[[["global",3],["vec",3]],["eoferror",3]]],[11,"from","","",166,[[["global",3],["vec",3]],["encodingerror",3]]],[11,"from","","",192,[[["global",3],["vec",3]],["systemcallerror",3]]],[11,"from","","",178,[[],["localjumperror",3]]],[11,"from","","",180,[[["cow",4]],["nomemoryerror",3]]],[11,"from","","",183,[[["cow",4]],["rangeerror",3]]],[11,"from","","",186,[[["global",3],["vec",3]],["scripterror",3]]],[11,"from","","",184,[[],["regexperror",3]]],[11,"from","","",187,[[["string",3]],["securityerror",3]]],[11,"from","","",177,[[["string",3]],["loaderror",3]]],[11,"from","","",196,[[["cow",4]],["typeerror",3]]],[11,"from","","",190,[[["cow",4]],["stopiteration",3]]],[11,"from","","",170,[[["cow",4]],["fibererror",3]]],[11,"from","","",182,[[["cow",4]],["notimplementederror",3]]],[11,"from","","",180,[[["global",3],["vec",3]],["nomemoryerror",3]]],[11,"from","","",197,[[["string",3]],["uncaughtthrowerror",3]]],[11,"from","","",166,[[],["encodingerror",3]]],[11,"from","","",181,[[["global",3],["vec",3]],["nomethoderror",3]]],[11,"from","","",168,[[],["exception",3]]],[11,"from","","",174,[[["cow",4]],["interrupt",3]]],[11,"from","","",174,[[["global",3],["vec",3]],["interrupt",3]]],[11,"from","","",191,[[],["syntaxerror",3]]],[11,"from","","",173,[[],["indexerror",3]]],[11,"from","","",182,[[["global",3],["vec",3]],["notimplementederror",3]]],[11,"from","","",168,[[["cow",4]],["exception",3]]],[11,"from","","",181,[[],["nomethoderror",3]]],[11,"from","","",198,[[["string",3]],["zerodivisionerror",3]]],[11,"from","","",187,[[],["securityerror",3]]],[11,"from","","",185,[[["string",3]],["runtimeerror",3]]],[11,"from","","",193,[[["cow",4]],["systemexit",3]]],[11,"from","","",169,[[],["fatal",3]]],[11,"from","","",179,[[],["nameerror",3]]],[11,"from","","",196,[[["global",3],["vec",3]],["typeerror",3]]],[11,"from","","",181,[[],["nomethoderror",3]]],[11,"from","","",188,[[["cow",4]],["signalexception",3]]],[11,"from","","",192,[[],["systemcallerror",3]]],[11,"from","","",182,[[],["notimplementederror",3]]],[11,"from","","",182,[[],["notimplementederror",3]]],[11,"from","","",165,[[],["argumenterror",3]]],[11,"from","","",177,[[["global",3],["vec",3]],["loaderror",3]]],[11,"from","","",192,[[["string",3]],["systemcallerror",3]]],[11,"from","","",170,[[],["fibererror",3]]],[11,"from","","",175,[[["global",3],["vec",3]],["ioerror",3]]],[11,"from","","",192,[[["cow",4]],["systemcallerror",3]]],[11,"from","","",194,[[["cow",4]],["systemstackerror",3]]],[11,"from","","",177,[[],["loaderror",3]]],[11,"from","","",181,[[["cow",4]],["nomethoderror",3]]],[11,"from","","",173,[[],["indexerror",3]]],[11,"from","","",191,[[["cow",4]],["syntaxerror",3]]],[11,"from","","",187,[[["cow",4]],["securityerror",3]]],[11,"from","","",195,[[["cow",4]],["threaderror",3]]],[11,"from","","",183,[[],["rangeerror",3]]],[11,"from","","",189,[[["string",3]],["standarderror",3]]],[11,"from","","",172,[[],["frozenerror",3]]],[11,"from","","",169,[[["cow",4]],["fatal",3]]],[11,"from","","",185,[[["global",3],["vec",3]],["runtimeerror",3]]],[11,"from","","",169,[[["cow",4]],["fatal",3]]],[11,"from","","",179,[[],["nameerror",3]]],[11,"from","","",190,[[],["stopiteration",3]]],[11,"from","","",167,[[["cow",4]],["eoferror",3]]],[11,"from","","",171,[[["global",3],["vec",3]],["floatdomainerror",3]]],[11,"from","","",188,[[],["signalexception",3]]],[11,"from","","",184,[[["cow",4]],["regexperror",3]]],[11,"from","","",192,[[["cow",4]],["systemcallerror",3]]],[11,"from","","",196,[[],["typeerror",3]]],[11,"from","","",167,[[],["eoferror",3]]],[11,"from","","",182,[[["cow",4]],["notimplementederror",3]]],[11,"from","","",196,[[["string",3]],["typeerror",3]]],[11,"from","","",167,[[["cow",4]],["eoferror",3]]],[11,"from","","",193,[[["global",3],["vec",3]],["systemexit",3]]],[11,"from","","",168,[[["global",3],["vec",3]],["exception",3]]],[11,"from","","",169,[[["global",3],["vec",3]],["fatal",3]]],[11,"from","","",170,[[["string",3]],["fibererror",3]]],[11,"from","","",193,[[["cow",4]],["systemexit",3]]],[11,"from","","",191,[[["cow",4]],["syntaxerror",3]]],[11,"from","","",189,[[["cow",4]],["standarderror",3]]],[11,"from","","",195,[[],["threaderror",3]]],[11,"from","","",194,[[["string",3]],["systemstackerror",3]]],[11,"from","","",174,[[["string",3]],["interrupt",3]]],[11,"from","","",184,[[["cow",4]],["regexperror",3]]],[11,"from","","",185,[[],["runtimeerror",3]]],[11,"from","","",168,[[["cow",4]],["exception",3]]],[11,"from","","",173,[[["global",3],["vec",3]],["indexerror",3]]],[11,"from","","",194,[[["cow",4]],["systemstackerror",3]]],[11,"from","","",175,[[["string",3]],["ioerror",3]]],[11,"from","","",175,[[["cow",4]],["ioerror",3]]],[11,"from","","",175,[[],["ioerror",3]]],[11,"from","","",186,[[["cow",4]],["scripterror",3]]],[11,"from","","",188,[[["global",3],["vec",3]],["signalexception",3]]],[11,"from","","",175,[[["cow",4]],["ioerror",3]]],[11,"from","","",182,[[["string",3]],["notimplementederror",3]]],[11,"from","","",180,[[["string",3]],["nomemoryerror",3]]],[11,"from","","",194,[[["global",3],["vec",3]],["systemstackerror",3]]],[11,"from","","",189,[[],["standarderror",3]]],[11,"from","","",194,[[],["systemstackerror",3]]],[11,"from","","",185,[[["cow",4]],["runtimeerror",3]]],[11,"from","","",186,[[],["scripterror",3]]],[11,"from","","",168,[[["string",3]],["exception",3]]],[11,"from","","",189,[[["global",3],["vec",3]],["standarderror",3]]],[11,"from","","",184,[[["global",3],["vec",3]],["regexperror",3]]],[11,"from","","",179,[[["cow",4]],["nameerror",3]]],[11,"from","","",176,[[["cow",4]],["keyerror",3]]],[11,"message","","",181,[[],["cow",4]]],[11,"name","","",181,[[],["cow",4]]],[11,"message","","",196,[[],["cow",4]]],[11,"name","","",196,[[],["cow",4]]],[11,"message","","",182,[[],["cow",4]]],[11,"name","","",182,[[],["cow",4]]],[11,"message","","",194,[[],["cow",4]]],[11,"name","","",194,[[],["cow",4]]],[11,"message","","",188,[[],["cow",4]]],[11,"name","","",188,[[],["cow",4]]],[11,"message","","",191,[[],["cow",4]]],[11,"name","","",191,[[],["cow",4]]],[11,"message","","",193,[[],["cow",4]]],[11,"name","","",193,[[],["cow",4]]],[11,"message","","",168,[[],["cow",4]]],[11,"name","","",168,[[],["cow",4]]],[11,"message","","",190,[[],["cow",4]]],[11,"name","","",190,[[],["cow",4]]],[11,"message","","",185,[[],["cow",4]]],[11,"name","","",185,[[],["cow",4]]],[11,"message","","",198,[[],["cow",4]]],[11,"name","","",198,[[],["cow",4]]],[11,"message","","",167,[[],["cow",4]]],[11,"name","","",167,[[],["cow",4]]],[11,"message","","",170,[[],["cow",4]]],[11,"name","","",170,[[],["cow",4]]],[11,"message","","",176,[[],["cow",4]]],[11,"name","","",176,[[],["cow",4]]],[11,"message","","",172,[[],["cow",4]]],[11,"name","","",172,[[],["cow",4]]],[11,"message","","",165,[[],["cow",4]]],[11,"name","","",165,[[],["cow",4]]],[11,"message","","",166,[[],["cow",4]]],[11,"name","","",166,[[],["cow",4]]],[11,"message","","",184,[[],["cow",4]]],[11,"name","","",184,[[],["cow",4]]],[11,"message","","",192,[[],["cow",4]]],[11,"name","","",192,[[],["cow",4]]],[11,"message","","",180,[[],["cow",4]]],[11,"name","","",180,[[],["cow",4]]],[11,"message","","",177,[[],["cow",4]]],[11,"name","","",177,[[],["cow",4]]],[11,"message","","",186,[[],["cow",4]]],[11,"name","","",186,[[],["cow",4]]],[11,"message","","",183,[[],["cow",4]]],[11,"name","","",183,[[],["cow",4]]],[11,"message","","",174,[[],["cow",4]]],[11,"name","","",174,[[],["cow",4]]],[11,"message","","",175,[[],["cow",4]]],[11,"name","","",175,[[],["cow",4]]],[11,"message","","",187,[[],["cow",4]]],[11,"name","","",187,[[],["cow",4]]],[11,"message","","",197,[[],["cow",4]]],[11,"name","","",197,[[],["cow",4]]],[11,"message","","",171,[[],["cow",4]]],[11,"name","","",171,[[],["cow",4]]],[11,"message","","",195,[[],["cow",4]]],[11,"name","","",195,[[],["cow",4]]],[11,"message","","",173,[[],["cow",4]]],[11,"name","","",173,[[],["cow",4]]],[11,"message","","",178,[[],["cow",4]]],[11,"name","","",178,[[],["cow",4]]],[11,"message","","",189,[[],["cow",4]]],[11,"name","","",189,[[],["cow",4]]],[11,"message","","",179,[[],["cow",4]]],[11,"name","","",179,[[],["cow",4]]],[11,"message","","",169,[[],["cow",4]]],[11,"name","","",169,[[],["cow",4]]],[11,"default","","",189,[[],["standarderror",3]]],[11,"default","","",197,[[],["uncaughtthrowerror",3]]],[11,"default","","",192,[[],["systemcallerror",3]]],[11,"default","","",190,[[],["stopiteration",3]]],[11,"default","","",171,[[],["floatdomainerror",3]]],[11,"default","","",187,[[],["securityerror",3]]],[11,"default","","",173,[[],["indexerror",3]]],[11,"default","","",174,[[],["interrupt",3]]],[11,"default","","",166,[[],["encodingerror",3]]],[11,"default","","",188,[[],["signalexception",3]]],[11,"default","","",179,[[],["nameerror",3]]],[11,"default","","",168,[[],["exception",3]]],[11,"default","","",198,[[],["zerodivisionerror",3]]],[11,"default","","",175,[[],["ioerror",3]]],[11,"default","","",165,[[],["argumenterror",3]]],[11,"default","","",196,[[],["typeerror",3]]],[11,"default","","",169,[[],["fatal",3]]],[11,"default","","",182,[[],["notimplementederror",3]]],[11,"default","","",180,[[],["nomemoryerror",3]]],[11,"default","","",191,[[],["syntaxerror",3]]],[11,"default","","",172,[[],["frozenerror",3]]],[11,"default","","",183,[[],["rangeerror",3]]],[11,"default","","",186,[[],["scripterror",3]]],[11,"default","","",167,[[],["eoferror",3]]],[11,"default","","",194,[[],["systemstackerror",3]]],[11,"default","","",176,[[],["keyerror",3]]],[11,"default","","",178,[[],["localjumperror",3]]],[11,"default","","",184,[[],["regexperror",3]]],[11,"default","","",185,[[],["runtimeerror",3]]],[11,"default","","",195,[[],["threaderror",3]]],[11,"default","","",193,[[],["systemexit",3]]],[11,"default","","",177,[[],["loaderror",3]]],[11,"default","","",181,[[],["nomethoderror",3]]],[11,"default","","",170,[[],["fibererror",3]]],[11,"cmp","","",181,[[["nomethoderror",3]],["ordering",4]]],[11,"cmp","","",178,[[["localjumperror",3]],["ordering",4]]],[11,"cmp","","",185,[[["runtimeerror",3]],["ordering",4]]],[11,"cmp","","",192,[[["systemcallerror",3]],["ordering",4]]],[11,"cmp","","",166,[[["encodingerror",3]],["ordering",4]]],[11,"cmp","","",165,[[["argumenterror",3]],["ordering",4]]],[11,"cmp","","",194,[[["systemstackerror",3]],["ordering",4]]],[11,"cmp","","",179,[[["nameerror",3]],["ordering",4]]],[11,"cmp","","",171,[[["floatdomainerror",3]],["ordering",4]]],[11,"cmp","","",168,[[["exception",3]],["ordering",4]]],[11,"cmp","","",174,[[["interrupt",3]],["ordering",4]]],[11,"cmp","","",196,[[["typeerror",3]],["ordering",4]]],[11,"cmp","","",187,[[["securityerror",3]],["ordering",4]]],[11,"cmp","","",180,[[["nomemoryerror",3]],["ordering",4]]],[11,"cmp","","",175,[[["ioerror",3]],["ordering",4]]],[11,"cmp","","",191,[[["syntaxerror",3]],["ordering",4]]],[11,"cmp","","",190,[[["stopiteration",3]],["ordering",4]]],[11,"cmp","","",173,[[["indexerror",3]],["ordering",4]]],[11,"cmp","","",167,[[["eoferror",3]],["ordering",4]]],[11,"cmp","","",182,[[["notimplementederror",3]],["ordering",4]]],[11,"cmp","","",169,[[["fatal",3]],["ordering",4]]],[11,"cmp","","",177,[[["loaderror",3]],["ordering",4]]],[11,"cmp","","",186,[[["scripterror",3]],["ordering",4]]],[11,"cmp","","",198,[[["zerodivisionerror",3]],["ordering",4]]],[11,"cmp","","",170,[[["fibererror",3]],["ordering",4]]],[11,"cmp","","",172,[[["frozenerror",3]],["ordering",4]]],[11,"cmp","","",188,[[["signalexception",3]],["ordering",4]]],[11,"cmp","","",176,[[["keyerror",3]],["ordering",4]]],[11,"cmp","","",195,[[["threaderror",3]],["ordering",4]]],[11,"cmp","","",197,[[["uncaughtthrowerror",3]],["ordering",4]]],[11,"cmp","","",189,[[["standarderror",3]],["ordering",4]]],[11,"cmp","","",193,[[["systemexit",3]],["ordering",4]]],[11,"cmp","","",183,[[["rangeerror",3]],["ordering",4]]],[11,"cmp","","",184,[[["regexperror",3]],["ordering",4]]],[11,"clone","","",172,[[],["frozenerror",3]]],[11,"clone","","",187,[[],["securityerror",3]]],[11,"clone","","",174,[[],["interrupt",3]]],[11,"clone","","",183,[[],["rangeerror",3]]],[11,"clone","","",165,[[],["argumenterror",3]]],[11,"clone","","",170,[[],["fibererror",3]]],[11,"clone","","",194,[[],["systemstackerror",3]]],[11,"clone","","",190,[[],["stopiteration",3]]],[11,"clone","","",167,[[],["eoferror",3]]],[11,"clone","","",181,[[],["nomethoderror",3]]],[11,"clone","","",197,[[],["uncaughtthrowerror",3]]],[11,"clone","","",195,[[],["threaderror",3]]],[11,"clone","","",189,[[],["standarderror",3]]],[11,"clone","","",178,[[],["localjumperror",3]]],[11,"clone","","",175,[[],["ioerror",3]]],[11,"clone","","",193,[[],["systemexit",3]]],[11,"clone","","",196,[[],["typeerror",3]]],[11,"clone","","",192,[[],["systemcallerror",3]]],[11,"clone","","",180,[[],["nomemoryerror",3]]],[11,"clone","","",191,[[],["syntaxerror",3]]],[11,"clone","","",176,[[],["keyerror",3]]],[11,"clone","","",168,[[],["exception",3]]],[11,"clone","","",171,[[],["floatdomainerror",3]]],[11,"clone","","",188,[[],["signalexception",3]]],[11,"clone","","",169,[[],["fatal",3]]],[11,"clone","","",173,[[],["indexerror",3]]],[11,"clone","","",177,[[],["loaderror",3]]],[11,"clone","","",186,[[],["scripterror",3]]],[11,"clone","","",198,[[],["zerodivisionerror",3]]],[11,"clone","","",182,[[],["notimplementederror",3]]],[11,"clone","","",166,[[],["encodingerror",3]]],[11,"clone","","",185,[[],["runtimeerror",3]]],[11,"clone","","",184,[[],["regexperror",3]]],[11,"clone","","",179,[[],["nameerror",3]]],[11,"eq","artichoke_backend::extn::core::math","",203,[[["math",3]]]],[11,"ne","","",203,[[["math",3]]]],[11,"eq","","",202,[[["domainerror",3]]]],[11,"ne","","",202,[[["domainerror",3]]]],[11,"partial_cmp","","",203,[[["math",3]],[["ordering",4],["option",4]]]],[11,"lt","","",203,[[["math",3]]]],[11,"le","","",203,[[["math",3]]]],[11,"gt","","",203,[[["math",3]]]],[11,"ge","","",203,[[["math",3]]]],[11,"partial_cmp","","",202,[[["domainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",202,[[["domainerror",3]]]],[11,"le","","",202,[[["domainerror",3]]]],[11,"gt","","",202,[[["domainerror",3]]]],[11,"ge","","",202,[[["domainerror",3]]]],[11,"fmt","","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",203,[[]]],[11,"hash","","",202,[[]]],[11,"from","","",202,[[],["domainerror",3]]],[11,"default","","",203,[[],["math",3]]],[11,"default","","",202,[[],["domainerror",3]]],[11,"cmp","","",203,[[["math",3]],["ordering",4]]],[11,"cmp","","",202,[[["domainerror",3]],["ordering",4]]],[11,"clone","","",202,[[],["domainerror",3]]],[11,"clone","","",203,[[],["math",3]]],[11,"eq","artichoke_backend::extn::core::random","",55,[[["max",4]]]],[11,"ne","","",55,[[["max",4]]]],[11,"eq","","",56,[[["rand",4]]]],[11,"ne","","",56,[[["rand",4]]]],[11,"partial_cmp","","",56,[[["rand",4]],[["ordering",4],["option",4]]]],[11,"lt","","",56,[[["rand",4]]]],[11,"le","","",56,[[["rand",4]]]],[11,"gt","","",56,[[["rand",4]]]],[11,"ge","","",56,[[["rand",4]]]],[11,"partial_cmp","","",55,[[["max",4]],[["ordering",4],["option",4]]]],[11,"lt","","",55,[[["max",4]]]],[11,"le","","",55,[[["max",4]]]],[11,"gt","","",55,[[["max",4]]]],[11,"ge","","",55,[[["max",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",56,[[],["rand",4]]],[11,"clone","","",55,[[],["max",4]]],[11,"eq","artichoke_backend::extn::core::symbol","",212,[[["symbol",3]]]],[11,"ne","","",212,[[["symbol",3]]]],[11,"eq","","",212,[[]]],[11,"eq","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"try_from","","",212,[[["nonzerousize",3]],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[["nonzerou64",3]],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[["nonzerousize",3]],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"try_from","","",212,[[["nonzerou64",3]],[["result",4],["symboloverflowerror",3],["symbol",3]]]],[11,"cmp","","",212,[[["symbol",3]],["ordering",4]]],[11,"fmt","","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",212,[[["symbol",3]],[["ordering",4],["option",4]]]],[11,"lt","","",212,[[["symbol",3]]]],[11,"le","","",212,[[["symbol",3]]]],[11,"gt","","",212,[[["symbol",3]]]],[11,"ge","","",212,[[["symbol",3]]]],[11,"hash","","",212,[[]]],[11,"from","","",212,[[],["symbol",3]]],[11,"from","","",212,[[],["symbol",3]]],[11,"from","","",212,[[["nonzerou16",3]],["symbol",3]]],[11,"from","","",212,[[["nonzerou8",3]],["symbol",3]]],[11,"from","","",212,[[["nonzerou8",3]],["symbol",3]]],[11,"from","","",212,[[],["symbol",3]]],[11,"from","","",212,[[],["symbol",3]]],[11,"from","","",212,[[],["symbol",3]]],[11,"from","","",212,[[],["symbol",3]]],[11,"from","","",212,[[["nonzerou16",3]],["symbol",3]]],[11,"from","","",212,[[["nonzerou32",3]],["symbol",3]]],[11,"from","","",212,[[["nonzerou32",3]],["symbol",3]]],[11,"clone","","",212,[[],["symbol",3]]],[11,"eq","artichoke_backend::extn::core::time","",215,[[["time",3]]]],[11,"try_from","","",215,[[["toa",3]],[["time",3],["componentoutofrangeerror",4],["result",4]]]],[11,"cmp","","",215,[[["time",3]],["ordering",4]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[["duration",3]],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[],["time",3]]],[11,"add","","",215,[[["duration",3]],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[["time",3]],["time",3]]],[11,"sub","","",215,[[["duration",3]],["time",3]]],[11,"sub","","",215,[[["duration",3]],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"sub","","",215,[[],["time",3]]],[11,"partial_cmp","","",215,[[["time",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",215,[[["utc",3],["datetime",3]],["time",3]]],[11,"from","","",215,[[["tz",4],["datetime",3]],["time",3]]],[11,"from","","",215,[[["datetime",3],["local",3]],["time",3]]],[11,"from","","",215,[[["datetime",3],["fixedoffset",3]],["time",3]]],[11,"hash","","",215,[[]]],[11,"default","","The zero-argument `Time#new` constructor creates a local…",215,[[],["time",3]]],[11,"clone","","",215,[[],["time",3]]],[11,"eq","artichoke_backend::extn::stdlib::securerandom","",70,[[["error",4]]]],[11,"ne","","",70,[[["error",4]]]],[11,"eq","","",230,[[["securerandom",3]]]],[11,"ne","","",230,[[["securerandom",3]]]],[11,"eq","","",227,[[["argumenterror",3]]]],[11,"ne","","",227,[[["argumenterror",3]]]],[11,"eq","","",71,[[["max",4]]]],[11,"ne","","",71,[[["max",4]]]],[11,"eq","","",72,[[["rand",4]]]],[11,"ne","","",72,[[["rand",4]]]],[11,"eq","","",228,[[["domainerror",3]]]],[11,"ne","","",228,[[["domainerror",3]]]],[11,"eq","","",229,[[["randombyteserror",3]]]],[11,"ne","","",229,[[["randombyteserror",3]]]],[11,"partial_cmp","","",230,[[["securerandom",3]],[["ordering",4],["option",4]]]],[11,"lt","","",230,[[["securerandom",3]]]],[11,"le","","",230,[[["securerandom",3]]]],[11,"gt","","",230,[[["securerandom",3]]]],[11,"ge","","",230,[[["securerandom",3]]]],[11,"partial_cmp","","",228,[[["domainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",228,[[["domainerror",3]]]],[11,"le","","",228,[[["domainerror",3]]]],[11,"gt","","",228,[[["domainerror",3]]]],[11,"ge","","",228,[[["domainerror",3]]]],[11,"partial_cmp","","",70,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",70,[[["error",4]]]],[11,"le","","",70,[[["error",4]]]],[11,"gt","","",70,[[["error",4]]]],[11,"ge","","",70,[[["error",4]]]],[11,"partial_cmp","","",229,[[["randombyteserror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",229,[[["randombyteserror",3]]]],[11,"le","","",229,[[["randombyteserror",3]]]],[11,"gt","","",229,[[["randombyteserror",3]]]],[11,"ge","","",229,[[["randombyteserror",3]]]],[11,"partial_cmp","","",71,[[["max",4]],[["ordering",4],["option",4]]]],[11,"lt","","",71,[[["max",4]]]],[11,"le","","",71,[[["max",4]]]],[11,"gt","","",71,[[["max",4]]]],[11,"ge","","",71,[[["max",4]]]],[11,"partial_cmp","","",72,[[["rand",4]],[["ordering",4],["option",4]]]],[11,"lt","","",72,[[["rand",4]]]],[11,"le","","",72,[[["rand",4]]]],[11,"gt","","",72,[[["rand",4]]]],[11,"ge","","",72,[[["rand",4]]]],[11,"partial_cmp","","",227,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",227,[[["argumenterror",3]]]],[11,"le","","",227,[[["argumenterror",3]]]],[11,"gt","","",227,[[["argumenterror",3]]]],[11,"ge","","",227,[[["argumenterror",3]]]],[11,"fmt","","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"source","","",70,[[],[["option",4],["error",8]]]],[11,"hash","","",228,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",230,[[]]],[11,"from","","",70,[[["argumenterror",3]],["error",4]]],[11,"from","","",227,[[],["argumenterror",3]]],[11,"from","","",70,[[["randombyteserror",3]],["error",4]]],[11,"default","","",227,[[],["argumenterror",3]]],[11,"default","","",230,[[],["securerandom",3]]],[11,"cmp","","",228,[[["domainerror",3]],["ordering",4]]],[11,"cmp","","",230,[[["securerandom",3]],["ordering",4]]],[11,"cmp","","",227,[[["argumenterror",3]],["ordering",4]]],[11,"cmp","","",229,[[["randombyteserror",3]],["ordering",4]]],[11,"cmp","","",70,[[["error",4]],["ordering",4]]],[11,"clone","","",71,[[],["max",4]]],[11,"clone","","",230,[[],["securerandom",3]]],[11,"clone","","",228,[[],["domainerror",3]]],[11,"clone","","",229,[[],["randombyteserror",3]]],[11,"clone","","",70,[[],["error",4]]],[11,"clone","","",227,[[],["argumenterror",3]]],[11,"clone","","",72,[[],["rand",4]]],[11,"clone","artichoke_backend::extn::stdlib::securerandom::hex","",226,[[],["hex",3]]],[11,"next","","",226,[[],["option",4]]],[11,"count","","",226,[[]]],[11,"size_hint","","",226,[[]]],[11,"last","","",226,[[],["option",4]]],[11,"fmt","","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",226,[[],["hex",3]]],[11,"from","","",226,[[],["hex",3]]],[11,"def_class","artichoke_backend::prelude","Create a class definition bound to a Rust type `T`.",153,[[["spec",3]],[["error",3],["result",4]]]],[11,"class_spec","","Retrieve a class definition from the state bound to Rust…",153,[[],[["error",3],["result",4],["option",4]]]],[11,"class_of","","",153,[[],[["option",4],["error",3],["result",4]]]],[11,"new_instance","","",153,[[],[["option",4],["error",3],["result",4]]]],[11,"unbox_from_value","artichoke_backend::extn::core::symbol","",212,[[["artichoke",3],["value",3]],[["error",3],["result",4],["unboxedvalueguard",3]]]],[11,"alloc_value","","",212,[[["artichoke",3]],[["result",4],["error",3],["value",3]]]],[11,"box_into_value","","",212,[[["value",3],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[11,"free","","",212,[[]]],[11,"message","artichoke_backend::block","",23,[[],["cow",4]]],[11,"name","","",23,[[],["cow",4]]],[11,"vm_backtrace","","",23,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",23,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::convert","",31,[[],["cow",4]]],[11,"name","","",31,[[],["cow",4]]],[11,"vm_backtrace","","",31,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",31,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",32,[[],["cow",4]]],[11,"name","","",32,[[],["cow",4]]],[11,"vm_backtrace","","",32,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",32,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::def","",34,[[],["cow",4]]],[11,"name","","",34,[[],["cow",4]]],[11,"vm_backtrace","","",34,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",34,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",35,[[],["cow",4]]],[11,"name","","",35,[[],["cow",4]]],[11,"vm_backtrace","","",35,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",35,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::error","",158,[[],["cow",4]]],[11,"name","","Class name of the `Exception`.",158,[[],["cow",4]]],[11,"vm_backtrace","","",158,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",158,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::exception_handler","",38,[[],["cow",4]]],[11,"name","","",38,[[],["cow",4]]],[11,"vm_backtrace","","",38,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",38,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::extn::core::exception","",168,[[],["cow",4]]],[11,"name","","",168,[[],["cow",4]]],[11,"vm_backtrace","","",168,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",168,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",180,[[],["cow",4]]],[11,"name","","",180,[[],["cow",4]]],[11,"vm_backtrace","","",180,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",180,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",186,[[],["cow",4]]],[11,"name","","",186,[[],["cow",4]]],[11,"vm_backtrace","","",186,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",186,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",177,[[],["cow",4]]],[11,"name","","",177,[[],["cow",4]]],[11,"vm_backtrace","","",177,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",177,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",182,[[],["cow",4]]],[11,"name","","",182,[[],["cow",4]]],[11,"vm_backtrace","","",182,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",182,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",191,[[],["cow",4]]],[11,"name","","",191,[[],["cow",4]]],[11,"vm_backtrace","","",191,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",191,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",187,[[],["cow",4]]],[11,"name","","",187,[[],["cow",4]]],[11,"vm_backtrace","","",187,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",187,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",188,[[],["cow",4]]],[11,"name","","",188,[[],["cow",4]]],[11,"vm_backtrace","","",188,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",188,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",174,[[],["cow",4]]],[11,"name","","",174,[[],["cow",4]]],[11,"vm_backtrace","","",174,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",174,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",189,[[],["cow",4]]],[11,"name","","",189,[[],["cow",4]]],[11,"vm_backtrace","","",189,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",189,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",165,[[],["cow",4]]],[11,"name","","",165,[[],["cow",4]]],[11,"vm_backtrace","","",165,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",165,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",197,[[],["cow",4]]],[11,"name","","",197,[[],["cow",4]]],[11,"vm_backtrace","","",197,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",197,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",166,[[],["cow",4]]],[11,"name","","",166,[[],["cow",4]]],[11,"vm_backtrace","","",166,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",166,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",170,[[],["cow",4]]],[11,"name","","",170,[[],["cow",4]]],[11,"vm_backtrace","","",170,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",170,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",175,[[],["cow",4]]],[11,"name","","",175,[[],["cow",4]]],[11,"vm_backtrace","","",175,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",175,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",167,[[],["cow",4]]],[11,"name","","",167,[[],["cow",4]]],[11,"vm_backtrace","","",167,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",167,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",173,[[],["cow",4]]],[11,"name","","",173,[[],["cow",4]]],[11,"vm_backtrace","","",173,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",173,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",176,[[],["cow",4]]],[11,"name","","",176,[[],["cow",4]]],[11,"vm_backtrace","","",176,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",176,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",190,[[],["cow",4]]],[11,"name","","",190,[[],["cow",4]]],[11,"vm_backtrace","","",190,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",190,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",178,[[],["cow",4]]],[11,"name","","",178,[[],["cow",4]]],[11,"vm_backtrace","","",178,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",178,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",179,[[],["cow",4]]],[11,"name","","",179,[[],["cow",4]]],[11,"vm_backtrace","","",179,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",179,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",181,[[],["cow",4]]],[11,"name","","",181,[[],["cow",4]]],[11,"vm_backtrace","","",181,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",181,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",183,[[],["cow",4]]],[11,"name","","",183,[[],["cow",4]]],[11,"vm_backtrace","","",183,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",183,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",171,[[],["cow",4]]],[11,"name","","",171,[[],["cow",4]]],[11,"vm_backtrace","","",171,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",171,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",184,[[],["cow",4]]],[11,"name","","",184,[[],["cow",4]]],[11,"vm_backtrace","","",184,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",184,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",185,[[],["cow",4]]],[11,"name","","",185,[[],["cow",4]]],[11,"vm_backtrace","","",185,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",185,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",172,[[],["cow",4]]],[11,"name","","",172,[[],["cow",4]]],[11,"vm_backtrace","","",172,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",172,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",192,[[],["cow",4]]],[11,"name","","",192,[[],["cow",4]]],[11,"vm_backtrace","","",192,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",192,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",195,[[],["cow",4]]],[11,"name","","",195,[[],["cow",4]]],[11,"vm_backtrace","","",195,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",195,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",196,[[],["cow",4]]],[11,"name","","",196,[[],["cow",4]]],[11,"vm_backtrace","","",196,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",196,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",198,[[],["cow",4]]],[11,"name","","",198,[[],["cow",4]]],[11,"vm_backtrace","","",198,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",198,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",193,[[],["cow",4]]],[11,"name","","",193,[[],["cow",4]]],[11,"vm_backtrace","","",193,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",193,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",194,[[],["cow",4]]],[11,"name","","",194,[[],["cow",4]]],[11,"vm_backtrace","","",194,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",194,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",169,[[],["cow",4]]],[11,"name","","",169,[[],["cow",4]]],[11,"vm_backtrace","","",169,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",169,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::extn::core::math","",202,[[],["cow",4]]],[11,"name","","",202,[[],["cow",4]]],[11,"vm_backtrace","","",202,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",202,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::ffi","",73,[[],["cow",4]]],[11,"name","","",73,[[],["cow",4]]],[11,"vm_backtrace","","",73,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",73,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","","",74,[[],["cow",4]]],[11,"name","","",74,[[],["cow",4]]],[11,"vm_backtrace","","",74,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",74,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::gc::arena","",80,[[],["cow",4]]],[11,"name","","",80,[[],["cow",4]]],[11,"vm_backtrace","","",80,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",80,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::prelude","",13,[[],["cow",4]]],[11,"name","","",13,[[],["cow",4]]],[11,"vm_backtrace","","",13,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",13,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::string","",99,[[],["cow",4]]],[11,"name","","",99,[[],["cow",4]]],[11,"vm_backtrace","","",99,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",99,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"message","artichoke_backend::value","",152,[[],["cow",4]]],[11,"name","","",152,[[],["cow",4]]],[11,"vm_backtrace","","",152,[[["artichoke",3]],[["vec",3],["option",4]]]],[11,"as_mrb_value","","",152,[[["artichoke",3]],[["option",4],["mrb_value",3]]]],[11,"box_clone","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[],[["regexptype",8],["box",3]]]],[11,"captures","","",59,[[],[["result",4],["error",3],["option",4]]]],[11,"capture_indexes_for_name","","",59,[[],[["option",4],["error",3],["result",4]]]],[11,"captures_len","","",59,[[["option",4]],[["error",3],["result",4]]]],[11,"capture0","","",59,[[],[["result",4],["option",4],["error",3]]]],[11,"debug","","",59,[[],["string",3]]],[11,"literal_config","","",59,[[],["config",3]]],[11,"derived_config","","",59,[[],["config",3]]],[11,"encoding","","",59,[[],["encoding",4]]],[11,"inspect","","",59,[[],["vec",3]]],[11,"string","","",59,[[]]],[11,"case_match","","",59,[[["artichoke",3]],[["error",3],["result",4]]]],[11,"is_match","","",59,[[["int",6],["option",4]],[["error",3],["result",4]]]],[11,"match_","","",59,[[["int",6],["option",4],["block",3],["option",4],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[11,"match_operator","","",59,[[["artichoke",3]],[["result",4],["error",3],["option",4]]]],[11,"named_captures","","",59,[[],[["nametocapturelocations",6],["error",3],["result",4]]]],[11,"named_captures_for_haystack","","",59,[[],[["error",3],["result",4],["option",4]]]],[11,"names","","",59,[[],[["vec",3],["vec",3]]]],[11,"pos","","",59,[[],[["error",3],["result",4],["option",4]]]],[11,"scan","","",59,[[["block",3],["option",4],["artichoke",3]],[["error",3],["result",4],["scan",4]]]],[11,"box_clone","artichoke_backend::extn::core::regexp::backend::onig","",60,[[],[["regexptype",8],["box",3]]]],[11,"captures","","",60,[[],[["result",4],["error",3],["option",4]]]],[11,"capture_indexes_for_name","","",60,[[],[["option",4],["error",3],["result",4]]]],[11,"captures_len","","",60,[[["option",4]],[["error",3],["result",4]]]],[11,"capture0","","",60,[[],[["result",4],["option",4],["error",3]]]],[11,"debug","","",60,[[],["string",3]]],[11,"literal_config","","",60,[[],["config",3]]],[11,"derived_config","","",60,[[],["config",3]]],[11,"encoding","","",60,[[],["encoding",4]]],[11,"inspect","","",60,[[],["vec",3]]],[11,"string","","",60,[[]]],[11,"case_match","","",60,[[["artichoke",3]],[["error",3],["result",4]]]],[11,"is_match","","",60,[[["int",6],["option",4]],[["error",3],["result",4]]]],[11,"match_","","",60,[[["int",6],["option",4],["block",3],["option",4],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[11,"match_operator","","",60,[[["artichoke",3]],[["result",4],["error",3],["option",4]]]],[11,"named_captures","","",60,[[],[["nametocapturelocations",6],["error",3],["result",4]]]],[11,"named_captures_for_haystack","","",60,[[],[["error",3],["result",4],["option",4]]]],[11,"names","","",60,[[],[["vec",3],["vec",3]]]],[11,"pos","","",60,[[],[["error",3],["result",4],["option",4]]]],[11,"scan","","",60,[[["block",3],["option",4],["artichoke",3]],[["error",3],["result",4],["scan",4]]]],[11,"box_clone","artichoke_backend::extn::core::regexp::backend::regex::utf8","",61,[[],[["regexptype",8],["box",3]]]],[11,"captures","","",61,[[],[["result",4],["error",3],["option",4]]]],[11,"capture_indexes_for_name","","",61,[[],[["option",4],["error",3],["result",4]]]],[11,"captures_len","","",61,[[["option",4]],[["error",3],["result",4]]]],[11,"capture0","","",61,[[],[["result",4],["option",4],["error",3]]]],[11,"debug","","",61,[[],["string",3]]],[11,"literal_config","","",61,[[],["config",3]]],[11,"derived_config","","",61,[[],["config",3]]],[11,"encoding","","",61,[[],["encoding",4]]],[11,"inspect","","",61,[[],["vec",3]]],[11,"string","","",61,[[]]],[11,"case_match","","",61,[[["artichoke",3]],[["error",3],["result",4]]]],[11,"is_match","","",61,[[["int",6],["option",4]],[["error",3],["result",4]]]],[11,"match_","","",61,[[["int",6],["option",4],["block",3],["option",4],["artichoke",3]],[["result",4],["error",3],["value",3]]]],[11,"match_operator","","",61,[[["artichoke",3]],[["result",4],["error",3],["option",4]]]],[11,"named_captures","","",61,[[],[["nametocapturelocations",6],["error",3],["result",4]]]],[11,"named_captures_for_haystack","","",61,[[],[["error",3],["result",4],["option",4]]]],[11,"names","","",61,[[],[["vec",3],["vec",3]]]],[11,"pos","","",61,[[],[["error",3],["result",4],["option",4]]]],[11,"scan","","",61,[[["block",3],["option",4],["artichoke",3]],[["error",3],["result",4],["scan",4]]]],[11,"is_file","artichoke_backend::fs::hybrid","",75,[[["path",3]]]],[11,"read_file","","",75,[[["path",3]],[["cow",4],["result",6]]]],[11,"write_file","","",75,[[["cow",4],["path",3]],["result",6]]],[11,"get_extension","","",75,[[["path",3]],[["extensionhook",6],["option",4]]]],[11,"register_extension","","",75,[[["path",3],["extensionhook",6]],["result",6]]],[11,"is_required","","",75,[[["path",3]]]],[11,"mark_required","","",75,[[["path",3]],["result",6]]],[11,"is_file","artichoke_backend::fs::memory","Check whether `path` points to a file in the virtual…",77,[[["path",3]]]],[11,"read_file","","Read file contents for the file at `path`.",77,[[["path",3]],[["cow",4],["result",6]]]],[11,"write_file","","Write file contents into the virtual file system at `path`.",77,[[["cow",4],["path",3]],["result",6]]],[11,"get_extension","","Retrieve an extension hook for the file at `path`.",77,[[["path",3]],[["extensionhook",6],["option",4]]]],[11,"register_extension","","Write extension hook into the virtual file system at `path`.",77,[[["path",3],["extensionhook",6]],["result",6]]],[11,"is_required","","Check whether a file at `path` has been required already.",77,[[["path",3]]]],[11,"mark_required","","Mark a source at `path` as required on the interpreter.",77,[[["path",3]],["result",6]]],[11,"is_file","artichoke_backend::fs::native","",78,[[["path",3]]]],[11,"read_file","","",78,[[["path",3]],[["cow",4],["result",6]]]],[11,"write_file","","",78,[[["cow",4],["path",3]],["result",6]]],[11,"get_extension","","",78,[[["path",3]],[["extensionhook",6],["option",4]]]],[11,"register_extension","","",78,[[["path",3],["extensionhook",6]],["result",6]]],[11,"is_required","","",78,[[["path",3]]]],[11,"mark_required","","",78,[[["path",3]],["result",6]]],[11,"create_arena_savepoint","artichoke_backend::prelude","",153,[[],[["arenaindex",3],["arenasavepointerror",3],["result",4]]]],[11,"live_object_count","","",153,[[]]],[11,"mark_value","","",153,[[["value",3]]]],[11,"incremental_gc","","",153,[[]]],[11,"full_gc","","",153,[[]]],[11,"enable_gc","","",153,[[],["state",4]]],[11,"disable_gc","","",153,[[],["state",4]]],[11,"def_module","","Create a module definition bound to a Rust type `T`.",153,[[["spec",3]],[["error",3],["result",4]]]],[11,"module_spec","","Retrieve a module definition from the interpreter bound to…",153,[[],[["error",3],["option",4],["result",4]]]],[11,"module_of","","",153,[[],[["option",4],["error",3],["result",4]]]],[11,"as_debug","artichoke_backend::state::output","",92,[[],["debug",8]]],[11,"write_stdout","","",92,[[["asref",8]],["result",6]]],[11,"write_stderr","","",92,[[["asref",8]],["result",6]]],[11,"as_debug","","",93,[[],["debug",8]]],[11,"write_stdout","","",93,[[["asref",8]],["result",6]]],[11,"write_stderr","","",93,[[["asref",8]],["result",6]]],[11,"as_debug","","",94,[[],["debug",8]]],[11,"write_stdout","","",94,[[["asref",8]],["result",6]]],[11,"write_stderr","","",94,[[["asref",8]],["result",6]]],[11,"drop","artichoke_backend::prelude","",154,[[]]],[11,"drop","artichoke_backend::gc::arena","",81,[[]]],[11,"as_mut","artichoke_backend::prelude","",154,[[],["artichoke",3]]],[11,"as_mut","artichoke_backend::convert","",156,[[]]],[11,"as_mut","artichoke_backend::extn::core::random","",58,[[],["spinosorandom",3]]],[11,"as_mut","artichoke_backend::gc::arena","",81,[[],["artichoke",3]]],[11,"as_mut","artichoke_backend::string","",99,[[],["error",3]]],[11,"as_ref","artichoke_backend::prelude","",154,[[],["artichoke",3]]],[11,"as_ref","artichoke_backend::convert","",156,[[]]],[11,"as_ref","artichoke_backend::extn::core::random","",58,[[],["spinosorandom",3]]],[11,"as_ref","artichoke_backend::gc::arena","",81,[[],["artichoke",3]]],[11,"as_ref","artichoke_backend::string","",99,[[],["error",3]]],[11,"from","artichoke_backend::error","",158,[[["noblockgiven",3]]]],[11,"from","","",158,[[["noblockgiven",3],["box",3]]]],[11,"from","artichoke_backend::block","",23,[[["value",3]]]],[11,"from","","",23,[[["mrb_value",3]]]],[11,"from","","",23,[[["ruby",4]]]],[11,"from","artichoke_backend::error","",158,[[["unboxrubyerror",3]]]],[11,"from","","",158,[[["box",3],["unboxrubyerror",3]]]],[11,"from","","",158,[[["boxintorubyerror",3]]]],[11,"from","","",158,[[["box",3],["boxintorubyerror",3]]]],[11,"from","artichoke_backend::def","",34,[[]]],[11,"from","","",34,[[["string",3]]]],[11,"from","","",34,[[["cow",4]]]],[11,"from","artichoke_backend::error","",158,[[["constantnameerror",3]]]],[11,"from","","",158,[[["box",3],["constantnameerror",3]]]],[11,"from","","",158,[[["notdefinederror",4]]]],[11,"from","","",158,[[["box",3],["notdefinederror",4]]]],[11,"from","","",158,[[["box",3],["rubyexception",8]]]],[11,"from","","",158,[[["caughtexception",3]]]],[11,"from","artichoke_backend::extn::core::array","",40,[[["spinosoarray",3],["mrb_value",3]]]],[11,"from","","",40,[[["vec",3],["mrb_value",3]]]],[11,"from","","",40,[[["vec",3],["value",3]]]],[11,"from","","",40,[[]]],[11,"from","","",40,[[]]],[11,"from","artichoke_backend::error","",158,[[["envargumenterror",3]]]],[11,"from","","",158,[[["invaliderror",3]]]],[11,"from","","",158,[[["enverror",4]]]],[11,"from","","",158,[[["exception",3]],["error",3]]],[11,"from","","",158,[[["box",3],["exception",3]],["error",3]]],[11,"from","","",158,[[["nomemoryerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["nomemoryerror",3]],["error",3]]],[11,"from","","",158,[[["scripterror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["scripterror",3]],["error",3]]],[11,"from","","",158,[[["loaderror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["loaderror",3]],["error",3]]],[11,"from","","",158,[[["notimplementederror",3]],["error",3]]],[11,"from","","",158,[[["notimplementederror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["syntaxerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["syntaxerror",3]],["error",3]]],[11,"from","","",158,[[["securityerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["securityerror",3]],["error",3]]],[11,"from","","",158,[[["signalexception",3]],["error",3]]],[11,"from","","",158,[[["box",3],["signalexception",3]],["error",3]]],[11,"from","","",158,[[["interrupt",3]],["error",3]]],[11,"from","","",158,[[["interrupt",3],["box",3]],["error",3]]],[11,"from","","",158,[[["standarderror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["standarderror",3]],["error",3]]],[11,"from","","",158,[[["argumenterror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["argumenterror",3]],["error",3]]],[11,"from","","",158,[[["uncaughtthrowerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["uncaughtthrowerror",3]],["error",3]]],[11,"from","","",158,[[["encodingerror",3]],["error",3]]],[11,"from","","",158,[[["encodingerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["fibererror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["fibererror",3]],["error",3]]],[11,"from","","",158,[[["ioerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["ioerror",3]],["error",3]]],[11,"from","","",158,[[["eoferror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["eoferror",3]],["error",3]]],[11,"from","","",158,[[["indexerror",3]],["error",3]]],[11,"from","","",158,[[["indexerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["keyerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["keyerror",3]],["error",3]]],[11,"from","","",158,[[["stopiteration",3]],["error",3]]],[11,"from","","",158,[[["stopiteration",3],["box",3]],["error",3]]],[11,"from","","",158,[[["localjumperror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["localjumperror",3]],["error",3]]],[11,"from","","",158,[[["nameerror",3]],["error",3]]],[11,"from","","",158,[[["nameerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["nomethoderror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["nomethoderror",3]],["error",3]]],[11,"from","","",158,[[["rangeerror",3]],["error",3]]],[11,"from","","",158,[[["rangeerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["floatdomainerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["floatdomainerror",3]],["error",3]]],[11,"from","","",158,[[["regexperror",3]],["error",3]]],[11,"from","","",158,[[["regexperror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["runtimeerror",3]],["error",3]]],[11,"from","","",158,[[["runtimeerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["frozenerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["frozenerror",3]],["error",3]]],[11,"from","","",158,[[["systemcallerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["systemcallerror",3]],["error",3]]],[11,"from","","",158,[[["threaderror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["threaderror",3]],["error",3]]],[11,"from","","",158,[[["typeerror",3]],["error",3]]],[11,"from","","",158,[[["typeerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["zerodivisionerror",3]],["error",3]]],[11,"from","","",158,[[["box",3],["zerodivisionerror",3]],["error",3]]],[11,"from","","",158,[[["systemexit",3]],["error",3]]],[11,"from","","",158,[[["box",3],["systemexit",3]],["error",3]]],[11,"from","","",158,[[["systemstackerror",3]],["error",3]]],[11,"from","","",158,[[["systemstackerror",3],["box",3]],["error",3]]],[11,"from","","",158,[[["fatal",3]],["error",3]]],[11,"from","","",158,[[["fatal",3],["box",3]],["error",3]]],[11,"from","artichoke_backend::extn::core::float","",42,[[["fp",6]]]],[11,"from","artichoke_backend","",244,[[["float",3]]]],[11,"from","artichoke_backend::extn::core::numeric","",53,[[["float",3]]]],[11,"from","","",53,[[["fp",6]]]],[11,"from","artichoke_backend::extn::core::integer","",43,[[["int",6]]]],[11,"from","artichoke_backend::extn::core::numeric","",53,[[["integer",3]]]],[11,"from","","",53,[[["int",6]]]],[11,"from","artichoke_backend::extn::core::kernel::integer","",46,[[]]],[11,"from","","",45,[[["utf8error",3]]]],[11,"from","artichoke_backend::extn::core::kernel::require","",47,[[["pathbuf",3]]]],[11,"from","","",47,[[["path",3]]]],[11,"from","","",47,[[["string",3]]]],[11,"from","","",47,[[]]],[11,"from","artichoke_backend::error","",158,[[["domainerror",3]]]],[11,"from","","",158,[[["box",3],["domainerror",3]]]],[11,"from","","",158,[[["mathnotimplementederror",3]]]],[11,"from","","",158,[[["matherror",4]]]],[11,"from","artichoke_backend::extn::core::random","",57,[[["int",6]],["seed",4]]],[11,"from","artichoke_backend::error","",158,[[["randomargumenterror",3]]]],[11,"from","","",158,[[["initializeerror",3]]]],[11,"from","","",158,[[["newseederror",3]]]],[11,"from","","",158,[[["urandomerror",3]]]],[11,"from","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[["config",3]]]],[11,"from","artichoke_backend","Convert an `Encoding` to its bitflag representation.",245,[[["encoding",4]]]],[11,"from","","Convert an `Encoding` to its bitflag representation.",245,[[["encoding",4]]]],[11,"from","artichoke_backend::extn::core::regexp::opts","",66,[[]]],[11,"from","artichoke_backend","Convert an `Options` to its bitflag representation.",245,[[["options",3]]]],[11,"from","artichoke_backend::extn::core::regexp::opts","",67,[[["int",6]]]],[11,"from","","",67,[[["option",4]]]],[11,"from","","",67,[[]]],[11,"from","artichoke_backend::extn::core::regexp","",69,[[["box",3],["regexptype",8]]]],[11,"from","artichoke_backend::error","",158,[[["securerandomerror",4]]]],[11,"from","","",158,[[["argumenterror",3]]]],[11,"from","","",158,[[["randombyteserror",3]]]],[11,"from","","",158,[[["domainerror",3]]]],[11,"from","","",158,[[["interpreterextracterror",3]]]],[11,"from","","",158,[[["box",3],["interpreterextracterror",3]]]],[11,"from","","",158,[[["convertbyteserror",3]]]],[11,"from","","",158,[[["box",3],["convertbyteserror",3]]]],[11,"from","artichoke_backend::fs::memory","",238,[[["extensionhook",6]]]],[11,"from","","",76,[[["vec",3]]]],[11,"from","","",76,[[]]],[11,"from","","",76,[[["cow",4]]]],[11,"from","","",76,[[["string",3]]]],[11,"from","","",76,[[]]],[11,"from","","",76,[[["cow",4]]]],[11,"from","","",239,[[["code",3]]]],[11,"from","","",239,[[["vec",3]]]],[11,"from","","",239,[[]]],[11,"from","","",239,[[["cow",4]]]],[11,"from","","",239,[[["string",3]]]],[11,"from","","",239,[[]]],[11,"from","","",239,[[["cow",4]]]],[11,"from","","",239,[[["extensionhook",6]]]],[11,"from","artichoke_backend::error","",158,[[["arenasavepointerror",3]]]],[11,"from","","",158,[[["box",3],["arenasavepointerror",3]]]],[11,"from","","",158,[[["symboloverflowerror",3]]]],[11,"from","","",158,[[["symboloverflowerror",3],["box",3]]]],[11,"from","","",158,[[["box",3],["interpreterallocerror",3]]]],[11,"from","","",158,[[["error",3]]]],[11,"from","","",158,[[["box",3],["ioerror",3]]]],[11,"from","","",158,[[["incrementlinenoerror",4]]]],[11,"from","","",158,[[["box",3],["incrementlinenoerror",4]]]],[11,"from","artichoke_backend::string","",99,[[["error",3]]]],[11,"from","artichoke_backend::error","",158,[[["writeerror",3]]]],[11,"from","","",158,[[["writeerror",3],["box",3]]]],[11,"from","artichoke_backend::value","Construct a new [`Value`] from a [`sys::mrb_value`].",151,[[["mrb_value",3]]]],[11,"from","","",151,[[["option",4],["mrb_value",3]]]],[11,"from","","",151,[[["option",4],["value",3]]]],[11,"from","artichoke_backend::error","",158,[[["argcounterror",3]]]],[11,"from","","",158,[[["box",3],["argcounterror",3]]]],[11,"next","artichoke_backend::extn::core::array","",159,[[],["option",4]]],[11,"clone","artichoke_backend::block","",23,[[],["noblockgiven",3]]],[11,"clone","","",24,[[],["block",3]]],[11,"clone","artichoke_backend::class","",26,[[],["rclass",3]]],[11,"clone","","",27,[[],["spec",3]]],[11,"clone","artichoke_backend::convert","",31,[[],["unboxrubyerror",3]]],[11,"clone","","",32,[[],["boxintorubyerror",3]]],[11,"clone","artichoke_backend::def","",33,[[],["enclosingrubyscope",4]]],[11,"clone","","",34,[[],["constantnameerror",3]]],[11,"clone","","",35,[[],["notdefinederror",4]]],[11,"clone","artichoke_backend::exception_handler","",38,[[],["caughtexception",3]]],[11,"clone","artichoke_backend::extn::core::array::args","",39,[[],["elementreference",4]]],[11,"clone","artichoke_backend::extn::core::array","",40,[[],["array",3]]],[11,"clone","artichoke_backend::extn::core::artichoke","",160,[[],["artichoke",3]]],[11,"clone","","",161,[[],["kernel",3]]],[11,"clone","artichoke_backend::extn::core::comparable","",162,[[],["comparable",3]]],[11,"clone","artichoke_backend::extn::core::enumerable","",163,[[],["enumerable",3]]],[11,"clone","artichoke_backend::extn::core::enumerator","",164,[[],["enumerator",3]]],[11,"clone","artichoke_backend::extn::core::float","",42,[[],["float",3]]],[11,"clone","artichoke_backend::extn::core::hash","",199,[[],["hash",3]]],[11,"clone","artichoke_backend::extn::core::integer","",43,[[],["integer",3]]],[11,"clone","artichoke_backend::extn::core::kernel::integer","",44,[[],["radix",3]]],[11,"clone","","",46,[[],["integerstring",3]]],[11,"clone","","",45,[[],["utf8error",4]]],[11,"clone","artichoke_backend::extn::core::kernel::require","",47,[[],["relativepath",3]]],[11,"clone","artichoke_backend::extn::core::kernel","",200,[[],["kernel",3]]],[11,"clone","artichoke_backend::extn::core::matchdata","",201,[[],["region",3]]],[11,"clone","","",48,[[],["capture",4]]],[11,"clone","","",49,[[],["captureextract",4]]],[11,"clone","","",50,[[],["captureat",4]]],[11,"clone","","",51,[[],["capturematch",4]]],[11,"clone","","",52,[[],["matchdata",3]]],[11,"clone","artichoke_backend::extn::core::method","",204,[[],["method",3]]],[11,"clone","artichoke_backend::extn::core::module","",205,[[],["module",3]]],[11,"clone","artichoke_backend::extn::core::numeric","",206,[[],["numeric",3]]],[11,"clone","","",53,[[],["outcome",4]]],[11,"clone","","",54,[[],["coercion",4]]],[11,"clone","artichoke_backend::extn::core::object","",207,[[],["object",3]]],[11,"clone","artichoke_backend::extn::core::proc","",208,[[],["proc",3]]],[11,"clone","artichoke_backend::extn::core::random","",57,[[],["seed",4]]],[11,"clone","","",58,[[],["random",3]]],[11,"clone","artichoke_backend::extn::core::range","",209,[[],["range",3]]],[11,"clone","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[]]],[11,"clone","artichoke_backend::extn::core::regexp::backend::onig","",60,[[],["onig",3]]],[11,"clone","artichoke_backend::extn::core::regexp::backend::regex::utf8","",61,[[],["utf8",3]]],[11,"clone","artichoke_backend::extn::core::regexp::backend","",62,[[],["scan",4]]],[11,"clone","artichoke_backend::extn::core::regexp::enc","",64,[[],["invalidencodingerror",3]]],[11,"clone","","",65,[[],["encoding",4]]],[11,"clone","artichoke_backend::extn::core::regexp::opts","",66,[[],["regexpoption",4]]],[11,"clone","","",67,[[],["options",3]]],[11,"clone","artichoke_backend::extn::core::regexp::pattern","",68,[[],["pattern",3]]],[11,"clone","artichoke_backend::extn::core::regexp","",69,[[],["regexp",3]]],[11,"clone","","",210,[[],["config",3]]],[11,"clone","artichoke_backend::extn::core::string","",211,[[],["string",3]]],[11,"clone","artichoke_backend::extn::core::thread","",213,[[],["thread",3]]],[11,"clone","","",214,[[],["mutex",3]]],[11,"clone","artichoke_backend::extn::core::warning","",216,[[],["warning",3]]],[11,"clone","artichoke_backend::extn::stdlib::abbrev","",217,[[],["abbrev",3]]],[11,"clone","artichoke_backend::extn::stdlib::base64","",218,[[],["base64",3]]],[11,"clone","artichoke_backend::extn::stdlib::cmath","",219,[[],["cmath",3]]],[11,"clone","artichoke_backend::extn::stdlib::delegate","",220,[[],["delegator",3]]],[11,"clone","","",221,[[],["simpledelegator",3]]],[11,"clone","artichoke_backend::extn::stdlib::forwardable","",222,[[],["forwardable",3]]],[11,"clone","artichoke_backend::extn::stdlib::json","",223,[[],["json",3]]],[11,"clone","artichoke_backend::extn::stdlib::monitor","",224,[[],["monitor",3]]],[11,"clone","artichoke_backend::extn::stdlib::ostruct","",225,[[],["openstruct",3]]],[11,"clone","artichoke_backend::extn::stdlib::set","",231,[[],["set",3]]],[11,"clone","","",232,[[],["sortedset",3]]],[11,"clone","artichoke_backend::extn::stdlib::shellwords","",233,[[],["shellwords",3]]],[11,"clone","artichoke_backend::extn::stdlib::strscan","",234,[[],["stringscanner",3]]],[11,"clone","artichoke_backend::extn::stdlib::uri","",235,[[],["ipsocket",3]]],[11,"clone","","",236,[[],["ipaddr",3]]],[11,"clone","","",237,[[],["uri",3]]],[11,"clone","artichoke_backend::ffi","",73,[[],["interpreterextracterror",3]]],[11,"clone","","",74,[[],["convertbyteserror",3]]],[11,"clone","artichoke_backend::fs::memory","",238,[[],["extension",3]]],[11,"clone","","",76,[[],["code",3]]],[11,"clone","artichoke_backend::gc::arena","",80,[[],["arenasavepointerror",3]]],[11,"clone","artichoke_backend::gc","",83,[[],["state",4]]],[11,"clone","artichoke_backend::method","",84,[[],["type",4]]],[11,"clone","","",85,[[],["spec",3]]],[11,"clone","artichoke_backend::module","",87,[[],["rclass",3]]],[11,"clone","","",88,[[],["spec",3]]],[11,"clone","artichoke_backend::release_metadata","",90,[[],["releasemetadata",3]]],[11,"clone","artichoke_backend::state::output","",92,[[],["process",3]]],[11,"clone","","",93,[[],["captured",3]]],[11,"clone","","",94,[[],["null",3]]],[11,"clone","artichoke_backend::state::parser","",96,[[],["context",3]]],[11,"clone","artichoke_backend::state::regexp","",97,[[],["state",3]]],[11,"clone","artichoke_backend::string","",99,[[],["writeerror",3]]],[11,"clone","artichoke_backend::sys","",241,[[],["__bindgenbitfieldunit",3]]],[11,"clone","","",100,[[],["mrb_vtype",4]]],[11,"clone","","",101,[[],["rbasic",3]]],[11,"clone","","",102,[[],["robject",3]]],[11,"clone","","",103,[[],["rfiber",3]]],[11,"clone","","",104,[[],["mrb_value_union",19]]],[11,"clone","","",105,[[],["mrb_value",3]]],[11,"clone","","",107,[[],["mrb_gc",3]]],[11,"clone","","",108,[[],["mrb_callinfo",3]]],[11,"clone","","",109,[[],["mrb_context",3]]],[11,"clone","","",110,[[],["mrb_state",3]]],[11,"clone","","",111,[[],["mrb_kwargs",3]]],[11,"clone","","",243,[[],["mrb_pool",3]]],[11,"clone","","",112,[[],["mrb_shared_array",3]]],[11,"clone","","",113,[[],["rarray",3]]],[11,"clone","","",114,[[],["rarray__bindgen_ty_1",19]]],[11,"clone","","",115,[[],["rarray__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",116,[[],["rarray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1",19]]],[11,"clone","","",117,[[],["rclass",3]]],[11,"clone","","",118,[[],["mrbc_context",3]]],[11,"clone","","",119,[[],["mrb_ast_node",3]]],[11,"clone","","",120,[[],["mrb_lex_state_enum",4]]],[11,"clone","","",121,[[],["mrb_parser_message",3]]],[11,"clone","","",122,[[],["mrb_parser_heredoc_info",3]]],[11,"clone","","",123,[[],["mrb_parser_state",3]]],[11,"clone","","",124,[[],["mrb_data_type",3]]],[11,"clone","","",125,[[],["rdata",3]]],[11,"clone","","",126,[[],["mrb_locals",3]]],[11,"clone","","",127,[[],["mrb_irep",3]]],[11,"clone","","",128,[[],["mrb_insn_data",3]]],[11,"clone","","",129,[[],["rhash",3]]],[11,"clone","","",130,[[],["renv",3]]],[11,"clone","","",131,[[],["rproc",3]]],[11,"clone","","",132,[[],["rproc__bindgen_ty_1",19]]],[11,"clone","","",133,[[],["rproc__bindgen_ty_2",19]]],[11,"clone","","",134,[[],["kh_mt",3]]],[11,"clone","","",135,[[],["mrb_range_edges",3]]],[11,"clone","","",136,[[],["rrange",3]]],[11,"clone","","",137,[[],["mrb_range_beg_len",4]]],[11,"clone","","",138,[[],["rstring",3]]],[11,"clone","","",139,[[],["rstring__bindgen_ty_1",19]]],[11,"clone","","",140,[[],["rstring__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",141,[[],["rstring__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1",19]]],[11,"clone","","",142,[[],["__sigset_t",3]]],[11,"clone","","",143,[[],["__jmp_buf_tag",3]]],[11,"clone","","",144,[[],["mrb_jmpbuf",3]]],[11,"clone","","",145,[[],["__va_list_tag",3]]],[11,"clone","","",146,[[],["iv_tbl",3]]],[11,"clone","","",147,[[],["symbol_name",3]]],[11,"clone","","",148,[[],["mrb_irep_debug_info",3]]],[11,"clone","","",149,[[],["htable",3]]],[11,"clone","","",150,[[],["mrb_shared_string",3]]],[11,"clone","artichoke_backend::value","",151,[[],["value",3]]],[11,"clone","","",152,[[],["argcounterror",3]]],[11,"default","artichoke_backend::block","",23,[[]]],[11,"default","","",24,[[],["block",3]]],[11,"default","artichoke_backend::class","",155,[[],["registry",3]]],[11,"default","artichoke_backend::def","",34,[[],["constantnameerror",3]]],[11,"default","artichoke_backend::exception_handler","",37,[[],["builder",3]]],[11,"default","","",38,[[],["caughtexception",3]]],[11,"default","artichoke_backend::extn::core::array","",40,[[],["array",3]]],[11,"default","artichoke_backend::extn::core::env","",41,[[],["environ",3]]],[11,"default","artichoke_backend::extn::core::float","",42,[[],["float",3]]],[11,"default","artichoke_backend::extn::core::integer","",43,[[],["integer",3]]],[11,"default","artichoke_backend::extn::core::kernel::integer","",44,[[]]],[11,"default","","",46,[[],["integerstring",3]]],[11,"default","artichoke_backend::extn::core::kernel::require","",47,[[],["relativepath",3]]],[11,"default","artichoke_backend::extn::core::random","",57,[[]]],[11,"default","","",58,[[],["random",3]]],[11,"default","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[],["lazy",3]]],[11,"default","artichoke_backend::extn::core::regexp::enc","",64,[[],["invalidencodingerror",3]]],[11,"default","","",65,[[]]],[11,"default","artichoke_backend::extn::core::regexp::opts","",66,[[]]],[11,"default","","",67,[[],["options",3]]],[11,"default","artichoke_backend::extn::core::regexp::pattern","",68,[[],["pattern",3]]],[11,"default","artichoke_backend::extn::core::regexp","",210,[[],["config",3]]],[11,"default","artichoke_backend::ffi","",73,[[],["interpreterextracterror",3]]],[11,"default","","",74,[[],["convertbyteserror",3]]],[11,"default","artichoke_backend::fs::hybrid","",75,[[],["hybrid",3]]],[11,"default","artichoke_backend::fs::memory","",76,[[]]],[11,"default","","",239,[[],["entry",3]]],[11,"default","","Virtual filesystem with current working directory set to…",77,[[]]],[11,"default","artichoke_backend::fs::native","",78,[[],["native",3]]],[11,"default","artichoke_backend::gc::arena","",80,[[],["arenasavepointerror",3]]],[11,"default","artichoke_backend::module","",240,[[],["registry",3]]],[11,"default","artichoke_backend::release_metadata","",90,[[]]],[11,"default","artichoke_backend::state::output","",92,[[],["process",3]]],[11,"default","","",93,[[],["captured",3]]],[11,"default","","",94,[[],["null",3]]],[11,"default","artichoke_backend::state::parser","",96,[[]]],[11,"default","artichoke_backend::state::regexp","",97,[[],["state",3]]],[11,"default","artichoke_backend::state","",98,[[],["state",3]]],[11,"default","artichoke_backend::sys","",241,[[],["__bindgenbitfieldunit",3]]],[11,"default","","",242,[[],["__incompletearrayfield",3]]],[11,"default","","",105,[[]]],[11,"default","artichoke_backend::value","",151,[[],["value",3]]],[11,"default","","",152,[[],["argcounterror",3]]],[11,"cmp","artichoke_backend::block","",23,[[["noblockgiven",3]],["ordering",4]]],[11,"cmp","artichoke_backend::convert","",31,[[["unboxrubyerror",3]],["ordering",4]]],[11,"cmp","","",32,[[["boxintorubyerror",3]],["ordering",4]]],[11,"cmp","artichoke_backend::def","",34,[[["constantnameerror",3]],["ordering",4]]],[11,"cmp","","",35,[[["notdefinederror",4]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::array::args","",39,[[["elementreference",4]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::integer","",43,[[["integer",3]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::kernel::integer","",44,[[["radix",3]],["ordering",4]]],[11,"cmp","","",46,[[["integerstring",3]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::kernel::require","",47,[[["relativepath",3]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::matchdata","",50,[[["captureat",4]],["ordering",4]]],[11,"cmp","","",51,[[["capturematch",4]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::random","",57,[[["seed",4]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::regexp::backend","",62,[[["scan",4]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::regexp::enc","",64,[[["invalidencodingerror",3]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::regexp::opts","",66,[[["regexpoption",4]],["ordering",4]]],[11,"cmp","","",67,[[["options",3]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::regexp::pattern","",68,[[["pattern",3]],["ordering",4]]],[11,"cmp","artichoke_backend::extn::core::regexp","",210,[[["config",3]],["ordering",4]]],[11,"cmp","artichoke_backend::ffi","",73,[[["interpreterextracterror",3]],["ordering",4]]],[11,"cmp","","",74,[[["convertbyteserror",3]],["ordering",4]]],[11,"cmp","artichoke_backend::fs::memory","",76,[[["code",3]],["ordering",4]]],[11,"cmp","artichoke_backend::gc::arena","",80,[[["arenasavepointerror",3]],["ordering",4]]],[11,"cmp","artichoke_backend::release_metadata","",90,[[["releasemetadata",3]],["ordering",4]]],[11,"cmp","artichoke_backend::state::output","",92,[[["process",3]],["ordering",4]]],[11,"cmp","","",93,[[["captured",3]],["ordering",4]]],[11,"cmp","","",94,[[["null",3]],["ordering",4]]],[11,"cmp","artichoke_backend::state::parser","",96,[[["context",3]],["ordering",4]]],[11,"cmp","artichoke_backend::state::regexp","",97,[[["state",3]],["ordering",4]]],[11,"cmp","artichoke_backend::sys","",241,[[["__bindgenbitfieldunit",3]],["ordering",4]]],[11,"cmp","artichoke_backend::value","",152,[[["argcounterror",3]],["ordering",4]]],[11,"eq","artichoke_backend::block","",23,[[["noblockgiven",3]]]],[11,"ne","","",23,[[["noblockgiven",3]]]],[11,"eq","artichoke_backend::class","",155,[[]]],[11,"eq","","",26,[[["rclass",3]]]],[11,"ne","","",26,[[["rclass",3]]]],[11,"eq","","",27,[[]]],[11,"eq","artichoke_backend::convert","",31,[[["unboxrubyerror",3]]]],[11,"ne","","",31,[[["unboxrubyerror",3]]]],[11,"eq","","",32,[[["boxintorubyerror",3]]]],[11,"ne","","",32,[[["boxintorubyerror",3]]]],[11,"eq","artichoke_backend::def","",33,[[["enclosingrubyscope",4]]]],[11,"ne","","",33,[[["enclosingrubyscope",4]]]],[11,"eq","","",34,[[["constantnameerror",3]]]],[11,"ne","","",34,[[["constantnameerror",3]]]],[11,"eq","","",35,[[["notdefinederror",4]]]],[11,"ne","","",35,[[["notdefinederror",4]]]],[11,"eq","artichoke_backend::extn::core::array::args","",39,[[["elementreference",4]]]],[11,"ne","","",39,[[["elementreference",4]]]],[11,"eq","artichoke_backend::extn::core::float","",42,[[["float",3]]]],[11,"ne","","",42,[[["float",3]]]],[11,"eq","artichoke_backend::extn::core::integer","",43,[[["integer",3]]]],[11,"ne","","",43,[[["integer",3]]]],[11,"eq","artichoke_backend::extn::core::kernel::integer","",44,[[["radix",3]]]],[11,"ne","","",44,[[["radix",3]]]],[11,"eq","","",46,[[["integerstring",3]]]],[11,"ne","","",46,[[["integerstring",3]]]],[11,"eq","","",45,[[["utf8error",4]]]],[11,"ne","","",45,[[["utf8error",4]]]],[11,"eq","artichoke_backend::extn::core::kernel::require","",47,[[["relativepath",3]]]],[11,"ne","","",47,[[["relativepath",3]]]],[11,"eq","artichoke_backend::extn::core::matchdata","",201,[[["region",3]]]],[11,"ne","","",201,[[["region",3]]]],[11,"eq","","",48,[[["capture",4]]]],[11,"ne","","",48,[[["capture",4]]]],[11,"eq","","",49,[[["captureextract",4]]]],[11,"ne","","",49,[[["captureextract",4]]]],[11,"eq","","",50,[[["captureat",4]]]],[11,"ne","","",50,[[["captureat",4]]]],[11,"eq","","",51,[[["capturematch",4]]]],[11,"ne","","",51,[[["capturematch",4]]]],[11,"eq","","",52,[[["matchdata",3]]]],[11,"ne","","",52,[[["matchdata",3]]]],[11,"eq","artichoke_backend::extn::core::numeric","",53,[[["outcome",4]]]],[11,"ne","","",53,[[["outcome",4]]]],[11,"eq","","",54,[[["coercion",4]]]],[11,"ne","","",54,[[["coercion",4]]]],[11,"eq","artichoke_backend::extn::core::random","",57,[[["seed",4]]]],[11,"ne","","",57,[[["seed",4]]]],[11,"eq","","",58,[[["random",3]]]],[11,"ne","","",58,[[["random",3]]]],[11,"eq","artichoke_backend::extn::core::regexp::backend","",62,[[["scan",4]]]],[11,"ne","","",62,[[["scan",4]]]],[11,"eq","artichoke_backend::extn::core::regexp::enc","",64,[[["invalidencodingerror",3]]]],[11,"ne","","",64,[[["invalidencodingerror",3]]]],[11,"eq","","",65,[[]]],[11,"eq","artichoke_backend::extn::core::regexp::opts","",66,[[["regexpoption",4]]]],[11,"eq","","",67,[[["options",3]]]],[11,"ne","","",67,[[["options",3]]]],[11,"eq","artichoke_backend::extn::core::regexp::pattern","",68,[[["pattern",3]]]],[11,"ne","","",68,[[["pattern",3]]]],[11,"eq","artichoke_backend::extn::core::regexp","",69,[[]]],[11,"eq","","",210,[[["config",3]]]],[11,"ne","","",210,[[["config",3]]]],[11,"eq","artichoke_backend::ffi","",73,[[["interpreterextracterror",3]]]],[11,"ne","","",73,[[["interpreterextracterror",3]]]],[11,"eq","","",74,[[["convertbyteserror",3]]]],[11,"ne","","",74,[[["convertbyteserror",3]]]],[11,"eq","artichoke_backend::fs::memory","",76,[[["code",3]]]],[11,"ne","","",76,[[["code",3]]]],[11,"eq","artichoke_backend::fs::native","",78,[[["native",3]]]],[11,"ne","","",78,[[["native",3]]]],[11,"eq","artichoke_backend::gc::arena","",80,[[["arenasavepointerror",3]]]],[11,"ne","","",80,[[["arenasavepointerror",3]]]],[11,"eq","artichoke_backend::gc","",83,[[["state",4]]]],[11,"eq","artichoke_backend::method","",84,[[["type",4]]]],[11,"eq","","",85,[[]]],[11,"eq","artichoke_backend::module","",240,[[]]],[11,"eq","","",87,[[["rclass",3]]]],[11,"ne","","",87,[[["rclass",3]]]],[11,"eq","","",88,[[]]],[11,"eq","artichoke_backend::release_metadata","",90,[[["releasemetadata",3]]]],[11,"ne","","",90,[[["releasemetadata",3]]]],[11,"eq","artichoke_backend::state::output","",92,[[["process",3]]]],[11,"ne","","",92,[[["process",3]]]],[11,"eq","","",93,[[["captured",3]]]],[11,"ne","","",93,[[["captured",3]]]],[11,"eq","","",94,[[["null",3]]]],[11,"ne","","",94,[[["null",3]]]],[11,"eq","artichoke_backend::state::parser","",96,[[["context",3]]]],[11,"ne","","",96,[[["context",3]]]],[11,"eq","artichoke_backend::state::regexp","",97,[[["state",3]]]],[11,"ne","","",97,[[["state",3]]]],[11,"eq","artichoke_backend::sys","",241,[[["__bindgenbitfieldunit",3]]]],[11,"ne","","",241,[[["__bindgenbitfieldunit",3]]]],[11,"eq","","",100,[[["mrb_vtype",4]]]],[11,"eq","","",120,[[["mrb_lex_state_enum",4]]]],[11,"eq","","",137,[[["mrb_range_beg_len",4]]]],[11,"eq","artichoke_backend::value","",151,[[]]],[11,"eq","","",152,[[["argcounterror",3]]]],[11,"ne","","",152,[[["argcounterror",3]]]],[11,"partial_cmp","artichoke_backend::block","",23,[[["noblockgiven",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["noblockgiven",3]]]],[11,"le","","",23,[[["noblockgiven",3]]]],[11,"gt","","",23,[[["noblockgiven",3]]]],[11,"ge","","",23,[[["noblockgiven",3]]]],[11,"partial_cmp","artichoke_backend::convert","",31,[[["unboxrubyerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["unboxrubyerror",3]]]],[11,"le","","",31,[[["unboxrubyerror",3]]]],[11,"gt","","",31,[[["unboxrubyerror",3]]]],[11,"ge","","",31,[[["unboxrubyerror",3]]]],[11,"partial_cmp","","",32,[[["boxintorubyerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["boxintorubyerror",3]]]],[11,"le","","",32,[[["boxintorubyerror",3]]]],[11,"gt","","",32,[[["boxintorubyerror",3]]]],[11,"ge","","",32,[[["boxintorubyerror",3]]]],[11,"partial_cmp","artichoke_backend::def","",34,[[["constantnameerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["constantnameerror",3]]]],[11,"le","","",34,[[["constantnameerror",3]]]],[11,"gt","","",34,[[["constantnameerror",3]]]],[11,"ge","","",34,[[["constantnameerror",3]]]],[11,"partial_cmp","","",35,[[["notdefinederror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["notdefinederror",4]]]],[11,"le","","",35,[[["notdefinederror",4]]]],[11,"gt","","",35,[[["notdefinederror",4]]]],[11,"ge","","",35,[[["notdefinederror",4]]]],[11,"partial_cmp","artichoke_backend::extn::core::array::args","",39,[[["elementreference",4]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["elementreference",4]]]],[11,"le","","",39,[[["elementreference",4]]]],[11,"gt","","",39,[[["elementreference",4]]]],[11,"ge","","",39,[[["elementreference",4]]]],[11,"partial_cmp","artichoke_backend::extn::core::float","",42,[[["float",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["float",3]]]],[11,"le","","",42,[[["float",3]]]],[11,"gt","","",42,[[["float",3]]]],[11,"ge","","",42,[[["float",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::integer","",43,[[["integer",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["integer",3]]]],[11,"le","","",43,[[["integer",3]]]],[11,"gt","","",43,[[["integer",3]]]],[11,"ge","","",43,[[["integer",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::kernel::integer","",44,[[["radix",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["radix",3]]]],[11,"le","","",44,[[["radix",3]]]],[11,"gt","","",44,[[["radix",3]]]],[11,"ge","","",44,[[["radix",3]]]],[11,"partial_cmp","","",46,[[["integerstring",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["integerstring",3]]]],[11,"le","","",46,[[["integerstring",3]]]],[11,"gt","","",46,[[["integerstring",3]]]],[11,"ge","","",46,[[["integerstring",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::kernel::require","",47,[[["relativepath",3]],[["ordering",4],["option",4]]]],[11,"lt","","",47,[[["relativepath",3]]]],[11,"le","","",47,[[["relativepath",3]]]],[11,"gt","","",47,[[["relativepath",3]]]],[11,"ge","","",47,[[["relativepath",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::matchdata","",50,[[["captureat",4]],[["ordering",4],["option",4]]]],[11,"lt","","",50,[[["captureat",4]]]],[11,"le","","",50,[[["captureat",4]]]],[11,"gt","","",50,[[["captureat",4]]]],[11,"ge","","",50,[[["captureat",4]]]],[11,"partial_cmp","","",51,[[["capturematch",4]],[["ordering",4],["option",4]]]],[11,"lt","","",51,[[["capturematch",4]]]],[11,"le","","",51,[[["capturematch",4]]]],[11,"gt","","",51,[[["capturematch",4]]]],[11,"ge","","",51,[[["capturematch",4]]]],[11,"partial_cmp","artichoke_backend::extn::core::numeric","",53,[[["outcome",4]],[["ordering",4],["option",4]]]],[11,"lt","","",53,[[["outcome",4]]]],[11,"le","","",53,[[["outcome",4]]]],[11,"gt","","",53,[[["outcome",4]]]],[11,"ge","","",53,[[["outcome",4]]]],[11,"partial_cmp","","",54,[[["coercion",4]],[["ordering",4],["option",4]]]],[11,"lt","","",54,[[["coercion",4]]]],[11,"le","","",54,[[["coercion",4]]]],[11,"gt","","",54,[[["coercion",4]]]],[11,"ge","","",54,[[["coercion",4]]]],[11,"partial_cmp","artichoke_backend::extn::core::random","",57,[[["seed",4]],[["ordering",4],["option",4]]]],[11,"lt","","",57,[[["seed",4]]]],[11,"le","","",57,[[["seed",4]]]],[11,"gt","","",57,[[["seed",4]]]],[11,"ge","","",57,[[["seed",4]]]],[11,"partial_cmp","artichoke_backend::extn::core::regexp::backend","",62,[[["scan",4]],[["ordering",4],["option",4]]]],[11,"lt","","",62,[[["scan",4]]]],[11,"le","","",62,[[["scan",4]]]],[11,"gt","","",62,[[["scan",4]]]],[11,"ge","","",62,[[["scan",4]]]],[11,"partial_cmp","artichoke_backend::extn::core::regexp::enc","",64,[[["invalidencodingerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",64,[[["invalidencodingerror",3]]]],[11,"le","","",64,[[["invalidencodingerror",3]]]],[11,"gt","","",64,[[["invalidencodingerror",3]]]],[11,"ge","","",64,[[["invalidencodingerror",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::regexp::opts","",66,[[["regexpoption",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",67,[[["options",3]],[["ordering",4],["option",4]]]],[11,"lt","","",67,[[["options",3]]]],[11,"le","","",67,[[["options",3]]]],[11,"gt","","",67,[[["options",3]]]],[11,"ge","","",67,[[["options",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::regexp::pattern","",68,[[["pattern",3]],[["ordering",4],["option",4]]]],[11,"lt","","",68,[[["pattern",3]]]],[11,"le","","",68,[[["pattern",3]]]],[11,"gt","","",68,[[["pattern",3]]]],[11,"ge","","",68,[[["pattern",3]]]],[11,"partial_cmp","artichoke_backend::extn::core::regexp","",210,[[["config",3]],[["ordering",4],["option",4]]]],[11,"lt","","",210,[[["config",3]]]],[11,"le","","",210,[[["config",3]]]],[11,"gt","","",210,[[["config",3]]]],[11,"ge","","",210,[[["config",3]]]],[11,"partial_cmp","artichoke_backend::ffi","",73,[[["interpreterextracterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",73,[[["interpreterextracterror",3]]]],[11,"le","","",73,[[["interpreterextracterror",3]]]],[11,"gt","","",73,[[["interpreterextracterror",3]]]],[11,"ge","","",73,[[["interpreterextracterror",3]]]],[11,"partial_cmp","","",74,[[["convertbyteserror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",74,[[["convertbyteserror",3]]]],[11,"le","","",74,[[["convertbyteserror",3]]]],[11,"gt","","",74,[[["convertbyteserror",3]]]],[11,"ge","","",74,[[["convertbyteserror",3]]]],[11,"partial_cmp","artichoke_backend::fs::memory","",76,[[["code",3]],[["ordering",4],["option",4]]]],[11,"lt","","",76,[[["code",3]]]],[11,"le","","",76,[[["code",3]]]],[11,"gt","","",76,[[["code",3]]]],[11,"ge","","",76,[[["code",3]]]],[11,"partial_cmp","artichoke_backend::gc::arena","",80,[[["arenasavepointerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",80,[[["arenasavepointerror",3]]]],[11,"le","","",80,[[["arenasavepointerror",3]]]],[11,"gt","","",80,[[["arenasavepointerror",3]]]],[11,"ge","","",80,[[["arenasavepointerror",3]]]],[11,"partial_cmp","artichoke_backend::release_metadata","",90,[[["releasemetadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",90,[[["releasemetadata",3]]]],[11,"le","","",90,[[["releasemetadata",3]]]],[11,"gt","","",90,[[["releasemetadata",3]]]],[11,"ge","","",90,[[["releasemetadata",3]]]],[11,"partial_cmp","artichoke_backend::state::output","",92,[[["process",3]],[["ordering",4],["option",4]]]],[11,"lt","","",92,[[["process",3]]]],[11,"le","","",92,[[["process",3]]]],[11,"gt","","",92,[[["process",3]]]],[11,"ge","","",92,[[["process",3]]]],[11,"partial_cmp","","",93,[[["captured",3]],[["ordering",4],["option",4]]]],[11,"lt","","",93,[[["captured",3]]]],[11,"le","","",93,[[["captured",3]]]],[11,"gt","","",93,[[["captured",3]]]],[11,"ge","","",93,[[["captured",3]]]],[11,"partial_cmp","","",94,[[["null",3]],[["ordering",4],["option",4]]]],[11,"lt","","",94,[[["null",3]]]],[11,"le","","",94,[[["null",3]]]],[11,"gt","","",94,[[["null",3]]]],[11,"ge","","",94,[[["null",3]]]],[11,"partial_cmp","artichoke_backend::state::parser","",96,[[["context",3]],[["ordering",4],["option",4]]]],[11,"lt","","",96,[[["context",3]]]],[11,"le","","",96,[[["context",3]]]],[11,"gt","","",96,[[["context",3]]]],[11,"ge","","",96,[[["context",3]]]],[11,"partial_cmp","artichoke_backend::state::regexp","",97,[[["state",3]],[["ordering",4],["option",4]]]],[11,"lt","","",97,[[["state",3]]]],[11,"le","","",97,[[["state",3]]]],[11,"gt","","",97,[[["state",3]]]],[11,"ge","","",97,[[["state",3]]]],[11,"partial_cmp","artichoke_backend::sys","",241,[[["__bindgenbitfieldunit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",241,[[["__bindgenbitfieldunit",3]]]],[11,"le","","",241,[[["__bindgenbitfieldunit",3]]]],[11,"gt","","",241,[[["__bindgenbitfieldunit",3]]]],[11,"ge","","",241,[[["__bindgenbitfieldunit",3]]]],[11,"partial_cmp","artichoke_backend::value","",152,[[["argcounterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",152,[[["argcounterror",3]]]],[11,"le","","",152,[[["argcounterror",3]]]],[11,"gt","","",152,[[["argcounterror",3]]]],[11,"ge","","",152,[[["argcounterror",3]]]],[11,"deref","artichoke_backend::prelude","",154,[[]]],[11,"deref","artichoke_backend::convert","",156,[[]]],[11,"deref","","",156,[[]]],[11,"deref","artichoke_backend::extn::core::random","",58,[[]]],[11,"deref","artichoke_backend::gc::arena","",81,[[]]],[11,"deref_mut","artichoke_backend::prelude","",154,[[]]],[11,"deref_mut","artichoke_backend::convert","",156,[[]]],[11,"deref_mut","","",156,[[]]],[11,"deref_mut","artichoke_backend::extn::core::random","",58,[[]]],[11,"deref_mut","artichoke_backend::gc::arena","",81,[[]]],[11,"fmt","artichoke_backend::prelude","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::block","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::class","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::convert","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::def","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::error","",158,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::exception_handler","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::array::args","",39,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::array","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::artichoke","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::comparable","",162,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::enumerable","",163,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::enumerator","",164,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::env","",41,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::float","",42,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::hash","",199,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::integer","",43,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::kernel::integer","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::kernel::require","",47,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::kernel","",200,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::matchdata","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::method","",204,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::module","",205,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::numeric","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::object","",207,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::proc","",208,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::random","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::range","",209,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend::onig","",60,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend::regex::utf8","",61,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend","",62,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::enc","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::opts","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::pattern","",68,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::string","",211,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::thread","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::warning","",216,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::abbrev","",217,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::base64","",218,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::cmath","",219,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::delegate","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::forwardable","",222,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::json","",223,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::monitor","",224,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::ostruct","",225,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::set","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::shellwords","",233,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::strscan","",234,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::stdlib::uri","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::ffi","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::fs::hybrid","",75,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::fs::memory","",238,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::fs::native","",78,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::gc::arena","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::gc","",83,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::method","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::module","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::release_metadata","",90,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::state::output","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::state::parser","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::state::regexp","",97,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::state","",98,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::string","",99,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::sys","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::value","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::block","",23,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::convert","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::def","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::error","",158,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::exception_handler","",38,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::kernel::integer","",45,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend::lazy","",59,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend::onig","",60,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::backend::regex::utf8","",61,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::enc","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::extn::core::regexp::opts","",67,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::ffi","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::gc::arena","",80,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::string","",99,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_backend::value","",152,[[["formatter",3]],["result",6]]],[11,"start_bound","artichoke_backend::extn::core::matchdata","",201,[[],["bound",4]]],[11,"end_bound","","",201,[[],["bound",4]]],[11,"hash","artichoke_backend::block","",23,[[]]],[11,"hash","artichoke_backend::class","",27,[[]]],[11,"hash","artichoke_backend::convert","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","artichoke_backend::def","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","artichoke_backend::extn::core::array::args","",39,[[]]],[11,"hash","artichoke_backend::extn::core::integer","",43,[[]]],[11,"hash","artichoke_backend::extn::core::kernel::integer","",44,[[]]],[11,"hash","","",46,[[]]],[11,"hash","artichoke_backend::extn::core::kernel::require","",47,[[]]],[11,"hash","artichoke_backend::extn::core::matchdata","",201,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","artichoke_backend::extn::core::random","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","artichoke_backend::extn::core::regexp::backend","",62,[[]]],[11,"hash","artichoke_backend::extn::core::regexp::enc","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","artichoke_backend::extn::core::regexp::opts","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","artichoke_backend::extn::core::regexp::pattern","",68,[[]]],[11,"hash","artichoke_backend::extn::core::regexp","",69,[[]]],[11,"hash","","",210,[[]]],[11,"hash","artichoke_backend::ffi","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","artichoke_backend::fs::memory","",76,[[]]],[11,"hash","artichoke_backend::gc::arena","",80,[[]]],[11,"hash","artichoke_backend::gc","",83,[[]]],[11,"hash","artichoke_backend::method","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","artichoke_backend::module","",88,[[]]],[11,"hash","artichoke_backend::release_metadata","",90,[[]]],[11,"hash","artichoke_backend::state::output","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","artichoke_backend::state::parser","",96,[[]]],[11,"hash","artichoke_backend::state::regexp","",97,[[]]],[11,"hash","artichoke_backend::sys","",241,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",137,[[]]],[11,"hash","artichoke_backend::value","",152,[[]]],[11,"borrow","artichoke_backend::string","",99,[[],["error",3]]],[11,"borrow_mut","","",99,[[],["error",3]]],[11,"try_from","artichoke_backend::block","",24,[[["mrb_value",3]],["result",4]]],[11,"try_from","artichoke_backend::extn::core::kernel::integer","",46,[[],["result",4]]],[11,"try_from","artichoke_backend::value","",152,[[["vec",3],["value",3]],["result",4]]],[11,"try_from","","",152,[[["vec",3],["mrb_value",3]],["result",4]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_from","","",152,[[],["result",4]]],[11,"from_iter","artichoke_backend::extn::core::array","",40,[[]]],[11,"from_iter","","",40,[[]]],[11,"from_iter","","",40,[[]]],[11,"from_iter","","",40,[[]]],[11,"source","artichoke_backend::extn::core::kernel::integer","",45,[[],[["error",8],["option",4]]]],[11,"source","artichoke_backend::string","",99,[[],[["error",8],["option",4]]]],[11,"coerce_to_float","artichoke_backend::prelude","",153,[[],["result",4]]],[11,"funcall","artichoke_backend::value","",151,[[["option",4]],["result",4]]],[11,"freeze","","",151,[[],["result",4]]],[11,"is_frozen","","",151,[[]]],[11,"inspect","","",151,[[],["vec",3]]],[11,"is_nil","","",151,[[]]],[11,"respond_to","","",151,[[],["result",4]]],[11,"to_s","","",151,[[],["vec",3]]],[11,"ruby_type","","",151,[[],["ruby",4]]],[11,"define_global_constant","artichoke_backend::prelude","",153,[[],["result",4]]],[11,"define_class_constant","","",153,[[],["result",4]]],[11,"define_module_constant","","",153,[[],["result",4]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[["option",4]],["value",3]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[],["value",3]]],[11,"convert","","",153,[[["int",6]],["value",3]]],[11,"convert","","",153,[[["option",4],["value",3]],["value",3]]],[11,"convert","","",153,[[["int",6],["option",4]],["value",3]]],[11,"convert","","",153,[[["value",3]],[["option",4],["value",3]]]],[11,"convert","","",153,[[["integer",3]],["value",3]]],[11,"convert","","",153,[[["value",3]],["value",3]]],[11,"try_convert","","",153,[[["value",3]],["result",4]]],[11,"try_convert","","",153,[[["value",3]],[["option",4],["result",4]]]],[11,"try_convert","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert","","",153,[[["value",3]],[["int",6],["result",4]]]],[11,"try_convert","","",153,[[["value",3]],["result",4]]],[11,"try_convert","","",153,[[["value",3]],["result",4]]],[11,"try_convert","","",153,[[["value",3]],[["result",4],["fp",6]]]],[11,"try_convert","","",153,[[["value",3]],[["result",4],["option",4]]]],[11,"try_convert","","Blanket implementation that always succeeds by delegating…",153,[[],["result",4]]],[11,"try_convert","","",153,[[["value",3]],[["result",4],["float",3]]]],[11,"try_convert","","",153,[[["value",3]],[["result",4],["integer",3]]]],[11,"convert_mut","","",153,[[["vec",3]],["value",3]]],[11,"convert_mut","","",153,[[],["value",3]]],[11,"convert_mut","","",153,[[["cow",4]],["value",3]]],[11,"convert_mut","","",153,[[["fp",6]],["value",3]]],[11,"convert_mut","","",153,[[["vec",3]],["value",3]]],[11,"convert_mut","","",153,[[["vec",3],["hashmap",3]],["value",3]]],[11,"convert_mut","","",153,[[["option",4],["hashmap",3]],["value",3]]],[11,"convert_mut","","",153,[[["option",4],["vec",3]],["value",3]]],[11,"convert_mut","","",153,[[["option",4]],["value",3]]],[11,"convert_mut","","",153,[[["option",4],["string",3]],["value",3]]],[11,"convert_mut","","",153,[[["option",4]],["value",3]]],[11,"convert_mut","","",153,[[["string",3]],["value",3]]],[11,"convert_mut","","",153,[[],["value",3]]],[11,"convert_mut","","",153,[[["cow",4]],["value",3]]],[11,"convert_mut","","",153,[[["float",3]],["value",3]]],[11,"convert_mut","","",153,[[["outcome",4]],["value",3]]],[11,"convert_mut","","",153,[[["rand",4]],["value",3]]],[11,"convert_mut","","",153,[[["value",3]],["options",3]]],[11,"convert_mut","","",153,[[["rand",4]],["value",3]]],[11,"convert_mut","","",153,[[["value",3]],["value",3]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["value",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["string",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["int",6],["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["option",4]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["option",4]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["option",4],["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["vec",3],["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["vec",3],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["vec",3],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["vec",3],["result",4]]]],[11,"try_convert_mut","","",153,[[["osstring",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["osstr",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["osstr",3],["cow",4]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["vec",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],["result",4]]],[11,"try_convert_mut","","",153,[[["vec",3]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["vec",3],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["option",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["option",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["option",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["option",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["string",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],["result",4]]],[11,"try_convert_mut","","Blanket implementation that always succeeds by delegating…",153,[[],["result",4]]],[11,"try_convert_mut","","",153,[[["option",4],["value",3]],[["result",4],["option",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["integerstring",3],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["captureextract",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["capturematch",4]],[["result",4],["value",3]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["seed",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["option",4],["value",3]],[["seed",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["max",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["option",4],["value",3]],[["max",4],["result",4]]]],[11,"try_convert_mut","","",153,[[["scan",4]],[["result",4],["option",4]]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["encoding",4]]]],[11,"try_convert_mut","","",153,[[],["result",4]]],[11,"try_convert_mut","","",153,[[["value",3]],[["result",4],["max",4]]]],[11,"try_convert_mut","","",153,[[["option",4],["value",3]],[["result",4],["max",4]]]],[11,"inspect_type_name_for_value","","",153,[[]]],[11,"eval","","",153,[[],["result",4]]],[11,"eval_os_str","","",153,[[["osstr",3]],["result",4]]],[11,"eval_file","","",153,[[["path",3]],["result",4]]],[11,"set_global_variable","","",153,[[],["result",4]]],[11,"unset_global_variable","","Unset global variable pointed to by `name`.",153,[[],["result",4]]],[11,"get_global_variable","","",153,[[],[["option",4],["result",4]]]],[11,"intern_bytes","","",153,[[],["result",4]]],[11,"check_interned_bytes","","",153,[[],[["result",4],["option",4]]]],[11,"lookup_symbol","","",153,[[],[["result",4],["option",4]]]],[11,"symbol_count","","",153,[[]]],[11,"print","","Writes the given bytes to the interpreter stdout stream.",153,[[["asref",8]],["result",4]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",153,[[["asref",8]],["result",4]]],[11,"def_file_for_type","","",153,[[],["result",4]]],[11,"def_rb_source_file","","",153,[[],["result",4]]],[11,"source_is_file","","",153,[[],["result",4]]],[11,"load_source","","",153,[[],["result",4]]],[11,"require_source","","",153,[[],["result",4]]],[11,"read_source_file_contents","","",153,[[],[["cow",4],["result",4]]]],[11,"reset_parser","","",153,[[],["result",4]]],[11,"fetch_lineno","","",153,[[],["result",4]]],[11,"add_fetch_lineno","","",153,[[],["result",4]]],[11,"push_context","","",153,[[],["result",4]]],[11,"pop_context","","",153,[[],[["result",4],["option",4]]]],[11,"peek_context","","",153,[[],[["result",4],["option",4]]]],[11,"prng","","",153,[[],["result",4]]],[11,"prng_mut","","",153,[[],["result",4]]],[11,"active_regexp_globals","","",153,[[],["result",4]]],[11,"set_active_regexp_globals","","",153,[[],["result",4]]],[11,"clear_regexp","","",153,[[],["result",4]]],[11,"ruby_copyright","artichoke_backend::release_metadata","",90,[[]]],[11,"ruby_description","","",90,[[]]],[11,"ruby_engine","","",90,[[]]],[11,"ruby_engine_version","","",90,[[]]],[11,"ruby_patchlevel","","",90,[[]]],[11,"ruby_platform","","",90,[[]]],[11,"ruby_release_date","","",90,[[]]],[11,"ruby_revision","","",90,[[]]],[11,"ruby_version","","",90,[[]]],[11,"artichoke_compiler_version","","",90,[[],["option",4]]],[11,"top_self","artichoke_backend::prelude","",153,[[],["value",3]]],[11,"warn","","",153,[[],["result",4]]],[11,"class_name","","Ruby `Class` name for VM type.",19,[[]]],[11,"new","","Create a new interpreter from an underlying `mrb` and a…",153,[[["nonnull",3],["box",3],["mrb_state",3],["state",3]]]],[11,"with_ffi_boundary","","Execute a a closure by moving the [`State`] into the `mrb`…",153,[[],[["interpreterextracterror",3],["result",4]]]],[11,"into_raw","","Consume an interpreter and return the pointer to the…",153,[[]]],[11,"close","","Consume an interpreter and free all live objects.",153,[[]]],[11,"new","","Create a new guard that wraps an interpreter.",154,[[["artichoke",3]]]],[11,"interp","","Access the inner guarded interpreter.",154,[[],["artichoke",3]]],[11,"new","artichoke_backend::class","Construct a new, empty `Registry`.",155,[[]]],[11,"with_capacity","","Construct a new `Registry` with the given `capacity`.",155,[[]]],[11,"with_hasher","","Construct a new `Registry` with the given `hash_builder`.",155,[[]]],[11,"with_capacity_and_hasher","","Construct a new `Registry` with the given `capacity` and…",155,[[]]],[11,"capacity","","Returns the number of class specs the registry can hold…",155,[[]]],[11,"class_specs","","An iterator of all class specs stored in the [`Registry`]…",155,[[],["classspecs",3]]],[11,"len","","Returns the number of class specs in the registry.",155,[[]]],[11,"is_empty","","Returns true if the registry contains class specs.",155,[[]]],[11,"hasher","","Returns a reference to the registry\'s [`BuildHasher`].",155,[[]]],[11,"contains","","Returns true if the registry contains a class spec for the…",155,[[]]],[11,"insert","","Inserts a type-class spec pair into the registry.",155,[[["box",3],["spec",3]]]],[11,"get","","Returns a reference to the class spec corresponding to the…",155,[[],[["spec",3],["option",4]]]],[11,"reserve","","Reserves `capacity` for at least additional more elements…",155,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",155,[[]]],[11,"new","artichoke_backend::convert","",156,[[]]],[18,"RUBY_TYPE","","",30,null],[11,"new","","",157,[[]]],[18,"RUBY_TYPE","","",29,null],[11,"new","artichoke_backend::extn::core::exception","Construct a new, default `ArgumentError` Ruby exception.",165,[[],["argumenterror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",165,[[]]],[11,"name","","Return this Ruby exception\'s class name.",165,[[]]],[11,"new","","Construct a new, default `EncodingError` Ruby exception.",166,[[],["encodingerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",166,[[]]],[11,"name","","Return this Ruby exception\'s class name.",166,[[]]],[11,"new","","Construct a new, default `EOFError` Ruby exception.",167,[[],["eoferror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",167,[[]]],[11,"name","","Return this Ruby exception\'s class name.",167,[[]]],[11,"new","","Construct a new, default `Exception` Ruby exception.",168,[[],["exception",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",168,[[]]],[11,"name","","Return this Ruby exception\'s class name.",168,[[]]],[11,"new","","Construct a new, default `fatal` Ruby exception.",169,[[],["fatal",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",169,[[]]],[11,"name","","Return this Ruby exception\'s class name.",169,[[]]],[11,"new","","Construct a new, default `FiberError` Ruby exception.",170,[[],["fibererror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",170,[[]]],[11,"name","","Return this Ruby exception\'s class name.",170,[[]]],[11,"new","","Construct a new, default `FloatDomainError` Ruby exception.",171,[[],["floatdomainerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",171,[[]]],[11,"name","","Return this Ruby exception\'s class name.",171,[[]]],[11,"new","","Construct a new, default `FrozenError` Ruby exception.",172,[[],["frozenerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",172,[[]]],[11,"name","","Return this Ruby exception\'s class name.",172,[[]]],[11,"new","","Construct a new, default `IndexError` Ruby exception.",173,[[],["indexerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",173,[[]]],[11,"name","","Return this Ruby exception\'s class name.",173,[[]]],[11,"new","","Construct a new, default `Interrupt` Ruby exception.",174,[[],["interrupt",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",174,[[]]],[11,"name","","Return this Ruby exception\'s class name.",174,[[]]],[11,"new","","Construct a new, default `IOError` Ruby exception.",175,[[],["ioerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",175,[[]]],[11,"name","","Return this Ruby exception\'s class name.",175,[[]]],[11,"new","","Construct a new, default `KeyError` Ruby exception.",176,[[],["keyerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",176,[[]]],[11,"name","","Return this Ruby exception\'s class name.",176,[[]]],[11,"new","","Construct a new, default `LoadError` Ruby exception.",177,[[],["loaderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",177,[[]]],[11,"name","","Return this Ruby exception\'s class name.",177,[[]]],[11,"new","","Construct a new, default `LocalJumpError` Ruby exception.",178,[[],["localjumperror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",178,[[]]],[11,"name","","Return this Ruby exception\'s class name.",178,[[]]],[11,"new","","Construct a new, default `NameError` Ruby exception.",179,[[],["nameerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",179,[[]]],[11,"name","","Return this Ruby exception\'s class name.",179,[[]]],[11,"new","","Construct a new, default `NoMemoryError` Ruby exception.",180,[[],["nomemoryerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",180,[[]]],[11,"name","","Return this Ruby exception\'s class name.",180,[[]]],[11,"new","","Construct a new, default `NoMethodError` Ruby exception.",181,[[],["nomethoderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",181,[[]]],[11,"name","","Return this Ruby exception\'s class name.",181,[[]]],[11,"new","","Construct a new, default `NotImplementedError` Ruby…",182,[[],["notimplementederror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",182,[[]]],[11,"name","","Return this Ruby exception\'s class name.",182,[[]]],[11,"new","","Construct a new, default `RangeError` Ruby exception.",183,[[],["rangeerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",183,[[]]],[11,"name","","Return this Ruby exception\'s class name.",183,[[]]],[11,"new","","Construct a new, default `RegexpError` Ruby exception.",184,[[],["regexperror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",184,[[]]],[11,"name","","Return this Ruby exception\'s class name.",184,[[]]],[11,"new","","Construct a new, default `RuntimeError` Ruby exception.",185,[[],["runtimeerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",185,[[]]],[11,"name","","Return this Ruby exception\'s class name.",185,[[]]],[11,"new","","Construct a new, default `ScriptError` Ruby exception.",186,[[],["scripterror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",186,[[]]],[11,"name","","Return this Ruby exception\'s class name.",186,[[]]],[11,"new","","Construct a new, default `SecurityError` Ruby exception.",187,[[],["securityerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",187,[[]]],[11,"name","","Return this Ruby exception\'s class name.",187,[[]]],[11,"new","","Construct a new, default `SignalException` Ruby exception.",188,[[],["signalexception",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",188,[[]]],[11,"name","","Return this Ruby exception\'s class name.",188,[[]]],[11,"new","","Construct a new, default `StandardError` Ruby exception.",189,[[],["standarderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",189,[[]]],[11,"name","","Return this Ruby exception\'s class name.",189,[[]]],[11,"new","","Construct a new, default `StopIteration` Ruby exception.",190,[[],["stopiteration",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",190,[[]]],[11,"name","","Return this Ruby exception\'s class name.",190,[[]]],[11,"new","","Construct a new, default `SyntaxError` Ruby exception.",191,[[],["syntaxerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",191,[[]]],[11,"name","","Return this Ruby exception\'s class name.",191,[[]]],[11,"new","","Construct a new, default `SystemCallError` Ruby exception.",192,[[],["systemcallerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",192,[[]]],[11,"name","","Return this Ruby exception\'s class name.",192,[[]]],[11,"new","","Construct a new, default `SystemExit` Ruby exception.",193,[[],["systemexit",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",193,[[]]],[11,"name","","Return this Ruby exception\'s class name.",193,[[]]],[11,"new","","Construct a new, default `SystemStackError` Ruby exception.",194,[[],["systemstackerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",194,[[]]],[11,"name","","Return this Ruby exception\'s class name.",194,[[]]],[11,"new","","Construct a new, default `ThreadError` Ruby exception.",195,[[],["threaderror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",195,[[]]],[11,"name","","Return this Ruby exception\'s class name.",195,[[]]],[11,"new","","Construct a new, default `TypeError` Ruby exception.",196,[[],["typeerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",196,[[]]],[11,"name","","Return this Ruby exception\'s class name.",196,[[]]],[11,"new","","Construct a new, default `UncaughtThrowError` Ruby…",197,[[],["uncaughtthrowerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",197,[[]]],[11,"name","","Return this Ruby exception\'s class name.",197,[[]]],[11,"new","","Construct a new, default `ZeroDivisionError` Ruby exception.",198,[[],["zerodivisionerror",3]]],[11,"message","","Return the message this Ruby exception was constructed with.",198,[[]]],[11,"name","","Return this Ruby exception\'s class name.",198,[[]]],[11,"new","artichoke_backend::extn::core::math","Construct a new, default domain error.",202,[[],["domainerror",3]]],[11,"with_message","","Construct a new, domaine error with a message.",202,[[],["domainerror",3]]],[11,"message","","Retrieve the exception message associated with this error.",202,[[]]],[11,"new","","Constructs a new, default `Math`.",203,[[],["math",3]]],[11,"new","artichoke_backend::extn::core::symbol","Construct a new `Symbol` from the given `u32`.",212,[[],["symbol",3]]],[11,"id","","Return the `u32` identifier from this `Symbol`.",212,[[]]],[11,"is_empty","","Returns whether the symbol is the empty byteslice `b\\\"\\\"` in…",212,[[]]],[11,"len","","Returns the length of the byteslice associated with the…",212,[[]]],[11,"bytes","","Returns the interned byteslice associated with the symbol…",212,[[]]],[11,"inspect","","Returns an iterator that yields a debug representation of…",212,[[],["inspect",3]]],[11,"format_inspect_into","","Write an [`Inspect`] iterator into the given destination…",212,[[],[["error",3],["result",4]]]],[11,"write_inspect_into","","Write an [`Inspect`] iterator into the given destination…",212,[[],[["result",4],["error",3]]]],[11,"new","artichoke_backend::extn::core::time","Creates a new `Time` object for the current time with a…",215,[[],["time",3]]],[11,"now","","Creates a new `Time` object for the current time with a…",215,[[],["time",3]]],[11,"year","","Returns the year for time (including the century).",215,[[]]],[11,"month","","Returns the month of the year `1..=12` for time.",215,[[]]],[11,"day","","Returns the day of the month `1..=n` for time.",215,[[]]],[11,"succ","","Returns a new Time object, one second later than time.",215,[[],["time",3]]],[11,"year_day","","Returns an integer representing the day of the year,…",215,[[]]],[11,"hour","","Returns the hour of the day `0..=23` for time.",215,[[]]],[11,"minute","","Returns the minute of the hour `0..=59` for time.",215,[[]]],[11,"second","","Returns the second of the minute `0..=60` for time.",215,[[]]],[11,"microsecond","","Returns the number of microseconds for time.",215,[[]]],[11,"nanosecond","","Returns the number of nanoseconds for time.",215,[[]]],[11,"subsec","","Returns the fraction for time.",215,[[]]],[11,"is_dst","","Returns `true` if time occurs during Daylight Saving Time…",215,[[]]],[11,"is_utc","","Returns `true` if time represents a time in UTC (GMT).",215,[[]]],[11,"to_local","","Returns a new `Time` object representing time in local…",215,[[],["time",3]]],[11,"to_utc","","Returns a new `Time` object representing time in UTC.",215,[[],["time",3]]],[11,"timezone","","Returns the name of the time zone used for time.",215,[[],["option",4]]],[11,"weekday","","Returns an integer representing the day of the week,…",215,[[]]],[11,"is_sunday","","Returns true if time represents Sunday.",215,[[]]],[11,"is_monday","","Returns true if time represents Monday.",215,[[]]],[11,"is_tuesday","","Returns true if time represents Tuesday.",215,[[]]],[11,"is_wednesday","","Returns true if time represents Wednesday.",215,[[]]],[11,"is_thursday","","Returns true if time represents Thursday.",215,[[]]],[11,"is_friday","","Returns true if time represents Friday.",215,[[]]],[11,"is_saturday","","Returns true if time represents Saturday.",215,[[]]],[11,"to_float","","Returns the value of time as a floating point number of…",215,[[]]],[11,"to_int","","Returns the value of time as an integer number of seconds…",215,[[]]],[11,"to_a","","Serialize a `Time` into its components as a [`ToA`].",215,[[],["toa",3]]],[11,"len","artichoke_backend::extn::stdlib::securerandom::hex","Returns the number of remaining hex encoded characters in…",226,[[]]],[11,"is_empty","","Returns whether the iterator has no more remaining escape…",226,[[]]],[11,"new","artichoke_backend::extn::stdlib::securerandom","Construct a new, default argument error.",227,[[],["argumenterror",3]]],[11,"with_message","","Construct a new, argument error with a message.",227,[[],["argumenterror",3]]],[11,"message","","Retrieve the exception message associated with this…",227,[[]]],[11,"new","","Construct a new, default random bytes error.",228,[[],["domainerror",3]]],[11,"message","","Retrieve the exception message associated with this random…",228,[[]]],[11,"new","","Construct a new, default random bytes error.",229,[[],["randombyteserror",3]]],[11,"message","","Retrieve the exception message associated with this random…",229,[[]]],[11,"new","","Constructs a new, default `SecureRandom`.",230,[[],["securerandom",3]]],[11,"lookup_symbol_with_trailing_nul","artichoke_backend::prelude","",153,[[],[["error",3],["result",4],["option",4]]]],[11,"intern_bytes_with_trailing_nul","","",153,[[],[["result",4],["error",3]]]],[11,"check_interned_bytes_with_trailing_nul","","",153,[[],[["option",4],["error",3],["result",4]]]],[11,"new","artichoke_backend::module","Construct a new, empty `Registry`.",240,[[]]],[11,"with_capacity","","Construct a new `Registry` with the given `capacity`.",240,[[]]],[11,"with_hasher","","Construct a new `Registry` with the given `hash_builder`.",240,[[]]],[11,"with_capacity_and_hasher","","Construct a new `Registry` with the given `capacity` and…",240,[[]]],[11,"capacity","","Returns the number of module specs the registry can hold…",240,[[]]],[11,"module_specs","","An iterator of all module specs stored in the [`Registry`]…",240,[[],["modulespecs",3]]],[11,"len","","Returns the number of module specs in the registry.",240,[[]]],[11,"is_empty","","Returns true if the registry contains module specs.",240,[[]]],[11,"hasher","","Returns a reference to the registry\'s [`BuildHasher`].",240,[[]]],[11,"contains","","Returns true if the registry contains a module spec for…",240,[[]]],[11,"insert","","Inserts a type-module spec pair into the registry.",240,[[["box",3],["spec",3]]]],[11,"get","","Returns a reference to the module spec corresponding to…",240,[[],[["option",4],["spec",3]]]],[11,"reserve","","Reserves `capacity` for at least additional more elements…",240,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",240,[[]]],[11,"new","artichoke_backend::sys","",241,[[]]],[11,"get_bit","","",241,[[]]],[11,"set_bit","","",241,[[]]],[11,"get","","",241,[[]]],[11,"set","","",241,[[]]],[11,"new","","",242,[[]]],[11,"as_ptr","","",242,[[]]],[11,"as_mut_ptr","","",242,[[]]],[11,"as_slice","","",242,[[]]],[11,"as_mut_slice","","",242,[[]]],[11,"tt","","",101,[[],["mrb_vtype",4]]],[11,"set_tt","","",101,[[["mrb_vtype",4]]]],[11,"color","","",101,[[]]],[11,"set_color","","",101,[[]]],[11,"flags","","",101,[[]]],[11,"set_flags","","",101,[[]]],[11,"new_bitfield_1","","",101,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",102,[[],["mrb_vtype",4]]],[11,"set_tt","","",102,[[["mrb_vtype",4]]]],[11,"color","","",102,[[]]],[11,"set_color","","",102,[[]]],[11,"flags","","",102,[[]]],[11,"set_flags","","",102,[[]]],[11,"new_bitfield_1","","",102,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",103,[[],["mrb_vtype",4]]],[11,"set_tt","","",103,[[["mrb_vtype",4]]]],[11,"color","","",103,[[]]],[11,"set_color","","",103,[[]]],[11,"flags","","",103,[[]]],[11,"set_flags","","",103,[[]]],[11,"new_bitfield_1","","",103,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"old","","",106,[[],["mrb_bool",6]]],[11,"set_old","","",106,[[["mrb_bool",6]]]],[11,"new_bitfield_1","","",106,[[["mrb_bool",6]],["__bindgenbitfieldunit",3]]],[11,"iterating","","",107,[[],["mrb_bool",6]]],[11,"set_iterating","","",107,[[["mrb_bool",6]]]],[11,"disabled","","",107,[[],["mrb_bool",6]]],[11,"set_disabled","","",107,[[["mrb_bool",6]]]],[11,"full","","",107,[[],["mrb_bool",6]]],[11,"set_full","","",107,[[["mrb_bool",6]]]],[11,"generational","","",107,[[],["mrb_bool",6]]],[11,"set_generational","","",107,[[["mrb_bool",6]]]],[11,"out_of_memory","","",107,[[],["mrb_bool",6]]],[11,"set_out_of_memory","","",107,[[["mrb_bool",6]]]],[11,"new_bitfield_1","","",107,[[["mrb_bool",6]],["__bindgenbitfieldunit",3]]],[11,"tt","","",113,[[],["mrb_vtype",4]]],[11,"set_tt","","",113,[[["mrb_vtype",4]]]],[11,"color","","",113,[[]]],[11,"set_color","","",113,[[]]],[11,"flags","","",113,[[]]],[11,"set_flags","","",113,[[]]],[11,"new_bitfield_1","","",113,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",117,[[],["mrb_vtype",4]]],[11,"set_tt","","",117,[[["mrb_vtype",4]]]],[11,"color","","",117,[[]]],[11,"set_color","","",117,[[]]],[11,"flags","","",117,[[]]],[11,"set_flags","","",117,[[]]],[11,"new_bitfield_1","","",117,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"capture_errors","","",118,[[],["mrb_bool",6]]],[11,"set_capture_errors","","",118,[[["mrb_bool",6]]]],[11,"dump_result","","",118,[[],["mrb_bool",6]]],[11,"set_dump_result","","",118,[[["mrb_bool",6]]]],[11,"no_exec","","",118,[[],["mrb_bool",6]]],[11,"set_no_exec","","",118,[[["mrb_bool",6]]]],[11,"keep_lv","","",118,[[],["mrb_bool",6]]],[11,"set_keep_lv","","",118,[[["mrb_bool",6]]]],[11,"no_optimize","","",118,[[],["mrb_bool",6]]],[11,"set_no_optimize","","",118,[[["mrb_bool",6]]]],[11,"on_eval","","",118,[[],["mrb_bool",6]]],[11,"set_on_eval","","",118,[[["mrb_bool",6]]]],[11,"new_bitfield_1","","",118,[[["mrb_bool",6]],["__bindgenbitfieldunit",3]]],[11,"allow_indent","","",122,[[],["mrb_bool",6]]],[11,"set_allow_indent","","",122,[[["mrb_bool",6]]]],[11,"line_head","","",122,[[],["mrb_bool",6]]],[11,"set_line_head","","",122,[[["mrb_bool",6]]]],[11,"new_bitfield_1","","",122,[[["mrb_bool",6]],["__bindgenbitfieldunit",3]]],[11,"cmd_start","","",123,[[],["mrb_bool",6]]],[11,"set_cmd_start","","",123,[[["mrb_bool",6]]]],[11,"new_bitfield_1","","",123,[[["mrb_bool",6]],["__bindgenbitfieldunit",3]]],[11,"no_optimize","","",123,[[],["mrb_bool",6]]],[11,"set_no_optimize","","",123,[[["mrb_bool",6]]]],[11,"on_eval","","",123,[[],["mrb_bool",6]]],[11,"set_on_eval","","",123,[[["mrb_bool",6]]]],[11,"capture_errors","","",123,[[],["mrb_bool",6]]],[11,"set_capture_errors","","",123,[[["mrb_bool",6]]]],[11,"new_bitfield_2","","",123,[[["mrb_bool",6]],["__bindgenbitfieldunit",3]]],[11,"tt","","",125,[[],["mrb_vtype",4]]],[11,"set_tt","","",125,[[["mrb_vtype",4]]]],[11,"color","","",125,[[]]],[11,"set_color","","",125,[[]]],[11,"flags","","",125,[[]]],[11,"set_flags","","",125,[[]]],[11,"new_bitfield_1","","",125,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",129,[[],["mrb_vtype",4]]],[11,"set_tt","","",129,[[["mrb_vtype",4]]]],[11,"color","","",129,[[]]],[11,"set_color","","",129,[[]]],[11,"flags","","",129,[[]]],[11,"set_flags","","",129,[[]]],[11,"new_bitfield_1","","",129,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",130,[[],["mrb_vtype",4]]],[11,"set_tt","","",130,[[["mrb_vtype",4]]]],[11,"color","","",130,[[]]],[11,"set_color","","",130,[[]]],[11,"flags","","",130,[[]]],[11,"set_flags","","",130,[[]]],[11,"new_bitfield_1","","",130,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",131,[[],["mrb_vtype",4]]],[11,"set_tt","","",131,[[["mrb_vtype",4]]]],[11,"color","","",131,[[]]],[11,"set_color","","",131,[[]]],[11,"flags","","",131,[[]]],[11,"set_flags","","",131,[[]]],[11,"new_bitfield_1","","",131,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",136,[[],["mrb_vtype",4]]],[11,"set_tt","","",136,[[["mrb_vtype",4]]]],[11,"color","","",136,[[]]],[11,"set_color","","",136,[[]]],[11,"flags","","",136,[[]]],[11,"set_flags","","",136,[[]]],[11,"new_bitfield_1","","",136,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]],[11,"tt","","",138,[[],["mrb_vtype",4]]],[11,"set_tt","","",138,[[["mrb_vtype",4]]]],[11,"color","","",138,[[]]],[11,"set_color","","",138,[[]]],[11,"flags","","",138,[[]]],[11,"set_flags","","",138,[[]]],[11,"new_bitfield_1","","",138,[[["mrb_vtype",4]],["__bindgenbitfieldunit",3]]]],"p":[[8,"CoerceToNumeric"],[8,"DefineConstant"],[8,"Convert"],[8,"ConvertMut"],[8,"TryConvert"],[8,"TryConvertMut"],[8,"Debug"],[8,"Eval"],[8,"File"],[8,"Globals"],[8,"Intern"],[8,"Io"],[8,"LoadSources"],[4,"IncrementLinenoError"],[8,"Parser"],[8,"Prng"],[8,"Regexp"],[8,"ReleaseMetadata"],[8,"TopSelf"],[4,"Ruby"],[4,"Rust"],[8,"Value"],[8,"Warn"],[3,"NoBlockGiven"],[3,"Block"],[3,"Builder"],[3,"Rclass"],[3,"Spec"],[8,"ClassRegistry"],[8,"BoxUnboxVmValue"],[8,"HeapAllocatedData"],[3,"UnboxRubyError"],[3,"BoxIntoRubyError"],[4,"EnclosingRubyScope"],[3,"ConstantNameError"],[4,"NotDefinedError"],[8,"RubyException"],[3,"Builder"],[3,"CaughtException"],[4,"ElementReference"],[3,"Array"],[3,"Environ"],[3,"Float"],[3,"Integer"],[3,"Radix"],[4,"Utf8Error"],[3,"IntegerString"],[3,"RelativePath"],[4,"Capture"],[4,"CaptureExtract"],[4,"CaptureAt"],[4,"CaptureMatch"],[3,"MatchData"],[4,"Outcome"],[4,"Coercion"],[4,"Max"],[4,"Rand"],[4,"Seed"],[3,"Random"],[3,"Lazy"],[3,"Onig"],[3,"Utf8"],[4,"Scan"],[8,"RegexpType"],[3,"InvalidEncodingError"],[4,"Encoding"],[4,"RegexpOption"],[3,"Options"],[3,"Pattern"],[3,"Regexp"],[4,"SecureRandomError"],[4,"Max"],[4,"Rand"],[3,"InterpreterExtractError"],[3,"ConvertBytesError"],[3,"Hybrid"],[3,"Code"],[3,"Memory"],[3,"Native"],[8,"Filesystem"],[3,"ArenaSavepointError"],[3,"ArenaIndex"],[8,"MrbGarbageCollection"],[4,"State"],[4,"Type"],[3,"Spec"],[3,"Builder"],[3,"Rclass"],[3,"Spec"],[8,"ModuleRegistry"],[3,"ReleaseMetadata"],[8,"Output"],[3,"Process"],[3,"Captured"],[3,"Null"],[3,"State"],[3,"Context"],[3,"State"],[3,"State"],[3,"WriteError"],[4,"mrb_vtype"],[3,"RBasic"],[3,"RObject"],[3,"RFiber"],[19,"mrb_value_union"],[3,"mrb_value"],[3,"mrb_heap_page"],[3,"mrb_gc"],[3,"mrb_callinfo"],[3,"mrb_context"],[3,"mrb_state"],[3,"mrb_kwargs"],[3,"mrb_shared_array"],[3,"RArray"],[19,"RArray__bindgen_ty_1"],[3,"RArray__bindgen_ty_1__bindgen_ty_1"],[19,"RArray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[3,"RClass"],[3,"mrbc_context"],[3,"mrb_ast_node"],[4,"mrb_lex_state_enum"],[3,"mrb_parser_message"],[3,"mrb_parser_heredoc_info"],[3,"mrb_parser_state"],[3,"mrb_data_type"],[3,"RData"],[3,"mrb_locals"],[3,"mrb_irep"],[3,"mrb_insn_data"],[3,"RHash"],[3,"REnv"],[3,"RProc"],[19,"RProc__bindgen_ty_1"],[19,"RProc__bindgen_ty_2"],[3,"kh_mt"],[3,"mrb_range_edges"],[3,"RRange"],[4,"mrb_range_beg_len"],[3,"RString"],[19,"RString__bindgen_ty_1"],[3,"RString__bindgen_ty_1__bindgen_ty_1"],[19,"RString__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[3,"__sigset_t"],[3,"__jmp_buf_tag"],[3,"mrb_jmpbuf"],[3,"__va_list_tag"],[3,"iv_tbl"],[3,"symbol_name"],[3,"mrb_irep_debug_info"],[3,"htable"],[3,"mrb_shared_string"],[3,"Value"],[3,"ArgCountError"],[3,"Artichoke"],[3,"Guard"],[3,"Registry"],[3,"UnboxedValueGuard"],[3,"Immediate"],[3,"Error"],[3,"Iter"],[3,"Artichoke"],[3,"Kernel"],[3,"Comparable"],[3,"Enumerable"],[3,"Enumerator"],[3,"ArgumentError"],[3,"EncodingError"],[3,"EOFError"],[3,"Exception"],[3,"Fatal"],[3,"FiberError"],[3,"FloatDomainError"],[3,"FrozenError"],[3,"IndexError"],[3,"Interrupt"],[3,"IOError"],[3,"KeyError"],[3,"LoadError"],[3,"LocalJumpError"],[3,"NameError"],[3,"NoMemoryError"],[3,"NoMethodError"],[3,"NotImplementedError"],[3,"RangeError"],[3,"RegexpError"],[3,"RuntimeError"],[3,"ScriptError"],[3,"SecurityError"],[3,"SignalException"],[3,"StandardError"],[3,"StopIteration"],[3,"SyntaxError"],[3,"SystemCallError"],[3,"SystemExit"],[3,"SystemStackError"],[3,"ThreadError"],[3,"TypeError"],[3,"UncaughtThrowError"],[3,"ZeroDivisionError"],[3,"Hash"],[3,"Kernel"],[3,"Region"],[3,"DomainError"],[3,"Math"],[3,"Method"],[3,"Module"],[3,"Numeric"],[3,"Object"],[3,"Proc"],[3,"Range"],[3,"Config"],[3,"String"],[3,"Symbol"],[3,"Thread"],[3,"Mutex"],[3,"Time"],[3,"Warning"],[3,"Abbrev"],[3,"Base64"],[3,"CMath"],[3,"Delegator"],[3,"SimpleDelegator"],[3,"Forwardable"],[3,"Json"],[3,"Monitor"],[3,"OpenStruct"],[3,"Hex"],[3,"ArgumentError"],[3,"DomainError"],[3,"RandomBytesError"],[3,"SecureRandom"],[3,"Set"],[3,"SortedSet"],[3,"Shellwords"],[3,"StringScanner"],[3,"IpSocket"],[3,"IpAddr"],[3,"Uri"],[3,"Extension"],[3,"Entry"],[3,"Registry"],[3,"__BindgenBitfieldUnit"],[3,"__IncompleteArrayField"],[3,"mrb_pool"],[6,"Fp"],[6,"Int"]]},\
"artichoke_core":{"doc":"This crate provides a set of traits that, when…","i":[[0,"coerce_to_numeric","artichoke_core","Coerce Ruby values to native numerics.",null,null],[8,"CoerceToNumeric","artichoke_core::coerce_to_numeric","Coerce Ruby values to native numerics (floats and integers).",null,null],[16,"Value","","Concrete type of boxed Ruby value as inputs to coerce…",0,null],[16,"Float","","Concrete float type to coerce values into, e.g. [`f64`].",0,null],[16,"Error","","Concrete error type for errors encountered when coercing…",0,null],[10,"coerce_to_float","","Coerce the given Ruby value to a `Float`.",0,[[],["result",4]]],[0,"constant","artichoke_core","Define constants on an interpreter.",null,null],[8,"DefineConstant","artichoke_core::constant","Deifne constants on an interprter.",null,null],[16,"Value","","Concrete type for Ruby values.",1,null],[16,"Error","","Concrete error type for fallible operations.",1,null],[10,"define_global_constant","","Define a global constant.",1,[[],["result",4]]],[10,"define_class_constant","","Define a class constant.",1,[[],["result",4]]],[10,"define_module_constant","","Define a module constant.",1,[[],["result",4]]],[0,"convert","artichoke_core","Convert between Rust and Ruby objects.",null,null],[8,"Convert","artichoke_core::convert","Infallible conversion between two types.",null,null],[10,"convert","","Performs the infallible conversion.",2,[[]]],[8,"TryConvert","","Fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",3,null],[10,"try_convert","","Performs the fallible conversion.",3,[[],["result",4]]],[8,"ConvertMut","","Mutable infallible conversion between two types.",null,null],[10,"convert_mut","","Performs the infallible conversion.",4,[[]]],[8,"TryConvertMut","","Mutable fallible conversions between two types.",null,null],[16,"Error","","Error type for failed conversions.",5,null],[10,"try_convert_mut","","Performs the fallible conversion.",5,[[],["result",4]]],[0,"debug","artichoke_core","Routines for debugging and printing exception messages.",null,null],[8,"Debug","artichoke_core::debug","Debugging and `Exception` message support.",null,null],[16,"Value","","Concrete type for return values from eval.",6,null],[10,"inspect_type_name_for_value","","Return a name for thie given value\'s type suitable for…",6,[[]]],[0,"eval","artichoke_core","Run code on an Artichoke interpreter.",null,null],[8,"Eval","artichoke_core::eval","Execute code and retrieve its result.",null,null],[16,"Value","","Concrete type for return values from eval.",7,null],[16,"Error","","Concrete error type for eval functions.",7,null],[10,"eval","","Eval code on the Artichoke interpreter using the current…",7,[[],["result",4]]],[10,"eval_os_str","","Eval code on the Artichoke interpreter using the current…",7,[[["osstr",3]],["result",4]]],[10,"eval_file","","Eval code on the Artichoke interpreter using a new file…",7,[[["path",3]],["result",4]]],[0,"file","artichoke_core","File-backed Rust extensions for the Artichoke VM.",null,null],[8,"File","artichoke_core::file","Rust extension hook that can be required.",null,null],[16,"Artichoke","","Concrete type for interpreter.",8,null],[16,"Error","","Concrete error type for eval functions.",8,null],[10,"require","","Called when the filename mapped to this type is required…",8,[[],["result",4]]],[0,"globals","artichoke_core","Get and set global variables on an interpreter.",null,null],[8,"Globals","artichoke_core::globals","Get and set global variables on an interpreter.",null,null],[16,"Value","","Concrete value type for global variables.",9,null],[16,"Error","","Concrete error type for failures manipulating global…",9,null],[10,"set_global_variable","","Set global variable pointed to by `name` to the given Ruby…",9,[[],["result",4]]],[10,"unset_global_variable","","Unset global variable pointed to by `name`.",9,[[],["result",4]]],[10,"get_global_variable","","Get the Ruby value stored in the global variable pointed…",9,[[],[["result",4],["option",4]]]],[0,"intern","artichoke_core","Intern `Symbol`s on an interpreter.",null,null],[8,"Intern","artichoke_core::intern","Store and retrieve bytestrings that have the same lifetime…",null,null],[16,"Symbol","","Concrete type for symbol identifiers.",10,null],[16,"Error","","Concrete type for errors returned while interning symbols.",10,null],[18,"SYMBOL_RANGE_START","","The initial `Symbol` index returned by the interner.",10,null],[10,"intern_bytes","","Store an immutable bytestring for the life of the…",10,[[],["result",4]]],[10,"check_interned_bytes","","Check if a bytestring is already interned and return its…",10,[[],[["result",4],["option",4]]]],[11,"intern_string","","Store an immutable string for the life of the interpreter.",10,[[],["result",4]]],[11,"check_interned_string","","Check if a string is already interned and return its…",10,[[],[["result",4],["option",4]]]],[10,"lookup_symbol","","Retrieve the original byte content of an interned…",10,[[],[["result",4],["option",4]]]],[10,"symbol_count","","Retrieve the number of unique strings interned.",10,[[]]],[0,"io","artichoke_core","I/O read and write APIs.",null,null],[8,"Io","artichoke_core::io","Make I/O external to the interpreter.",null,null],[16,"Error","","Concrete error type for errors encountered when reading…",11,null],[10,"print","","Writes the given bytes to the interpreter stdout stream.",11,[[["asref",8]],["result",4]]],[11,"puts","","Writes the given bytes to the interpreter stdout stream…",11,[[["asref",8]],["result",4]]],[0,"load","artichoke_core","Load Ruby and Rust sources into the VM.",null,null],[8,"LoadSources","artichoke_core::load","Load Ruby sources and Rust extensions into an interpreter.",null,null],[16,"Artichoke","","Concrete type for interpreter.",12,null],[16,"Error","","Concrete type for errors returned from filesystem IO.",12,null],[16,"Exception","","Concrete type for errors returned by `File::require`.",12,null],[10,"def_file_for_type","","Add a Rust extension hook to the virtual filesystem. A…",12,[[],["result",4]]],[10,"def_rb_source_file","","Add a Ruby source to the virtual filesystem.",12,[[],["result",4]]],[10,"source_is_file","","Test for a source file at a path.",12,[[],["result",4]]],[10,"load_source","","Load source located at the given path.",12,[[],["result",4]]],[10,"require_source","","Require source located at the given path.",12,[[],["result",4]]],[10,"read_source_file_contents","","Retrieve file contents for a source file.",12,[[],[["result",4],["cow",4]]]],[0,"parser","artichoke_core","Parse code on an Artichoke interpreter.",null,null],[8,"Parser","artichoke_core::parser","Manage parser state, active filename context, and line…",null,null],[16,"Context","","Concrete type for parser context.",13,null],[16,"Error","","Error type for Parser APIs.",13,null],[10,"reset_parser","","Reset parser state to initial values.",13,[[],["result",4]]],[10,"fetch_lineno","","Fetch the current line number from the parser state.",13,[[],["result",4]]],[10,"add_fetch_lineno","","Increment line number and return the new value.",13,[[],["result",4]]],[10,"push_context","","Set the currently active context by modifying the parser…",13,[[],["result",4]]],[10,"pop_context","","Remove the current active context and return it.",13,[[],[["result",4],["option",4]]]],[10,"peek_context","","Return a reference to the currently active context.",13,[[],[["option",4],["result",4]]]],[4,"IncrementLinenoError","","Errors encountered when incrementing line numbers on…",null,null],[13,"Overflow","","An overflow occurred when incrementing the line number.",14,null],[0,"prng","artichoke_core","Interpreter global psuedorandom number generator.",null,null],[8,"Prng","artichoke_core::prng","Interpreter global psuedorandom number generator.",null,null],[16,"Error","","Concrete type for PRNG errors.",15,null],[16,"Prng","","Conrete type for the interpreter psuedorandom number…",15,null],[10,"prng","","Return a shared reference to the interpreter psuedorandom…",15,[[],["result",4]]],[10,"prng_mut","","Return a mutable reference to the interpreter psuedorandom…",15,[[],["result",4]]],[0,"regexp","artichoke_core","Track `Regexp` global state.",null,null],[8,"Regexp","artichoke_core::regexp","Track the state of `Regexp` globals and global interpreter…",null,null],[16,"Error","","Concrete error type for errors encountered when…",16,null],[10,"active_regexp_globals","","Retrieve the current number of set `Regexp` global…",16,[[],["result",4]]],[10,"set_active_regexp_globals","","Set the current number of set `Regexp` global variables.",16,[[],["result",4]]],[10,"clear_regexp","","Clear all `Regexp` state.",16,[[],["result",4]]],[0,"release_metadata","artichoke_core","Information about an Artichoke build.",null,null],[8,"ReleaseMetadata","artichoke_core::release_metadata","Information about an Artichoke build.",null,null],[10,"ruby_copyright","","Copyright information.",17,[[]]],[10,"ruby_description","","A description of the current build.",17,[[]]],[10,"ruby_engine","","The engine, or VM, used in the current build.",17,[[]]],[10,"ruby_engine_version","","The version of the engine, or VM, used in the current build.",17,[[]]],[10,"ruby_patchlevel","","The patch level the current build.",17,[[]]],[10,"ruby_platform","","The target triple of the platform this build targets.",17,[[]]],[10,"ruby_release_date","","The build date of this release.",17,[[]]],[10,"ruby_revision","","The revision count of the Artichoke git repo used for this…",17,[[]]],[10,"ruby_version","","The target MRI Ruby version for this build.",17,[[]]],[10,"artichoke_compiler_version","","A description of the compiler used to build Artichoke.",17,[[],["option",4]]],[0,"top_self","artichoke_core","Expose the global context, called top self, to the…",null,null],[8,"TopSelf","artichoke_core::top_self","Return a `Value`-wrapped reference to top self.",null,null],[16,"Value","","Concrete [`Value`] type.",18,null],[10,"top_self","","Return a [`Value`]-wrapped reference to \\\"top self\\\".",18,[[]]],[0,"types","artichoke_core","Ruby and Rust type mappings.",null,null],[4,"Rust","artichoke_core::types","Classes of Rust types.",null,null],[13,"Bool","","Rust `bool` type.",19,null],[13,"Bytes","","Rust `Vec<u8>` type.",19,null],[13,"Float","","Rust float type.",19,null],[13,"Map","","Rust `HashMap<K, V>` type.",19,null],[13,"Object","","Aribtrary Rust struct type.",19,null],[13,"SignedInt","","Rust signed integer type.",19,null],[13,"String","","Rust `String` type.",19,null],[13,"UnsignedInt","","Rust unsigned integer type.",19,null],[13,"Vec","","Rust `Vec<T>` type.",19,null],[4,"Ruby","","Classes of Ruby types.",null,null],[13,"Array","","Ruby `Array` type.",20,null],[13,"Bool","","Ruby `TrueClass` and `FalseClass` type.",20,null],[13,"Class","","Ruby `Class` type.",20,null],[13,"CPointer","","FFI type for a borrowed C pointer.",20,null],[13,"Data","","FFI type for an owned C pointer.",20,null],[13,"Exception","","Ruby `Exception` type.",20,null],[13,"Fiber","","Ruby `Fiber` type.",20,null],[13,"Fixnum","","Ruby `Fixnum` type.",20,null],[13,"Float","","Ruby `Float` type.",20,null],[13,"Hash","","Ruby `Hash` type.",20,null],[13,"InlineStruct","","Internal type for non-heap allocated structs.",20,null],[13,"Module","","Ruby `Module` type.",20,null],[13,"Nil","","Ruby `nil` singleton type, the only instance of `NilClass`.",20,null],[13,"Object","","Ruby `Object` type.",20,null],[13,"Proc","","Ruby `Proc` type.",20,null],[13,"Range","","Ruby `Range` type.",20,null],[13,"SingletonClass","","Internal type for the singleton class of an object.",20,null],[13,"String","","Ruby `String` type.",20,null],[13,"Symbol","","Ruby `Symbol` type.",20,null],[13,"Unreachable","","Unreachable interpreter value. Receiving one of these from…",20,null],[13,"RecursiveSelfOwnership","","A special `Value` that is a placeholder for collections…",20,null],[11,"class_name","","Ruby `Class` name for VM type.",20,[[]]],[0,"value","artichoke_core","Types that implement `Value` can be represented in the…",null,null],[8,"Value","artichoke_core::value","A boxed Ruby value owned by the interpreter.",null,null],[16,"Artichoke","","Concrete type for Artichoke interpreter.",21,null],[16,"Arg","","Concrete type for arguments passed to `funcall`.",21,null],[16,"Value","","Concrete type for results from `funcall`.",21,null],[16,"Block","","Concrete type for blocks passed to `funcall`.",21,null],[16,"Error","","Concrete error type for funcall errors.",21,null],[10,"funcall","","Call a method on this [`Value`] with arguments and an…",21,[[["option",4]],["result",4]]],[11,"try_into","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[11,"try_into_mut","","Consume `self` and try to convert `self` to type `T` using…",21,[[],["result",4]]],[10,"freeze","","Call `#freeze` on this [`Value`].",21,[[],["result",4]]],[10,"is_frozen","","Call `#frozen?` on this [`Value`].",21,[[]]],[10,"is_nil","","Whether `self` is `nil`",21,[[]]],[10,"respond_to","","Whether `self` responds to a method.",21,[[],["result",4]]],[10,"inspect","","Call `#inspect` on this [`Value`].",21,[[],["vec",3]]],[10,"to_s","","Call `#to_s` on this [`Value`].",21,[[],["vec",3]]],[10,"ruby_type","","Return this values Rust-mapped type tag.",21,[[],["ruby",4]]],[0,"warn","artichoke_core","Emit warnings during interpreter execution.",null,null],[8,"Warn","artichoke_core::warn","Emit warnings during interpreter execution to stderr.",null,null],[16,"Error","","Concrete error type for errors encountered when outputting…",22,null],[10,"warn","","Emit a warning message using `Warning#warn`.",22,[[],["result",4]]],[0,"prelude","artichoke_core","A \\\"prelude\\\" for users of the `artichoke-core` crate.",null,null],[11,"from","artichoke_core::parser","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","artichoke_core::types","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"clone","artichoke_core::parser","",14,[[],["incrementlinenoerror",4]]],[11,"clone","artichoke_core::types","",19,[[],["rust",4]]],[11,"clone","","",20,[[],["ruby",4]]],[11,"cmp","artichoke_core::parser","",14,[[["incrementlinenoerror",4]],["ordering",4]]],[11,"cmp","artichoke_core::types","",19,[[["rust",4]],["ordering",4]]],[11,"cmp","","",20,[[["ruby",4]],["ordering",4]]],[11,"eq","artichoke_core::parser","",14,[[["incrementlinenoerror",4]]]],[11,"ne","","",14,[[["incrementlinenoerror",4]]]],[11,"eq","artichoke_core::types","",19,[[["rust",4]]]],[11,"eq","","",20,[[["ruby",4]]]],[11,"partial_cmp","artichoke_core::parser","",14,[[["incrementlinenoerror",4]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["incrementlinenoerror",4]]]],[11,"le","","",14,[[["incrementlinenoerror",4]]]],[11,"gt","","",14,[[["incrementlinenoerror",4]]]],[11,"ge","","",14,[[["incrementlinenoerror",4]]]],[11,"partial_cmp","artichoke_core::types","",19,[[["rust",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["ruby",4]],[["ordering",4],["option",4]]]],[11,"fmt","artichoke_core::parser","",14,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_core::types","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_core::parser","",14,[[["formatter",3]],["result",6]]],[11,"fmt","artichoke_core::types","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"hash","artichoke_core::parser","",14,[[]]],[11,"hash","artichoke_core::types","",19,[[]]],[11,"hash","","",20,[[]]]],"p":[[8,"CoerceToNumeric"],[8,"DefineConstant"],[8,"Convert"],[8,"TryConvert"],[8,"ConvertMut"],[8,"TryConvertMut"],[8,"Debug"],[8,"Eval"],[8,"File"],[8,"Globals"],[8,"Intern"],[8,"Io"],[8,"LoadSources"],[8,"Parser"],[4,"IncrementLinenoError"],[8,"Prng"],[8,"Regexp"],[8,"ReleaseMetadata"],[8,"TopSelf"],[4,"Rust"],[4,"Ruby"],[8,"Value"],[8,"Warn"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"base64":{"doc":"ConfigsThere isn\'t just one type of Base64; that would be…","i":[[0,"display","base64","Enables base64\'d output anywhere you might use a `Display`…",null,null],[3,"Base64Display","base64::display","A convenience wrapper for base64\'ing bytes into a format…",null,null],[11,"with_config","","Create a `Base64Display` with the provided config.",0,[[["config",3]],["base64display",3]]],[0,"read","base64","Implementations of `io::Read` to transparently decode…",null,null],[3,"DecoderReader","base64::read","A `Read` implementation that decodes base64 data read from…",null,null],[0,"write","base64","Implementations of `io::Write` to transparently handle…",null,null],[3,"EncoderWriter","base64::write","A `Write` implementation that base64 encodes data before…",null,null],[3,"EncoderStringWriter","","A `Write` implementation that base64-encodes data using…",null,null],[5,"encode_config_slice","base64","Encode arbitrary octets as base64. Writes into the…",null,[[["asref",8],["config",3]]]],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",null,[[["asref",8]],["string",3]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,[[["asref",8],["config",3]],["string",3]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",null,[[["asref",8],["string",3],["config",3]]]],[5,"decode","","Decode from string reference as octets. Returns a Result…",null,[[["asref",8]],[["decodeerror",4],["vec",3],["result",4]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",null,[[["asref",8],["config",3]],[["decodeerror",4],["vec",3],["result",4]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",null,[[["asref",8],["vec",3],["config",3]],[["decodeerror",4],["result",4]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",null,[[["asref",8],["config",3]],[["result",4],["decodeerror",4]]]],[4,"DecodeError","","Errors that can occur while decoding.",null,null],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",1,null],[13,"InvalidLength","","The length of the input is invalid. A typical cause of…",1,null],[13,"InvalidLastSymbol","","The last non-padding input symbol\'s encoded 6 bits have…",1,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`).",2,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`).",2,null],[13,"Crypt","","The `crypt(3)` character set (uses…",2,null],[13,"Bcrypt","","The bcrypt character set (uses…",2,null],[13,"ImapMutf7","","The character set used in IMAP-modified UTF-7 (uses `+`…",2,null],[13,"BinHex","","The character set used in BinHex 4.0 files.",2,null],[3,"Config","","Contains configuration parameters for base64 encoding",null,null],[11,"new","","Create a new `Config`.",3,[[["characterset",4]],["config",3]]],[11,"pad","","Sets whether to pad output with `=` characters.",3,[[],["config",3]]],[11,"decode_allow_trailing_bits","","Sets whether to emit errors for nonzero trailing bits.",3,[[],["config",3]]],[17,"STANDARD","","Standard character set with padding.",null,null],[17,"STANDARD_NO_PAD","","Standard character set without padding.",null,null],[17,"URL_SAFE","","URL-safe character set with padding",null,null],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",null,null],[17,"CRYPT","","As per `crypt(3)` requirements",null,null],[17,"BCRYPT","","Bcrypt character set",null,null],[17,"IMAP_MUTF7","","IMAP modified UTF-7 requirements",null,null],[17,"BINHEX","","BinHex character set",null,null],[11,"from","base64::display","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","base64::read","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","base64::write","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","base64","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","base64::write","",5,[[]]],[11,"clone","base64","",1,[[],["decodeerror",4]]],[11,"clone","","",2,[[],["characterset",4]]],[11,"clone","","",3,[[],["config",3]]],[11,"eq","","",1,[[["decodeerror",4]]]],[11,"ne","","",1,[[["decodeerror",4]]]],[11,"fmt","base64::read","",4,[[["formatter",3]],["result",6]]],[11,"fmt","base64::write","",5,[[["formatter",3]],["result",6]]],[11,"fmt","base64","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","base64::display","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","base64","",1,[[["formatter",3]],["result",6]]],[11,"description","","",1,[[]]],[11,"cause","","",1,[[],[["option",4],["error",8]]]],[11,"read","base64::read","Decode input from the wrapped reader.",4,[[],["result",6]]],[11,"write","base64::write","Encode input and then write to the delegate writer.",5,[[],["result",6]]],[11,"flush","","Because this is usually treated as OK to call multiple…",5,[[],["result",6]]],[11,"write","","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]],[11,"new","base64::read","Create a new decoder that will read from the provided…",4,[[["config",3]]]],[11,"new","base64::write","Create a new encoder that will write to the provided…",5,[[["config",3]],["encoderwriter",3]]],[11,"finish","","Encode all remaining buffered data and write it, including…",5,[[],["result",6]]],[11,"from","","Create a EncoderStringWriter that will append to the…",6,[[["config",3]]]],[11,"into_inner","","Encode all remaining buffered data, including any trailing…",6,[[]]],[11,"new","","Create a EncoderStringWriter that will encode into a new…",6,[[["config",3]]]]],"p":[[3,"Base64Display"],[4,"DecodeError"],[4,"CharacterSet"],[3,"Config"],[3,"DecoderReader"],[3,"EncoderWriter"],[3,"EncoderStringWriter"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"bstr":{"doc":"An experimental byte string library.","i":[[0,"io","bstr","Utilities for working with I/O using byte strings.",null,null],[8,"BufReadExt","bstr::io","An extention trait for `std::io::BufRead` which provides…",null,null],[11,"byte_lines","","Returns an iterator over the lines of this reader, where…",0,[[],["bytelines",3]]],[11,"byte_records","","Returns an iterator over byte-terminated records of this…",0,[[],["byterecords",3]]],[11,"for_byte_line","","Executes the given closure on each line in the underlying…",0,[[],["result",6]]],[11,"for_byte_record","","Executes the given closure on each byte-terminated record…",0,[[],["result",6]]],[11,"for_byte_line_with_terminator","","Executes the given closure on each line in the underlying…",0,[[],["result",6]]],[11,"for_byte_record_with_terminator","","Executes the given closure on each byte-terminated record…",0,[[],["result",6]]],[3,"ByteLines","","An iterator over lines from an instance of…",null,null],[3,"ByteRecords","","An iterator over records from an instance of…",null,null],[3,"BStr","bstr","A wrapper for `&[u8]` that provides convenient string…",null,null],[3,"BString","","A wrapper for `Vec<u8>` that provides convenient string…",null,null],[8,"ByteSlice","","A trait that extends `&[u8]` with string oriented methods.",null,null],[11,"as_bstr","","Return this byte slice as a `&BStr`.",1,[[],["bstr",3]]],[11,"as_bstr_mut","","Return this byte slice as a `&mut BStr`.",1,[[],["bstr",3]]],[11,"from_os_str","","Create an immutable byte string from an OS string slice.",1,[[["osstr",3]],["option",4]]],[11,"from_path","","Create an immutable byte string from a file path.",1,[[["path",3]],["option",4]]],[11,"to_str","","Safely convert this byte string into a `&str` if it\'s…",1,[[],[["utf8error",3],["result",4]]]],[11,"to_str_unchecked","","Unsafely convert this byte string into a `&str`, without…",1,[[]]],[11,"to_str_lossy","","Convert this byte string to a valid UTF-8 string by…",1,[[],["cow",4]]],[11,"to_str_lossy_into","","Copy the contents of this byte string into the given owned…",1,[[["string",3]]]],[11,"to_os_str","","Create an OS string slice from this byte string.",1,[[],[["osstr",3],["result",4],["utf8error",3]]]],[11,"to_os_str_lossy","","Lossily create an OS string slice from this byte string.",1,[[],[["cow",4],["osstr",3]]]],[11,"to_path","","Create a path slice from this byte string.",1,[[],[["utf8error",3],["result",4],["path",3]]]],[11,"to_path_lossy","","Lossily create a path slice from this byte string.",1,[[],[["cow",4],["path",3]]]],[11,"repeatn","","Create a new byte string by repeating this byte string `n`…",1,[[],["vec",3]]],[11,"contains_str","","Returns true if and only if this byte string contains the…",1,[[["asref",8]]]],[11,"starts_with_str","","Returns true if and only if this byte string has the given…",1,[[["asref",8]]]],[11,"ends_with_str","","Returns true if and only if this byte string has the given…",1,[[["asref",8]]]],[11,"find","","Returns the index of the first occurrence of the given…",1,[[["asref",8]],["option",4]]],[11,"rfind","","Returns the index of the last occurrence of the given…",1,[[["asref",8]],["option",4]]],[11,"find_iter","","Returns an iterator of the non-overlapping occurrences of…",1,[[],["find",3]]],[11,"rfind_iter","","Returns an iterator of the non-overlapping occurrences of…",1,[[],["findreverse",3]]],[11,"find_byte","","Returns the index of the first occurrence of the given…",1,[[],["option",4]]],[11,"rfind_byte","","Returns the index of the last occurrence of the given…",1,[[],["option",4]]],[11,"find_char","","Returns the index of the first occurrence of the given…",1,[[],["option",4]]],[11,"rfind_char","","Returns the index of the last occurrence of the given…",1,[[],["option",4]]],[11,"find_byteset","","Returns the index of the first occurrence of any of the…",1,[[["asref",8]],["option",4]]],[11,"find_not_byteset","","Returns the index of the first occurrence of a byte that…",1,[[["asref",8]],["option",4]]],[11,"rfind_byteset","","Returns the index of the last occurrence of any of the…",1,[[["asref",8]],["option",4]]],[11,"rfind_not_byteset","","Returns the index of the last occurrence of a byte that is…",1,[[["asref",8]],["option",4]]],[11,"fields","","Returns an iterator over the fields in a byte string,…",1,[[],["fields",3]]],[11,"fields_with","","Returns an iterator over the fields in a byte string,…",1,[[["fnmut",8]],[["fieldswith",3],["fnmut",8]]]],[11,"split_str","","Returns an iterator over substrings of this byte string,…",1,[[],["split",3]]],[11,"rsplit_str","","Returns an iterator over substrings of this byte string,…",1,[[],["splitreverse",3]]],[11,"splitn_str","","Returns an iterator of at most `limit` substrings of this…",1,[[],["splitn",3]]],[11,"rsplitn_str","","Returns an iterator of at most `limit` substrings of this…",1,[[],["splitnreverse",3]]],[11,"replace","","Replace all matches of the given needle with the given…",1,[[["asref",8]],["vec",3]]],[11,"replacen","","Replace up to `limit` matches of the given needle with the…",1,[[["asref",8]],["vec",3]]],[11,"replace_into","","Replace all matches of the given needle with the given…",1,[[["asref",8],["vec",3]]]],[11,"replacen_into","","Replace up to `limit` matches of the given needle with the…",1,[[["asref",8],["vec",3]]]],[11,"bytes","","Returns an iterator over the bytes in this byte string.",1,[[],["bytes",3]]],[11,"chars","","Returns an iterator over the Unicode scalar values in this…",1,[[],["chars",3]]],[11,"char_indices","","Returns an iterator over the Unicode scalar values in this…",1,[[],["charindices",3]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",1,[[],["utf8chunks",3]]],[11,"lines","","An iterator over all lines in a byte string, without their…",1,[[],["lines",3]]],[11,"lines_with_terminator","","An iterator over all lines in a byte string, including…",1,[[],["lineswithterminator",3]]],[11,"trim_with","","Return a byte string slice with leading and trailing…",1,[[["fnmut",8]]]],[11,"trim_start_with","","Return a byte string slice with leading characters…",1,[[["fnmut",8]]]],[11,"trim_end_with","","Return a byte string slice with trailing characters…",1,[[["fnmut",8]]]],[11,"to_ascii_lowercase","","Returns a new `Vec<u8>` containing the ASCII lowercase…",1,[[],["vec",3]]],[11,"make_ascii_lowercase","","Convert this byte string to its lowercase ASCII equivalent…",1,[[]]],[11,"to_ascii_uppercase","","Returns a new `Vec<u8>` containing the ASCII uppercase…",1,[[],["vec",3]]],[11,"make_ascii_uppercase","","Convert this byte string to its uppercase ASCII equivalent…",1,[[]]],[11,"reverse_bytes","","Reverse the bytes in this string, in place.",1,[[]]],[11,"reverse_chars","","Reverse the codepoints in this string, in place.",1,[[]]],[11,"is_ascii","","Returns true if and only if every byte in this byte string…",1,[[]]],[11,"is_utf8","","Returns true if and only if the entire byte string is…",1,[[]]],[11,"last_byte","","Returns the last byte in this byte string, if it\'s…",1,[[],["option",4]]],[11,"find_non_ascii_byte","","Returns the index of the first non-ASCII byte in this byte…",1,[[],["option",4]]],[11,"copy_within_str","","Copies elements from one part of the slice to another part…",1,[[]]],[3,"Bytes","","An iterator over the bytes in a byte string.",null,null],[3,"Fields","","An iterator over the fields in a byte string, separated by…",null,null],[3,"FieldsWith","","An iterator over fields in the byte string, separated by a…",null,null],[3,"Find","","An iterator over non-overlapping substring matches.",null,null],[3,"FindReverse","","An iterator over non-overlapping substring matches in…",null,null],[3,"Finder","","A single substring searcher fixed to a particular needle.",null,null],[3,"FinderReverse","","A single substring reverse searcher fixed to a particular…",null,null],[3,"Lines","","An iterator over all lines in a byte string, without their…",null,null],[3,"LinesWithTerminator","","An iterator over all lines in a byte string, including…",null,null],[3,"Split","","An iterator over substrings in a byte string, split by a…",null,null],[3,"SplitN","","An iterator over at most `n` substrings in a byte string,…",null,null],[3,"SplitNReverse","","An iterator over at most `n` substrings in a byte string,…",null,null],[3,"SplitReverse","","An iterator over substrings in a byte string, split by a…",null,null],[5,"B","","A short-hand constructor for building a `&[u8]`.",null,[[]]],[5,"concat","","Concatenate the elements given by the iterator together…",null,[[],["vec",3]]],[5,"join","","Join the elements given by the iterator with the given…",null,[[],["vec",3]]],[8,"ByteVec","","A trait that extends `Vec<u8>` with string oriented methods.",null,null],[11,"from_slice","","Create a new owned byte string from the given byte slice.",2,[[["asref",8]],["vec",3]]],[11,"from_os_string","","Create a new byte string from an owned OS string.",2,[[["osstring",3]],[["result",4],["vec",3],["osstring",3]]]],[11,"from_os_str_lossy","","Lossily create a new byte string from an OS string slice.",2,[[["osstr",3]],["cow",4]]],[11,"from_path_buf","","Create a new byte string from an owned file path.",2,[[["pathbuf",3]],[["result",4],["pathbuf",3],["vec",3]]]],[11,"from_path_lossy","","Lossily create a new byte string from a file path.",2,[[["path",3]],["cow",4]]],[11,"push_byte","","Appends the given byte to the end of this byte string.",2,[[]]],[11,"push_char","","Appends the given `char` to the end of this byte string.",2,[[]]],[11,"push_str","","Appends the given slice to the end of this byte string.…",2,[[["asref",8]]]],[11,"into_string","","Converts a `Vec<u8>` into a `String` if and only if this…",2,[[],[["result",4],["fromutf8error",3],["string",3]]]],[11,"into_string_lossy","","Lossily converts a `Vec<u8>` into a `String`. If this byte…",2,[[],["string",3]]],[11,"into_string_unchecked","","Unsafely convert this byte string into a `String`, without…",2,[[],["string",3]]],[11,"into_os_string","","Converts this byte string into an OS string, in place.",2,[[],[["result",4],["osstring",3],["vec",3]]]],[11,"into_os_string_lossy","","Lossily converts this byte string into an OS string, in…",2,[[],["osstring",3]]],[11,"into_path_buf","","Converts this byte string into an owned file path, in place.",2,[[],[["result",4],["pathbuf",3],["vec",3]]]],[11,"into_path_buf_lossy","","Lossily converts this byte string into an owned file path,…",2,[[],["pathbuf",3]]],[11,"pop_byte","","Removes the last byte from this `Vec<u8>` and returns it.",2,[[],["option",4]]],[11,"pop_char","","Removes the last codepoint from this `Vec<u8>` and returns…",2,[[],["option",4]]],[11,"remove_char","","Removes a `char` from this `Vec<u8>` at the given byte…",2,[[]]],[11,"insert_char","","Inserts the given codepoint into this `Vec<u8>` at a…",2,[[]]],[11,"insert_str","","Inserts the given byte string into this byte string at a…",2,[[["asref",8]]]],[11,"replace_range","","Removes the specified range in this byte string and…",2,[[]]],[11,"drain_bytes","","Creates a draining iterator that removes the specified…",2,[[],["drainbytes",3]]],[3,"DrainBytes","","A draining byte oriented iterator for `Vec<u8>`.",null,null],[3,"FromUtf8Error","","An error that may occur when converting a `Vec<u8>` to a…",null,null],[5,"decode_utf8","","UTF-8 decode a single Unicode scalar value from the…",null,[[["asref",8]]]],[5,"decode_last_utf8","","UTF-8 decode a single Unicode scalar value from the end of…",null,[[["asref",8]]]],[3,"CharIndices","","An iterator over Unicode scalar values in a byte string…",null,null],[3,"Chars","","An iterator over Unicode scalar values in a byte string.",null,null],[3,"Utf8Chunk","","A chunk of valid UTF-8, possibly followed by invalid UTF-8…",null,null],[3,"Utf8Chunks","","An iterator over chunks of valid UTF-8 in a byte slice.",null,null],[3,"Utf8Error","","An error that occurs when UTF-8 decoding fails.",null,null],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","bstr::io","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","bstr","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"as_mut","","",4,[[]]],[11,"as_mut","","",4,[[],["bstr",3]]],[11,"as_mut","","",3,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_ref","","",4,[[],["bstr",3]]],[11,"as_ref","","",3,[[]]],[11,"from","","",4,[[],["bstring",3]]],[11,"from","","",4,[[["vec",3]],["bstring",3]]],[11,"from","","",4,[[],["bstring",3]]],[11,"from","","",4,[[["string",3]],["bstring",3]]],[11,"from","","",4,[[["bstr",3]],["bstring",3]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"next_back","","",23,[[],["option",4]]],[11,"len","","",9,[[]]],[11,"len","","",18,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"next","","",13,[[],["option",4]]],[11,"next","","",14,[[],["option",4]]],[11,"next","","",15,[[],["option",4]]],[11,"next","","",16,[[],["option",4]]],[11,"next","","",17,[[],["option",4]]],[11,"next","","",18,[[],["option",4]]],[11,"next","bstr::io","",20,[[],[["result",6],["option",4]]]],[11,"next","","",21,[[],[["result",6],["option",4]]]],[11,"next","bstr","",22,[[],["option",4]]],[11,"next","","",23,[[],["option",4]]],[11,"next","","",24,[[],[["option",4],["utf8chunk",3]]]],[11,"size_hint","","",24,[[]]],[11,"clone","","",4,[[],["bstring",3]]],[11,"clone","","",5,[[],["finder",3]]],[11,"clone","","",6,[[],["finderreverse",3]]],[11,"clone","","",9,[[],["bytes",3]]],[11,"clone","","",22,[[],["chars",3]]],[11,"clone","","",23,[[],["charindices",3]]],[11,"clone","","",24,[[],["utf8chunks",3]]],[11,"default","","",4,[[],["bstring",3]]],[11,"cmp","","",4,[[["bstring",3]],["ordering",4]]],[11,"cmp","","",3,[[["bstr",3]],["ordering",4]]],[11,"eq","","",19,[[["fromutf8error",3]]]],[11,"ne","","",19,[[["fromutf8error",3]]]],[11,"eq","","",4,[[["bstring",3]]]],[11,"eq","","",4,[[["vec",3]]]],[11,"eq","","",4,[[]]],[11,"eq","","",4,[[]]],[11,"eq","","",4,[[["string",3]]]],[11,"eq","","",4,[[]]],[11,"eq","","",4,[[]]],[11,"eq","","",4,[[["bstr",3]]]],[11,"eq","","",3,[[["bstring",3]]]],[11,"eq","","",4,[[["bstr",3]]]],[11,"eq","","",3,[[["bstr",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",3,[[]]],[11,"eq","","",3,[[]]],[11,"eq","","",3,[[]]],[11,"eq","","",3,[[["vec",3]]]],[11,"eq","","",3,[[["string",3]]]],[11,"eq","","",26,[[["utf8error",3]]]],[11,"ne","","",26,[[["utf8error",3]]]],[11,"partial_cmp","","",4,[[["bstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["string",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["bstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["bstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["bstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["bstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["string",3]],[["option",4],["ordering",4]]]],[11,"to_owned","","",3,[[],["bstring",3]]],[11,"deref","","",4,[[],["vec",3]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",4,[[],["vec",3]]],[11,"deref_mut","","",3,[[]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","bstr::io","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","bstr","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"index","","",3,[[]]],[11,"index","","",3,[[["rangefull",3]],["bstr",3]]],[11,"index","","",3,[[["range",3]],["bstr",3]]],[11,"index","","",3,[[["rangeinclusive",3]],["bstr",3]]],[11,"index","","",3,[[["rangefrom",3]],["bstr",3]]],[11,"index","","",3,[[["rangeto",3]],["bstr",3]]],[11,"index","","",3,[[["rangetoinclusive",3]],["bstr",3]]],[11,"index_mut","","",3,[[]]],[11,"index_mut","","",3,[[["rangefull",3]],["bstr",3]]],[11,"index_mut","","",3,[[["range",3]],["bstr",3]]],[11,"index_mut","","",3,[[["rangeinclusive",3]],["bstr",3]]],[11,"index_mut","","",3,[[["rangefrom",3]],["bstr",3]]],[11,"index_mut","","",3,[[["rangeto",3]],["bstr",3]]],[11,"index_mut","","",3,[[["rangetoinclusive",3]],["bstr",3]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"borrow","","",4,[[],["bstr",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["bstring",3]]],[11,"description","","",19,[[]]],[11,"description","","",26,[[]]],[11,"as_bstr","","Return this byte slice as a `&BStr`.",1,[[],["bstr",3]]],[11,"as_bstr_mut","","Return this byte slice as a `&mut BStr`.",1,[[],["bstr",3]]],[11,"from_os_str","","Create an immutable byte string from an OS string slice.",1,[[["osstr",3]],["option",4]]],[11,"from_path","","Create an immutable byte string from a file path.",1,[[["path",3]],["option",4]]],[11,"to_str","","Safely convert this byte string into a `&str` if it\'s…",1,[[],[["utf8error",3],["result",4]]]],[11,"to_str_unchecked","","Unsafely convert this byte string into a `&str`, without…",1,[[]]],[11,"to_str_lossy","","Convert this byte string to a valid UTF-8 string by…",1,[[],["cow",4]]],[11,"to_str_lossy_into","","Copy the contents of this byte string into the given owned…",1,[[["string",3]]]],[11,"to_os_str","","Create an OS string slice from this byte string.",1,[[],[["osstr",3],["result",4],["utf8error",3]]]],[11,"to_os_str_lossy","","Lossily create an OS string slice from this byte string.",1,[[],[["cow",4],["osstr",3]]]],[11,"to_path","","Create a path slice from this byte string.",1,[[],[["utf8error",3],["result",4],["path",3]]]],[11,"to_path_lossy","","Lossily create a path slice from this byte string.",1,[[],[["cow",4],["path",3]]]],[11,"repeatn","","Create a new byte string by repeating this byte string `n`…",1,[[],["vec",3]]],[11,"contains_str","","Returns true if and only if this byte string contains the…",1,[[["asref",8]]]],[11,"starts_with_str","","Returns true if and only if this byte string has the given…",1,[[["asref",8]]]],[11,"ends_with_str","","Returns true if and only if this byte string has the given…",1,[[["asref",8]]]],[11,"find","","Returns the index of the first occurrence of the given…",1,[[["asref",8]],["option",4]]],[11,"rfind","","Returns the index of the last occurrence of the given…",1,[[["asref",8]],["option",4]]],[11,"find_iter","","Returns an iterator of the non-overlapping occurrences of…",1,[[],["find",3]]],[11,"rfind_iter","","Returns an iterator of the non-overlapping occurrences of…",1,[[],["findreverse",3]]],[11,"find_byte","","Returns the index of the first occurrence of the given…",1,[[],["option",4]]],[11,"rfind_byte","","Returns the index of the last occurrence of the given…",1,[[],["option",4]]],[11,"find_char","","Returns the index of the first occurrence of the given…",1,[[],["option",4]]],[11,"rfind_char","","Returns the index of the last occurrence of the given…",1,[[],["option",4]]],[11,"find_byteset","","Returns the index of the first occurrence of any of the…",1,[[["asref",8]],["option",4]]],[11,"find_not_byteset","","Returns the index of the first occurrence of a byte that…",1,[[["asref",8]],["option",4]]],[11,"rfind_byteset","","Returns the index of the last occurrence of any of the…",1,[[["asref",8]],["option",4]]],[11,"rfind_not_byteset","","Returns the index of the last occurrence of a byte that is…",1,[[["asref",8]],["option",4]]],[11,"fields","","Returns an iterator over the fields in a byte string,…",1,[[],["fields",3]]],[11,"fields_with","","Returns an iterator over the fields in a byte string,…",1,[[["fnmut",8]],[["fieldswith",3],["fnmut",8]]]],[11,"split_str","","Returns an iterator over substrings of this byte string,…",1,[[],["split",3]]],[11,"rsplit_str","","Returns an iterator over substrings of this byte string,…",1,[[],["splitreverse",3]]],[11,"splitn_str","","Returns an iterator of at most `limit` substrings of this…",1,[[],["splitn",3]]],[11,"rsplitn_str","","Returns an iterator of at most `limit` substrings of this…",1,[[],["splitnreverse",3]]],[11,"replace","","Replace all matches of the given needle with the given…",1,[[["asref",8]],["vec",3]]],[11,"replacen","","Replace up to `limit` matches of the given needle with the…",1,[[["asref",8]],["vec",3]]],[11,"replace_into","","Replace all matches of the given needle with the given…",1,[[["asref",8],["vec",3]]]],[11,"replacen_into","","Replace up to `limit` matches of the given needle with the…",1,[[["asref",8],["vec",3]]]],[11,"bytes","","Returns an iterator over the bytes in this byte string.",1,[[],["bytes",3]]],[11,"chars","","Returns an iterator over the Unicode scalar values in this…",1,[[],["chars",3]]],[11,"char_indices","","Returns an iterator over the Unicode scalar values in this…",1,[[],["charindices",3]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",1,[[],["utf8chunks",3]]],[11,"lines","","An iterator over all lines in a byte string, without their…",1,[[],["lines",3]]],[11,"lines_with_terminator","","An iterator over all lines in a byte string, including…",1,[[],["lineswithterminator",3]]],[11,"trim_with","","Return a byte string slice with leading and trailing…",1,[[["fnmut",8]]]],[11,"trim_start_with","","Return a byte string slice with leading characters…",1,[[["fnmut",8]]]],[11,"trim_end_with","","Return a byte string slice with trailing characters…",1,[[["fnmut",8]]]],[11,"to_ascii_lowercase","","Returns a new `Vec<u8>` containing the ASCII lowercase…",1,[[],["vec",3]]],[11,"make_ascii_lowercase","","Convert this byte string to its lowercase ASCII equivalent…",1,[[]]],[11,"to_ascii_uppercase","","Returns a new `Vec<u8>` containing the ASCII uppercase…",1,[[],["vec",3]]],[11,"make_ascii_uppercase","","Convert this byte string to its uppercase ASCII equivalent…",1,[[]]],[11,"reverse_bytes","","Reverse the bytes in this string, in place.",1,[[]]],[11,"reverse_chars","","Reverse the codepoints in this string, in place.",1,[[]]],[11,"is_ascii","","Returns true if and only if every byte in this byte string…",1,[[]]],[11,"is_utf8","","Returns true if and only if the entire byte string is…",1,[[]]],[11,"last_byte","","Returns the last byte in this byte string, if it\'s…",1,[[],["option",4]]],[11,"find_non_ascii_byte","","Returns the index of the first non-ASCII byte in this byte…",1,[[],["option",4]]],[11,"copy_within_str","","Copies elements from one part of the slice to another part…",1,[[]]],[11,"new","","Create a new finder for the given needle.",5,[[],["finder",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",5,[[],["finder",3]]],[11,"needle","","Returns the needle that this finder searches for.",5,[[]]],[11,"find","","Returns the index of the first occurrence of this needle…",5,[[["asref",8]],["option",4]]],[11,"new","","Create a new reverse finder for the given needle.",6,[[],["finderreverse",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",6,[[],["finderreverse",3]]],[11,"needle","","Returns the needle that this finder searches for.",6,[[]]],[11,"rfind","","Returns the index of the last occurrence of this needle in…",6,[[["asref",8]],["option",4]]],[11,"as_slice","","Views the remaining underlying data as a subslice of the…",9,[[]]],[11,"from_slice","","Create a new owned byte string from the given byte slice.",2,[[["asref",8]],["vec",3]]],[11,"from_os_string","","Create a new byte string from an owned OS string.",2,[[["osstring",3]],[["result",4],["vec",3],["osstring",3]]]],[11,"from_os_str_lossy","","Lossily create a new byte string from an OS string slice.",2,[[["osstr",3]],["cow",4]]],[11,"from_path_buf","","Create a new byte string from an owned file path.",2,[[["pathbuf",3]],[["result",4],["pathbuf",3],["vec",3]]]],[11,"from_path_lossy","","Lossily create a new byte string from a file path.",2,[[["path",3]],["cow",4]]],[11,"push_byte","","Appends the given byte to the end of this byte string.",2,[[]]],[11,"push_char","","Appends the given `char` to the end of this byte string.",2,[[]]],[11,"push_str","","Appends the given slice to the end of this byte string.…",2,[[["asref",8]]]],[11,"into_string","","Converts a `Vec<u8>` into a `String` if and only if this…",2,[[],[["result",4],["fromutf8error",3],["string",3]]]],[11,"into_string_lossy","","Lossily converts a `Vec<u8>` into a `String`. If this byte…",2,[[],["string",3]]],[11,"into_string_unchecked","","Unsafely convert this byte string into a `String`, without…",2,[[],["string",3]]],[11,"into_os_string","","Converts this byte string into an OS string, in place.",2,[[],[["result",4],["osstring",3],["vec",3]]]],[11,"into_os_string_lossy","","Lossily converts this byte string into an OS string, in…",2,[[],["osstring",3]]],[11,"into_path_buf","","Converts this byte string into an owned file path, in place.",2,[[],[["result",4],["pathbuf",3],["vec",3]]]],[11,"into_path_buf_lossy","","Lossily converts this byte string into an owned file path,…",2,[[],["pathbuf",3]]],[11,"pop_byte","","Removes the last byte from this `Vec<u8>` and returns it.",2,[[],["option",4]]],[11,"pop_char","","Removes the last codepoint from this `Vec<u8>` and returns…",2,[[],["option",4]]],[11,"remove_char","","Removes a `char` from this `Vec<u8>` at the given byte…",2,[[]]],[11,"insert_char","","Inserts the given codepoint into this `Vec<u8>` at a…",2,[[]]],[11,"insert_str","","Inserts the given byte string into this byte string at a…",2,[[["asref",8]]]],[11,"replace_range","","Removes the specified range in this byte string and…",2,[[]]],[11,"drain_bytes","","Creates a draining iterator that removes the specified…",2,[[],["drainbytes",3]]],[11,"as_bytes","","Return the original bytes as a slice that failed to…",19,[[]]],[11,"into_vec","","Consume this error and return the original byte string…",19,[[],["vec",3]]],[11,"utf8_error","","Return the underlying UTF-8 error that occurred. This…",19,[[],["utf8error",3]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",22,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",23,[[]]],[11,"valid","","Returns the (possibly empty) valid UTF-8 bytes in this…",25,[[]]],[11,"invalid","","Returns the (possibly empty) invalid UTF-8 bytes in this…",25,[[]]],[11,"incomplete","","Returns whether the invalid sequence might still become…",25,[[]]],[11,"valid_up_to","","Returns the byte index of the position immediately…",26,[[]]],[11,"error_len","","Returns the total number of invalid UTF-8 bytes…",26,[[],["option",4]]]],"p":[[8,"BufReadExt"],[8,"ByteSlice"],[8,"ByteVec"],[3,"BStr"],[3,"BString"],[3,"Finder"],[3,"FinderReverse"],[3,"Find"],[3,"FindReverse"],[3,"Bytes"],[3,"Fields"],[3,"FieldsWith"],[3,"Split"],[3,"SplitReverse"],[3,"SplitN"],[3,"SplitNReverse"],[3,"Lines"],[3,"LinesWithTerminator"],[3,"DrainBytes"],[3,"FromUtf8Error"],[3,"ByteLines"],[3,"ByteRecords"],[3,"Chars"],[3,"CharIndices"],[3,"Utf8Chunks"],[3,"Utf8Chunk"],[3,"Utf8Error"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"chrono":{"doc":"Chrono: Date and Time for RustIt aims to be a…","i":[[0,"prelude","chrono","A convenience module appropriate for glob imports (`use…",null,null],[0,"offset","","The time zone, which calculates offsets from the local…",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the…",null,null],[13,"None","","Given local time representation is invalid. This can occur…",0,null],[13,"Single","","Given local time representation has a single unique result.",0,null],[13,"Ambiguous","","Given local time representation has multiple results and…",0,null],[11,"single","","Returns `Some` only when the conversion result is unique,…",0,[[],["option",4]]],[11,"earliest","","Returns `Some` for the earliest possible conversion…",0,[[],["option",4]]],[11,"latest","","Returns `Some` for the latest possible conversion result,…",0,[[],["option",4]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given…",0,[[["fnmut",8]],["localresult",4]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",0,[[["naivetime",3]],[["localresult",4],["datetime",3]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",0,[[],[["localresult",4],["datetime",3]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",0,[[],[["localresult",4],["datetime",3]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",0,[[],[["localresult",4],["datetime",3]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",0,[[],[["localresult",4],["datetime",3]]]],[11,"unwrap","","Returns the single unique conversion result, or panics…",0,[[]]],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",1,[[],["fixedoffset",3]]],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the…",2,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",2,[[],["date",3]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",2,[[],[["localresult",4],["date",3]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",2,[[],["date",3]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",2,[[],[["localresult",4],["date",3]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",2,[[["weekday",4]],["date",3]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",2,[[["weekday",4]],[["localresult",4],["date",3]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",2,[[],["datetime",3]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",2,[[],[["localresult",4],["datetime",3]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",2,[[],["datetime",3]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",2,[[],[["localresult",4],["datetime",3]]]],[11,"timestamp_nanos","","Makes a new `DateTime` from the number of non-leap…",2,[[],["datetime",3]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",2,[[],[["parseresult",6],["datetime",3]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",2,[[]]],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",2,[[["naivedate",3]],["localresult",4]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",2,[[["naivedatetime",3]],["localresult",4]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",2,[[["naivedate",3]],[["localresult",4],["date",3]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",2,[[["naivedatetime",3]],[["localresult",4],["datetime",3]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",2,[[["naivedate",3]]]],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",2,[[["naivedatetime",3]]]],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",2,[[["naivedate",3]],["date",3]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",2,[[["naivedatetime",3]],["datetime",3]]],[3,"FixedOffset","","The time zone with fixed offset, from UTC-23:59:59 to…",null,null],[3,"Local","","The local timescale. This is implemented via the standard…",null,null],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[0,"naive","chrono","Date and time types unconcerned with timezones.",null,null],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every…",null,null],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[17,"MIN_DATE","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[17,"MAX_DATETIME","","The maximum possible `NaiveDateTime`.",null,null],[17,"MIN_DATETIME","","The minimum possible `NaiveDateTime`.",null,null],[3,"IsoWeek","","ISO 8601 week.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",null,null],[0,"format","chrono","Formatting (and parsing) utilities for date and time.",null,null],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting…",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like…",3,[[],["strftimeitems",3]]],[5,"parse","chrono::format","Tries to parse given string into `parsed` with given…",null,[[["parsed",3]],["parseresult",6]]],[3,"Parsed","","Parsed parts of date and time. There are two classes of…",null,null],[12,"year","","Year.",4,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE…",4,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",4,null],[12,"isoyear","","Year in the ISO week date.",4,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that…",4,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the…",4,null],[12,"month","","Month (1--12).",4,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday…",4,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday…",4,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",4,null],[12,"weekday","","Day of the week.",4,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",4,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",4,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1…",4,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",4,null],[12,"minute","","Minute number (0--59).",4,null],[12,"second","","Second number (0--60, accounting for leap seconds).",4,null],[12,"nanosecond","","The number of nanoseconds since the whole second…",4,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on…",4,null],[12,"offset","","Offset from the local time to UTC, in seconds.",4,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",5,null],[13,"Zero","","Zero (`0`) padding.",5,null],[13,"Space","","Space padding.",5,null],[4,"Numeric","","Numeric item types. They have associated formatting width…",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before…",6,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2).…",6,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",6,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years…",6,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2).…",6,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",6,null],[13,"Month","","Month (FW=PW=2).",6,null],[13,"Day","","Day of the month (FW=PW=2).",6,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday…",6,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday…",6,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",6,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6…",6,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",6,null],[13,"Ordinal","","Day of the year (FW=PW=3).",6,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",6,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",6,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",6,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",6,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second…",6,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on…",6,null],[13,"Internal","","Internal uses only.",6,null],[3,"InternalNumeric","","An opaque type representing numeric item types for…",null,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",7,null],[13,"LongMonthName","","Full month names.",7,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",7,null],[13,"LongWeekdayName","","Full day of the week names.",7,null],[13,"LowerAmPm","","AM/PM.",7,null],[13,"UpperAmPm","","AM/PM.",7,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned…",7,null],[13,"Nanosecond3","","Same as `Nanosecond` but the accuracy is fixed to 3.",7,null],[13,"Nanosecond6","","Same as `Nanosecond` but the accuracy is fixed to 6.",7,null],[13,"Nanosecond9","","Same as `Nanosecond` but the accuracy is fixed to 9.",7,null],[13,"TimezoneName","","Timezone name.",7,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",7,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",7,null],[13,"TimezoneOffset","","Same as `TimezoneOffsetColon` but prints no colon. Parsing…",7,null],[13,"TimezoneOffsetZ","","Same as `TimezoneOffsetColonZ` but prints no colon.…",7,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and…",7,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",7,null],[13,"Internal","","Internal uses only.",7,null],[3,"InternalFixed","","An opaque type representing fixed-format item types for…",null,null],[4,"Item","","A single formatting item. This is used for both formatting…",null,null],[13,"Literal","","A literally printed and parsed text.",8,null],[13,"OwnedLiteral","","Same as `Literal` but with the string owned by the item.",8,null],[13,"Space","","Whitespace. Prints literally but reads zero or more…",8,null],[13,"OwnedSpace","","Same as `Space` but with the string owned by the item.",8,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal…",8,null],[13,"Fixed","","Fixed-format item.",8,null],[13,"Error","","Issues a formatting error. Used to signal an invalid…",8,null],[3,"ParseError","","An error from the `parse` function.",null,null],[6,"ParseResult","","Same as `Result<T, ParseError>`.",null,null],[5,"format_item","","Formats single formatting item",null,[[["naivetime",3],["item",4],["formatter",3],["option",4],["option",4],["option",4],["naivedate",3]],["result",6]]],[5,"format","","Tries to format given arguments with given formatting…",null,[[["naivetime",3],["formatter",3],["option",4],["option",4],["option",4],["naivedate",3]],["result",6]]],[3,"DelayedFormat","","A temporary object which can be used as an argument to…",null,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and…",9,[[["naivedate",3],["naivetime",3],["option",4],["option",4]],["delayedformat",3]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and…",9,[[["naivedate",3],["naivetime",3],["option",4],["option",4]],["delayedformat",3]]],[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[17,"MAX_DATE","","The maximum possible `Date`.",null,null],[17,"MIN_DATE","","The minimum possible `Date`.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor…",10,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",10,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",10,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",10,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",10,null],[17,"MAX_DATETIME","","The maximum possible `DateTime<Utc>`.",null,null],[17,"MIN_DATETIME","","The minimum possible `DateTime<Utc>`.",null,null],[8,"DurationRound","","Extension trait for rounding or truncating a DateTime by a…",null,null],[16,"Err","","Error that can occur in rounding or truncating",11,null],[10,"duration_round","","Return a copy rounded by Duration.",11,[[["duration",3]],["result",4]]],[10,"duration_trunc","","Return a copy truncated by Duration.",11,[[["duration",3]],["result",4]]],[4,"RoundingError","","An error from rounding by `Duration`",null,null],[13,"DurationExceedsTimestamp","","Error when the Duration exceeds the Duration from or until…",12,null],[13,"DurationExceedsLimit","","Error when `Duration.num_nanoseconds` exceeds the limit.",12,null],[13,"TimestampExceedsLimit","","Error when `DateTime.timestamp_nanos` exceeds the limit.",12,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",13,[[]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",13,[[]]],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",14,null],[13,"Tue","","Tuesday.",14,null],[13,"Wed","","Wednesday.",14,null],[13,"Thu","","Thursday.",14,null],[13,"Fri","","Friday.",14,null],[13,"Sat","","Saturday.",14,null],[13,"Sun","","Sunday.",14,null],[11,"succ","","The next day in the week.",14,[[],["weekday",4]]],[11,"pred","","The previous day in the week.",14,[[],["weekday",4]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",14,[[]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",14,[[]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",14,[[]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",14,[[]]],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with…",null,null],[4,"Month","","The month of the year.",null,null],[13,"January","","January",15,null],[13,"February","","February",15,null],[13,"March","","March",15,null],[13,"April","","April",15,null],[13,"May","","May",15,null],[13,"June","","June",15,null],[13,"July","","July",15,null],[13,"August","","August",15,null],[13,"September","","September",15,null],[13,"October","","October",15,null],[13,"November","","November",15,null],[13,"December","","December",15,null],[11,"succ","","The next month.",15,[[],["month",4]]],[11,"pred","","The previous month.",15,[[],["month",4]]],[11,"number_from_month","","Returns a month-of-year number starting from January = 1.",15,[[]]],[11,"name","","Get the name of the month",15,[[]]],[3,"ParseMonthError","","An error resulting from reading `<Month>` value with…",null,null],[8,"Datelike","","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",16,[[]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",16,[[]]],[10,"month","","Returns the month number starting from 1.",16,[[]]],[10,"month0","","Returns the month number starting from 0.",16,[[]]],[10,"day","","Returns the day of month starting from 1.",16,[[]]],[10,"day0","","Returns the day of month starting from 0.",16,[[]]],[10,"ordinal","","Returns the day of year starting from 1.",16,[[]]],[10,"ordinal0","","Returns the day of year starting from 0.",16,[[]]],[10,"weekday","","Returns the day of week.",16,[[],["weekday",4]]],[10,"iso_week","","Returns the ISO week.",16,[[],["isoweek",3]]],[10,"with_year","","Makes a new value with the year number changed.",16,[[],["option",4]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",16,[[],["option",4]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",16,[[],["option",4]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",16,[[],["option",4]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",16,[[],["option",4]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",16,[[],["option",4]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",16,[[],["option",4]]],[11,"num_days_from_ce","","Counts the days in the proleptic Gregorian calendar, with…",16,[[]]],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",17,[[]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",17,[[]]],[10,"minute","","Returns the minute number from 0 to 59.",17,[[]]],[10,"second","","Returns the second number from 0 to 59.",17,[[]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",17,[[]]],[10,"with_hour","","Makes a new value with the hour number changed.",17,[[],["option",4]]],[10,"with_minute","","Makes a new value with the minute number changed.",17,[[],["option",4]]],[10,"with_second","","Makes a new value with the second number changed.",17,[[],["option",4]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",17,[[],["option",4]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","chrono::offset","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","chrono::naive","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","chrono","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","chrono::format","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","chrono::format::strftime","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","chrono::format","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","chrono","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"fix","chrono::offset","",19,[[],["fixedoffset",3]]],[11,"fix","","",21,[[],["fixedoffset",3]]],[11,"from_offset","","",19,[[["fixedoffset",3]],["fixedoffset",3]]],[11,"offset_from_local_date","","",19,[[["naivedate",3]],[["localresult",4],["fixedoffset",3]]]],[11,"offset_from_local_datetime","","",19,[[["naivedatetime",3]],[["localresult",4],["fixedoffset",3]]]],[11,"offset_from_utc_date","","",19,[[["naivedate",3]],["fixedoffset",3]]],[11,"offset_from_utc_datetime","","",19,[[["naivedatetime",3]],["fixedoffset",3]]],[11,"from_offset","","",20,[[["fixedoffset",3]],["local",3]]],[11,"offset_from_local_date","","",20,[[["naivedate",3]],[["localresult",4],["fixedoffset",3]]]],[11,"offset_from_local_datetime","","",20,[[["naivedatetime",3]],[["localresult",4],["fixedoffset",3]]]],[11,"offset_from_utc_date","","",20,[[["naivedate",3]],["fixedoffset",3]]],[11,"offset_from_utc_datetime","","",20,[[["naivedatetime",3]],["fixedoffset",3]]],[11,"from_local_date","","",20,[[["naivedate",3]],[["localresult",4],["date",3]]]],[11,"from_local_datetime","","",20,[[["naivedatetime",3]],[["datetime",3],["localresult",4]]]],[11,"from_utc_date","","",20,[[["naivedate",3]],[["date",3],["local",3]]]],[11,"from_utc_datetime","","",20,[[["naivedatetime",3]],[["local",3],["datetime",3]]]],[11,"from_offset","","",21,[[["utc",3]],["utc",3]]],[11,"offset_from_local_date","","",21,[[["naivedate",3]],[["localresult",4],["utc",3]]]],[11,"offset_from_local_datetime","","",21,[[["naivedatetime",3]],[["localresult",4],["utc",3]]]],[11,"offset_from_utc_date","","",21,[[["naivedate",3]],["utc",3]]],[11,"offset_from_utc_datetime","","",21,[[["naivedatetime",3]],["utc",3]]],[11,"duration_round","chrono","",27,[[["duration",3]],["result",4]]],[11,"duration_trunc","","",27,[[["duration",3]],["result",4]]],[11,"year","chrono::naive","Returns the year number in the calendar date.",22,[[]]],[11,"month","","Returns the month number starting from 1.",22,[[]]],[11,"month0","","Returns the month number starting from 0.",22,[[]]],[11,"day","","Returns the day of month starting from 1.",22,[[]]],[11,"day0","","Returns the day of month starting from 0.",22,[[]]],[11,"ordinal","","Returns the day of year starting from 1.",22,[[]]],[11,"ordinal0","","Returns the day of year starting from 0.",22,[[]]],[11,"weekday","","Returns the day of week.",22,[[],["weekday",4]]],[11,"iso_week","","",22,[[],["isoweek",3]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",22,[[],[["naivedate",3],["option",4]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",22,[[],[["naivedate",3],["option",4]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",22,[[],[["naivedate",3],["option",4]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",22,[[],[["naivedate",3],["option",4]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",22,[[],[["naivedate",3],["option",4]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",22,[[],[["naivedate",3],["option",4]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",22,[[],[["naivedate",3],["option",4]]]],[11,"year","","Returns the year number in the calendar date.",23,[[]]],[11,"month","","Returns the month number starting from 1.",23,[[]]],[11,"month0","","Returns the month number starting from 0.",23,[[]]],[11,"day","","Returns the day of month starting from 1.",23,[[]]],[11,"day0","","Returns the day of month starting from 0.",23,[[]]],[11,"ordinal","","Returns the day of year starting from 1.",23,[[]]],[11,"ordinal0","","Returns the day of year starting from 0.",23,[[]]],[11,"weekday","","Returns the day of week.",23,[[],["weekday",4]]],[11,"iso_week","","",23,[[],["isoweek",3]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"year","chrono","",26,[[]]],[11,"month","","",26,[[]]],[11,"month0","","",26,[[]]],[11,"day","","",26,[[]]],[11,"day0","","",26,[[]]],[11,"ordinal","","",26,[[]]],[11,"ordinal0","","",26,[[]]],[11,"weekday","","",26,[[],["weekday",4]]],[11,"iso_week","","",26,[[],["isoweek",3]]],[11,"with_year","","",26,[[],[["option",4],["date",3]]]],[11,"with_month","","",26,[[],[["option",4],["date",3]]]],[11,"with_month0","","",26,[[],[["option",4],["date",3]]]],[11,"with_day","","",26,[[],[["option",4],["date",3]]]],[11,"with_day0","","",26,[[],[["option",4],["date",3]]]],[11,"with_ordinal","","",26,[[],[["option",4],["date",3]]]],[11,"with_ordinal0","","",26,[[],[["option",4],["date",3]]]],[11,"year","","",27,[[]]],[11,"month","","",27,[[]]],[11,"month0","","",27,[[]]],[11,"day","","",27,[[]]],[11,"day0","","",27,[[]]],[11,"ordinal","","",27,[[]]],[11,"ordinal0","","",27,[[]]],[11,"weekday","","",27,[[],["weekday",4]]],[11,"iso_week","","",27,[[],["isoweek",3]]],[11,"with_year","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_month","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_month0","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_day","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_day0","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_ordinal","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_ordinal0","","",27,[[],[["option",4],["datetime",3]]]],[11,"hour","chrono::naive","Returns the hour number from 0 to 23.",23,[[]]],[11,"minute","","Returns the minute number from 0 to 59.",23,[[]]],[11,"second","","Returns the second number from 0 to 59.",23,[[]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",23,[[],[["option",4],["naivedatetime",3]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"hour","","Returns the hour number from 0 to 23.",25,[[]]],[11,"minute","","Returns the minute number from 0 to 59.",25,[[]]],[11,"second","","Returns the second number from 0 to 59.",25,[[]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",25,[[]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",25,[[],[["naivetime",3],["option",4]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",25,[[],[["naivetime",3],["option",4]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",25,[[],[["naivetime",3],["option",4]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",25,[[],[["naivetime",3],["option",4]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",25,[[]]],[11,"hour","chrono","",27,[[]]],[11,"minute","","",27,[[]]],[11,"second","","",27,[[]]],[11,"nanosecond","","",27,[[]]],[11,"with_hour","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_minute","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_second","","",27,[[],[["option",4],["datetime",3]]]],[11,"with_nanosecond","","",27,[[],[["option",4],["datetime",3]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",27,[[["datetime",3],["utc",3]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",27,[[["datetime",3],["utc",3]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",27,[[["datetime",3],["fixedoffset",3]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",27,[[["datetime",3],["fixedoffset",3]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",27,[[["local",3],["datetime",3]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",27,[[["local",3],["datetime",3]]]],[11,"from","","",27,[[["systemtime",3]],[["utc",3],["datetime",3]]]],[11,"from","","",27,[[["systemtime",3]],[["local",3],["datetime",3]]]],[11,"next","chrono::format::strftime","",3,[[],[["option",4],["item",4]]]],[11,"clone","chrono","",18,[[],["duration",3]]],[11,"clone","chrono::offset","",0,[[],["localresult",4]]],[11,"clone","","",19,[[],["fixedoffset",3]]],[11,"clone","","",20,[[],["local",3]]],[11,"clone","","",21,[[],["utc",3]]],[11,"clone","chrono::naive","",22,[[],["naivedate",3]]],[11,"clone","","",23,[[],["naivedatetime",3]]],[11,"clone","","",24,[[],["isoweek",3]]],[11,"clone","","",25,[[],["naivetime",3]]],[11,"clone","chrono","",26,[[],["date",3]]],[11,"clone","","",10,[[],["secondsformat",4]]],[11,"clone","","",27,[[],["datetime",3]]],[11,"clone","chrono::format","",5,[[],["pad",4]]],[11,"clone","","",6,[[],["numeric",4]]],[11,"clone","","",28,[[]]],[11,"clone","","",7,[[],["fixed",4]]],[11,"clone","","",29,[[],["internalfixed",3]]],[11,"clone","","",8,[[],["item",4]]],[11,"clone","","",30,[[],["parseerror",3]]],[11,"clone","","",4,[[],["parsed",3]]],[11,"clone","chrono::format::strftime","",3,[[],["strftimeitems",3]]],[11,"clone","chrono","",12,[[],["roundingerror",4]]],[11,"clone","","",14,[[],["weekday",4]]],[11,"clone","","",31,[[],["parseweekdayerror",3]]],[11,"clone","","",15,[[],["month",4]]],[11,"clone","","",32,[[],["parsemontherror",3]]],[11,"default","chrono::format","",4,[[],["parsed",3]]],[11,"cmp","chrono","",18,[[["duration",3]],["ordering",4]]],[11,"cmp","chrono::naive","",22,[[["naivedate",3]],["ordering",4]]],[11,"cmp","","",23,[[["naivedatetime",3]],["ordering",4]]],[11,"cmp","","",24,[[["isoweek",3]],["ordering",4]]],[11,"cmp","","",25,[[["naivetime",3]],["ordering",4]]],[11,"cmp","chrono","",26,[[["date",3]],["ordering",4]]],[11,"cmp","","",27,[[["datetime",3]],["ordering",4]]],[11,"eq","","",18,[[["duration",3]]]],[11,"ne","","",18,[[["duration",3]]]],[11,"eq","chrono::offset","",0,[[["localresult",4]]]],[11,"ne","","",0,[[["localresult",4]]]],[11,"eq","","",19,[[["fixedoffset",3]]]],[11,"ne","","",19,[[["fixedoffset",3]]]],[11,"eq","","",21,[[["utc",3]]]],[11,"eq","chrono::naive","",22,[[["naivedate",3]]]],[11,"ne","","",22,[[["naivedate",3]]]],[11,"eq","","",23,[[["naivedatetime",3]]]],[11,"ne","","",23,[[["naivedatetime",3]]]],[11,"eq","","",24,[[["isoweek",3]]]],[11,"ne","","",24,[[["isoweek",3]]]],[11,"eq","","",25,[[["naivetime",3]]]],[11,"ne","","",25,[[["naivetime",3]]]],[11,"eq","chrono","",26,[[["date",3]]]],[11,"eq","","",10,[[["secondsformat",4]]]],[11,"eq","","",27,[[["datetime",3]]]],[11,"eq","chrono::format","",5,[[["pad",4]]]],[11,"eq","","",6,[[["numeric",4]]]],[11,"ne","","",6,[[["numeric",4]]]],[11,"eq","","",28,[[["internalnumeric",3]]]],[11,"eq","","",7,[[["fixed",4]]]],[11,"ne","","",7,[[["fixed",4]]]],[11,"eq","","",29,[[["internalfixed",3]]]],[11,"ne","","",29,[[["internalfixed",3]]]],[11,"eq","","",8,[[["item",4]]]],[11,"ne","","",8,[[["item",4]]]],[11,"eq","","",30,[[["parseerror",3]]]],[11,"ne","","",30,[[["parseerror",3]]]],[11,"eq","","",4,[[["parsed",3]]]],[11,"ne","","",4,[[["parsed",3]]]],[11,"eq","chrono","",12,[[["roundingerror",4]]]],[11,"eq","","",14,[[["weekday",4]]]],[11,"eq","","",31,[[["parseweekdayerror",3]]]],[11,"ne","","",31,[[["parseweekdayerror",3]]]],[11,"eq","","",15,[[["month",4]]]],[11,"eq","","",32,[[["parsemontherror",3]]]],[11,"ne","","",32,[[["parsemontherror",3]]]],[11,"partial_cmp","","",18,[[["duration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["duration",3]]]],[11,"le","","",18,[[["duration",3]]]],[11,"gt","","",18,[[["duration",3]]]],[11,"ge","","",18,[[["duration",3]]]],[11,"partial_cmp","chrono::naive","",22,[[["naivedate",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["naivedate",3]]]],[11,"le","","",22,[[["naivedate",3]]]],[11,"gt","","",22,[[["naivedate",3]]]],[11,"ge","","",22,[[["naivedate",3]]]],[11,"partial_cmp","","",23,[[["naivedatetime",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["naivedatetime",3]]]],[11,"le","","",23,[[["naivedatetime",3]]]],[11,"gt","","",23,[[["naivedatetime",3]]]],[11,"ge","","",23,[[["naivedatetime",3]]]],[11,"partial_cmp","","",24,[[["isoweek",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["isoweek",3]]]],[11,"le","","",24,[[["isoweek",3]]]],[11,"gt","","",24,[[["isoweek",3]]]],[11,"ge","","",24,[[["isoweek",3]]]],[11,"partial_cmp","","",25,[[["naivetime",3]],[["ordering",4],["option",4]]]],[11,"lt","","",25,[[["naivetime",3]]]],[11,"le","","",25,[[["naivetime",3]]]],[11,"gt","","",25,[[["naivetime",3]]]],[11,"ge","","",25,[[["naivetime",3]]]],[11,"partial_cmp","chrono","",26,[[["date",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","Compare two DateTimes based on their true time, ignoring…",27,[[["datetime",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::offset","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::naive","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","chrono","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::format","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::format::strftime","",3,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::format","",9,[[["formatter",3]],["result",6]]],[11,"fmt","chrono","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::offset","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::naive","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","chrono","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","chrono::format","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","chrono","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"div","","",18,[[],["duration",3]]],[11,"sub","","",18,[[["duration",3]],["duration",3]]],[11,"sub","chrono::naive","",25,[[["fixedoffset",3]],["naivetime",3]]],[11,"sub","","",23,[[["fixedoffset",3]],["naivedatetime",3]]],[11,"sub","chrono","",27,[[["fixedoffset",3]],["datetime",3]]],[11,"sub","chrono::naive","",22,[[["oldduration",3]],["naivedate",3]]],[11,"sub","","",22,[[["naivedate",3]],["oldduration",3]]],[11,"sub","","",23,[[["oldduration",3]],["naivedatetime",3]]],[11,"sub","","",23,[[["naivedatetime",3]],["oldduration",3]]],[11,"sub","","",25,[[["oldduration",3]],["naivetime",3]]],[11,"sub","","",25,[[["naivetime",3]],["oldduration",3]]],[11,"sub","chrono","",26,[[["oldduration",3]],["date",3]]],[11,"sub","","",26,[[["date",3]],["oldduration",3]]],[11,"sub","","",27,[[["oldduration",3]],["datetime",3]]],[11,"sub","","",27,[[["datetime",3]],["oldduration",3]]],[11,"add","","",18,[[["duration",3]],["duration",3]]],[11,"add","chrono::naive","",25,[[["fixedoffset",3]],["naivetime",3]]],[11,"add","","",23,[[["fixedoffset",3]],["naivedatetime",3]]],[11,"add","chrono","",27,[[["fixedoffset",3]],["datetime",3]]],[11,"add","chrono::naive","",22,[[["oldduration",3]],["naivedate",3]]],[11,"add","","",23,[[["oldduration",3]],["naivedatetime",3]]],[11,"add","","",25,[[["oldduration",3]],["naivetime",3]]],[11,"add","chrono","",26,[[["oldduration",3]],["date",3]]],[11,"add","","",27,[[["oldduration",3]],["datetime",3]]],[11,"mul","","",18,[[],["duration",3]]],[11,"neg","","",18,[[],["duration",3]]],[11,"add_assign","chrono::naive","",22,[[["oldduration",3]]]],[11,"add_assign","","",23,[[["oldduration",3]]]],[11,"add_assign","","",25,[[["oldduration",3]]]],[11,"sub_assign","","",22,[[["oldduration",3]]]],[11,"sub_assign","","",23,[[["oldduration",3]]]],[11,"sub_assign","","",25,[[["oldduration",3]]]],[11,"hash","chrono::offset","",0,[[]]],[11,"hash","","",19,[[]]],[11,"hash","chrono::naive","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",25,[[]]],[11,"hash","chrono","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"from_str","chrono::naive","",22,[[],[["parseresult",6],["naivedate",3]]]],[11,"from_str","","",23,[[],[["parseresult",6],["naivedatetime",3]]]],[11,"from_str","","",25,[[],[["parseresult",6],["naivetime",3]]]],[11,"from_str","chrono","",27,[[],[["datetime",3],["parseresult",6]]]],[11,"from_str","","",27,[[],[["datetime",3],["parseresult",6]]]],[11,"from_str","","",27,[[],[["parseresult",6],["datetime",3]]]],[11,"from_str","","",14,[[],["result",4]]],[11,"from_str","","",15,[[],["result",4]]],[11,"description","chrono::format","",30,[[]]],[11,"description","chrono","",12,[[]]],[11,"from_i64","","",14,[[],[["weekday",4],["option",4]]]],[11,"from_u64","","",14,[[],[["weekday",4],["option",4]]]],[11,"from_u64","","Returns an Option from a i64, assuming a 1-index, January…",15,[[],[["option",4],["month",4]]]],[11,"from_i64","","",15,[[],[["option",4],["month",4]]]],[11,"from_u32","","",15,[[],[["option",4],["month",4]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",18,[[],["duration",3]]],[11,"days","","Makes a new `Duration` with given number of days.…",18,[[],["duration",3]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",18,[[],["duration",3]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",18,[[],["duration",3]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",18,[[],["duration",3]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",18,[[],["duration",3]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",18,[[],["duration",3]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",18,[[],["duration",3]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",18,[[]]],[11,"num_days","","Returns the total number of whole days in the duration.",18,[[]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",18,[[]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",18,[[]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",18,[[]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",18,[[]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",18,[[],["option",4]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",18,[[],["option",4]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",18,[[["duration",3]],[["duration",3],["option",4]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",18,[[["duration",3]],[["duration",3],["option",4]]]],[11,"abs","","Returns the duration as an absolute (non-negative) value.",18,[[],["duration",3]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",18,[[],["duration",3]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",18,[[],["duration",3]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",18,[[],["duration",3]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",18,[[]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",18,[[["stdduration",3]],[["duration",3],["result",4],["outofrangeerror",3]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",18,[[],[["outofrangeerror",3],["stdduration",3],["result",4]]]],[11,"east","chrono::offset","Makes a new `FixedOffset` for the Eastern Hemisphere with…",19,[[],["fixedoffset",3]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",19,[[],[["option",4],["fixedoffset",3]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",19,[[],["fixedoffset",3]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",19,[[],[["option",4],["fixedoffset",3]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",19,[[]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",19,[[]]],[11,"today","","Returns a `Date` which corresponds to the current date.",20,[[],[["date",3],["local",3]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",20,[[],[["local",3],["datetime",3]]]],[11,"today","","Returns a `Date` which corresponds to the current date.",21,[[],[["date",3],["utc",3]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",21,[[],[["utc",3],["datetime",3]]]],[11,"from_ymd","chrono::naive","Makes a new `NaiveDate` from the calendar date (year,…",22,[[],["naivedate",3]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",22,[[],[["naivedate",3],["option",4]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",22,[[],["naivedate",3]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",22,[[],[["naivedate",3],["option",4]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",22,[[["weekday",4]],["naivedate",3]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",22,[[["weekday",4]],[["naivedate",3],["option",4]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from a day\'s number in the…",22,[[],["naivedate",3]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from a day\'s number in the…",22,[[],[["naivedate",3],["option",4]]]],[11,"from_weekday_of_month","","Makes a new `NaiveDate` by counting the number of…",22,[[["weekday",4]],["naivedate",3]]],[11,"from_weekday_of_month_opt","","Makes a new `NaiveDate` by counting the number of…",22,[[["weekday",4]],[["naivedate",3],["option",4]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",22,[[],[["parseresult",6],["naivedate",3]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",22,[[["naivetime",3]],["naivedatetime",3]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],["naivedatetime",3]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],[["option",4],["naivedatetime",3]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],["naivedatetime",3]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],[["option",4],["naivedatetime",3]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],["naivedatetime",3]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],[["option",4],["naivedatetime",3]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],["naivedatetime",3]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",22,[[],[["option",4],["naivedatetime",3]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",22,[[],["naivedate",3]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",22,[[],[["naivedate",3],["option",4]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",22,[[],["naivedate",3]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",22,[[],[["naivedate",3],["option",4]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",22,[[["oldduration",3]],[["naivedate",3],["option",4]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",22,[[["oldduration",3]],[["naivedate",3],["option",4]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",22,[[["naivedate",3]],["oldduration",3]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",22,[[],["delayedformat",3]]],[11,"format","","Formats the date with the specified format string. See the…",22,[[],[["strftimeitems",3],["delayedformat",3]]]],[11,"iter_days","","Returns an iterator that steps by days until the last…",22,[[],["naivedatedaysiterator",3]]],[11,"iter_weeks","","Returns an iterator that steps by weeks until the last…",22,[[],["naivedateweeksiterator",3]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",23,[[["naivedate",3],["naivetime",3]],["naivedatetime",3]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",23,[[],["naivedatetime",3]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",23,[[],[["option",4],["naivedatetime",3]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",23,[[],[["parseresult",6],["naivedatetime",3]]]],[11,"date","","Retrieves a date component.",23,[[],["naivedate",3]]],[11,"time","","Retrieves a time component.",23,[[],["naivetime",3]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",23,[[]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",23,[[]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",23,[[]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",23,[[]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",23,[[]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",23,[[]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",23,[[["oldduration",3]],[["option",4],["naivedatetime",3]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",23,[[["oldduration",3]],[["option",4],["naivedatetime",3]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",23,[[["naivedatetime",3]],["oldduration",3]]],[11,"format_with_items","","Formats the combined date and time with the specified…",23,[[],["delayedformat",3]]],[11,"format","","Formats the combined date and time with the specified…",23,[[],[["strftimeitems",3],["delayedformat",3]]]],[11,"year","","Returns the year number for this ISO week.",24,[[]]],[11,"week","","Returns the ISO week number starting from 1.",24,[[]]],[11,"week0","","Returns the ISO week number starting from 0.",24,[[]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",25,[[],["naivetime",3]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",25,[[],[["naivetime",3],["option",4]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",25,[[],["naivetime",3]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",25,[[],[["naivetime",3],["option",4]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",25,[[],["naivetime",3]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",25,[[],[["naivetime",3],["option",4]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",25,[[],["naivetime",3]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",25,[[],[["naivetime",3],["option",4]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",25,[[],["naivetime",3]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",25,[[],[["naivetime",3],["option",4]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",25,[[],[["parseresult",6],["naivetime",3]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",25,[[["oldduration",3]]]],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",25,[[["oldduration",3]]]],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",25,[[["naivetime",3]],["oldduration",3]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",25,[[],["delayedformat",3]]],[11,"format","","Formats the time with the specified format string. See the…",25,[[],[["strftimeitems",3],["delayedformat",3]]]],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",26,[[["naivedate",3]],["date",3]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",26,[[["naivetime",3]],[["option",4],["datetime",3]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",26,[[],["datetime",3]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",26,[[],[["option",4],["datetime",3]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",26,[[],["datetime",3]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",26,[[],[["option",4],["datetime",3]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",26,[[],["datetime",3]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",26,[[],[["option",4],["datetime",3]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",26,[[],["datetime",3]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",26,[[],[["option",4],["datetime",3]]]],[11,"succ","","Makes a new `Date` for the next date.",26,[[],["date",3]]],[11,"succ_opt","","Makes a new `Date` for the next date.",26,[[],[["option",4],["date",3]]]],[11,"pred","","Makes a new `Date` for the prior date.",26,[[],["date",3]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",26,[[],[["option",4],["date",3]]]],[11,"offset","","Retrieves an associated offset from UTC.",26,[[]]],[11,"timezone","","Retrieves an associated time zone.",26,[[]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",26,[[],[["date",3],["timezone",8]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",26,[[["oldduration",3]],[["option",4],["date",3]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",26,[[["oldduration",3]],[["option",4],["date",3]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",26,[[["date",3],["timezone",8]],["oldduration",3]]],[11,"naive_utc","","Returns a view to the naive UTC date.",26,[[],["naivedate",3]]],[11,"naive_local","","Returns a view to the naive local date.",26,[[],["naivedate",3]]],[11,"format_with_items","","Formats the date with the specified formatting items.",26,[[],["delayedformat",3]]],[11,"format","","Formats the date with the specified format string. See the…",26,[[],[["strftimeitems",3],["delayedformat",3]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",27,[[["naivedatetime",3]],["datetime",3]]],[11,"date","","Retrieves a date component.",27,[[],["date",3]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",27,[[],["naivetime",3]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",27,[[]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",27,[[]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",27,[[]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",27,[[]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",27,[[]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",27,[[]]],[11,"offset","","Retrieves an associated offset from UTC.",27,[[]]],[11,"timezone","","Retrieves an associated time zone.",27,[[]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",27,[[],[["datetime",3],["timezone",8]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",27,[[["oldduration",3]],[["option",4],["datetime",3]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",27,[[["oldduration",3]],[["option",4],["datetime",3]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",27,[[["datetime",3],["timezone",8]],["oldduration",3]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",27,[[],["naivedatetime",3]]],[11,"naive_local","","Returns a view to the naive local datetime.",27,[[],["naivedatetime",3]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",27,[[],[["parseresult",6],["datetime",3]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",27,[[],[["parseresult",6],["datetime",3]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",27,[[],[["parseresult",6],["datetime",3]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",27,[[],["string",3]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",27,[[],["string",3]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",27,[[["secondsformat",4]],["string",3]]],[11,"format_with_items","","Formats the combined date and time with the specified…",27,[[],["delayedformat",3]]],[11,"format","","Formats the combined date and time with the specified…",27,[[],[["strftimeitems",3],["delayedformat",3]]]],[11,"new","chrono::format","Returns the initial value of parsed parts.",4,[[],["parsed",3]]],[11,"set_year","","Tries to set the `year` field from given value.",4,[[],["parseresult",6]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",4,[[],["parseresult",6]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",4,[[],["parseresult",6]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",4,[[],["parseresult",6]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",4,[[],["parseresult",6]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",4,[[],["parseresult",6]]],[11,"set_month","","Tries to set the `month` field from given value.",4,[[],["parseresult",6]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",4,[[],["parseresult",6]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",4,[[],["parseresult",6]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",4,[[],["parseresult",6]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",4,[[["weekday",4]],["parseresult",6]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",4,[[],["parseresult",6]]],[11,"set_day","","Tries to set the `day` field from given value.",4,[[],["parseresult",6]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value.…",4,[[],["parseresult",6]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour…",4,[[],["parseresult",6]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields…",4,[[],["parseresult",6]]],[11,"set_minute","","Tries to set the `minute` field from given value.",4,[[],["parseresult",6]]],[11,"set_second","","Tries to set the `second` field from given value.",4,[[],["parseresult",6]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",4,[[],["parseresult",6]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",4,[[],["parseresult",6]]],[11,"set_offset","","Tries to set the `offset` field from given value.",4,[[],["parseresult",6]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",4,[[],[["parseresult",6],["naivedate",3]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",4,[[],[["parseresult",6],["naivetime",3]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,…",4,[[],[["parseresult",6],["naivedatetime",3]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",4,[[],[["fixedoffset",3],["parseresult",6]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given…",4,[[],[["parseresult",6],["datetime",3]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given…",4,[[],[["parseresult",6],["datetime",3]]]]],"p":[[4,"LocalResult"],[8,"Offset"],[8,"TimeZone"],[3,"StrftimeItems"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"DelayedFormat"],[4,"SecondsFormat"],[8,"DurationRound"],[4,"RoundingError"],[8,"SubsecRound"],[4,"Weekday"],[4,"Month"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"FixedOffset"],[3,"Local"],[3,"Utc"],[3,"NaiveDate"],[3,"NaiveDateTime"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"Date"],[3,"DateTime"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"],[3,"ParseWeekdayError"],[3,"ParseMonthError"]]},\
"chrono_tz":{"doc":"Chrono-TZ 0.4.1`Chrono-TZ` is a library that provides…","i":[[0,"Africa","chrono_tz","",null,null],[17,"Abidjan","chrono_tz::Africa","",null,null],[17,"Accra","","",null,null],[17,"Addis_Ababa","","",null,null],[17,"Algiers","","",null,null],[17,"Asmara","","",null,null],[17,"Asmera","","",null,null],[17,"Bamako","","",null,null],[17,"Bangui","","",null,null],[17,"Banjul","","",null,null],[17,"Bissau","","",null,null],[17,"Blantyre","","",null,null],[17,"Brazzaville","","",null,null],[17,"Bujumbura","","",null,null],[17,"Cairo","","",null,null],[17,"Casablanca","","",null,null],[17,"Ceuta","","",null,null],[17,"Conakry","","",null,null],[17,"Dakar","","",null,null],[17,"Dar_es_Salaam","","",null,null],[17,"Djibouti","","",null,null],[17,"Douala","","",null,null],[17,"El_Aaiun","","",null,null],[17,"Freetown","","",null,null],[17,"Gaborone","","",null,null],[17,"Harare","","",null,null],[17,"Johannesburg","","",null,null],[17,"Juba","","",null,null],[17,"Kampala","","",null,null],[17,"Khartoum","","",null,null],[17,"Kigali","","",null,null],[17,"Kinshasa","","",null,null],[17,"Lagos","","",null,null],[17,"Libreville","","",null,null],[17,"Lome","","",null,null],[17,"Luanda","","",null,null],[17,"Lubumbashi","","",null,null],[17,"Lusaka","","",null,null],[17,"Malabo","","",null,null],[17,"Maputo","","",null,null],[17,"Maseru","","",null,null],[17,"Mbabane","","",null,null],[17,"Mogadishu","","",null,null],[17,"Monrovia","","",null,null],[17,"Nairobi","","",null,null],[17,"Ndjamena","","",null,null],[17,"Niamey","","",null,null],[17,"Nouakchott","","",null,null],[17,"Ouagadougou","","",null,null],[17,"PortoNovo","","",null,null],[17,"Sao_Tome","","",null,null],[17,"Timbuktu","","",null,null],[17,"Tripoli","","",null,null],[17,"Tunis","","",null,null],[17,"Windhoek","","",null,null],[0,"America","chrono_tz","",null,null],[0,"Argentina","chrono_tz::America","",null,null],[17,"Buenos_Aires","chrono_tz::America::Argentina","",null,null],[17,"Catamarca","","",null,null],[17,"ComodRivadavia","","",null,null],[17,"Cordoba","","",null,null],[17,"Jujuy","","",null,null],[17,"La_Rioja","","",null,null],[17,"Mendoza","","",null,null],[17,"Rio_Gallegos","","",null,null],[17,"Salta","","",null,null],[17,"San_Juan","","",null,null],[17,"San_Luis","","",null,null],[17,"Tucuman","","",null,null],[17,"Ushuaia","","",null,null],[0,"Indiana","chrono_tz::America","",null,null],[17,"Indianapolis","chrono_tz::America::Indiana","",null,null],[17,"Knox","","",null,null],[17,"Marengo","","",null,null],[17,"Petersburg","","",null,null],[17,"Tell_City","","",null,null],[17,"Vevay","","",null,null],[17,"Vincennes","","",null,null],[17,"Winamac","","",null,null],[0,"Kentucky","chrono_tz::America","",null,null],[17,"Louisville","chrono_tz::America::Kentucky","",null,null],[17,"Monticello","","",null,null],[0,"North_Dakota","chrono_tz::America","",null,null],[17,"Beulah","chrono_tz::America::North_Dakota","",null,null],[17,"Center","","",null,null],[17,"New_Salem","","",null,null],[17,"Adak","chrono_tz::America","",null,null],[17,"Anchorage","","",null,null],[17,"Anguilla","","",null,null],[17,"Antigua","","",null,null],[17,"Araguaina","","",null,null],[17,"Aruba","","",null,null],[17,"Asuncion","","",null,null],[17,"Atikokan","","",null,null],[17,"Atka","","",null,null],[17,"Bahia","","",null,null],[17,"Bahia_Banderas","","",null,null],[17,"Barbados","","",null,null],[17,"Belem","","",null,null],[17,"Belize","","",null,null],[17,"BlancSablon","","",null,null],[17,"Boa_Vista","","",null,null],[17,"Bogota","","",null,null],[17,"Boise","","",null,null],[17,"Buenos_Aires","","",null,null],[17,"Cambridge_Bay","","",null,null],[17,"Campo_Grande","","",null,null],[17,"Cancun","","",null,null],[17,"Caracas","","",null,null],[17,"Catamarca","","",null,null],[17,"Cayenne","","",null,null],[17,"Cayman","","",null,null],[17,"Chicago","","",null,null],[17,"Chihuahua","","",null,null],[17,"Coral_Harbour","","",null,null],[17,"Cordoba","","",null,null],[17,"Costa_Rica","","",null,null],[17,"Creston","","",null,null],[17,"Cuiaba","","",null,null],[17,"Curacao","","",null,null],[17,"Danmarkshavn","","",null,null],[17,"Dawson","","",null,null],[17,"Dawson_Creek","","",null,null],[17,"Denver","","",null,null],[17,"Detroit","","",null,null],[17,"Dominica","","",null,null],[17,"Edmonton","","",null,null],[17,"Eirunepe","","",null,null],[17,"El_Salvador","","",null,null],[17,"Ensenada","","",null,null],[17,"Fort_Nelson","","",null,null],[17,"Fort_Wayne","","",null,null],[17,"Fortaleza","","",null,null],[17,"Glace_Bay","","",null,null],[17,"Godthab","","",null,null],[17,"Goose_Bay","","",null,null],[17,"Grand_Turk","","",null,null],[17,"Grenada","","",null,null],[17,"Guadeloupe","","",null,null],[17,"Guatemala","","",null,null],[17,"Guayaquil","","",null,null],[17,"Guyana","","",null,null],[17,"Halifax","","",null,null],[17,"Havana","","",null,null],[17,"Hermosillo","","",null,null],[17,"Indianapolis","","",null,null],[17,"Inuvik","","",null,null],[17,"Iqaluit","","",null,null],[17,"Jamaica","","",null,null],[17,"Jujuy","","",null,null],[17,"Juneau","","",null,null],[17,"Knox_IN","","",null,null],[17,"Kralendijk","","",null,null],[17,"La_Paz","","",null,null],[17,"Lima","","",null,null],[17,"Los_Angeles","","",null,null],[17,"Louisville","","",null,null],[17,"Lower_Princes","","",null,null],[17,"Maceio","","",null,null],[17,"Managua","","",null,null],[17,"Manaus","","",null,null],[17,"Marigot","","",null,null],[17,"Martinique","","",null,null],[17,"Matamoros","","",null,null],[17,"Mazatlan","","",null,null],[17,"Mendoza","","",null,null],[17,"Menominee","","",null,null],[17,"Merida","","",null,null],[17,"Metlakatla","","",null,null],[17,"Mexico_City","","",null,null],[17,"Miquelon","","",null,null],[17,"Moncton","","",null,null],[17,"Monterrey","","",null,null],[17,"Montevideo","","",null,null],[17,"Montreal","","",null,null],[17,"Montserrat","","",null,null],[17,"Nassau","","",null,null],[17,"New_York","","",null,null],[17,"Nipigon","","",null,null],[17,"Nome","","",null,null],[17,"Noronha","","",null,null],[17,"Nuuk","","",null,null],[17,"Ojinaga","","",null,null],[17,"Panama","","",null,null],[17,"Pangnirtung","","",null,null],[17,"Paramaribo","","",null,null],[17,"Phoenix","","",null,null],[17,"PortauPrince","","",null,null],[17,"Port_of_Spain","","",null,null],[17,"Porto_Acre","","",null,null],[17,"Porto_Velho","","",null,null],[17,"Puerto_Rico","","",null,null],[17,"Punta_Arenas","","",null,null],[17,"Rainy_River","","",null,null],[17,"Rankin_Inlet","","",null,null],[17,"Recife","","",null,null],[17,"Regina","","",null,null],[17,"Resolute","","",null,null],[17,"Rio_Branco","","",null,null],[17,"Rosario","","",null,null],[17,"Santa_Isabel","","",null,null],[17,"Santarem","","",null,null],[17,"Santiago","","",null,null],[17,"Santo_Domingo","","",null,null],[17,"Sao_Paulo","","",null,null],[17,"Scoresbysund","","",null,null],[17,"Shiprock","","",null,null],[17,"Sitka","","",null,null],[17,"St_Barthelemy","","",null,null],[17,"St_Johns","","",null,null],[17,"St_Kitts","","",null,null],[17,"St_Lucia","","",null,null],[17,"St_Thomas","","",null,null],[17,"St_Vincent","","",null,null],[17,"Swift_Current","","",null,null],[17,"Tegucigalpa","","",null,null],[17,"Thule","","",null,null],[17,"Thunder_Bay","","",null,null],[17,"Tijuana","","",null,null],[17,"Toronto","","",null,null],[17,"Tortola","","",null,null],[17,"Vancouver","","",null,null],[17,"Virgin","","",null,null],[17,"Whitehorse","","",null,null],[17,"Winnipeg","","",null,null],[17,"Yakutat","","",null,null],[17,"Yellowknife","","",null,null],[0,"Antarctica","chrono_tz","",null,null],[17,"Casey","chrono_tz::Antarctica","",null,null],[17,"Davis","","",null,null],[17,"DumontDUrville","","",null,null],[17,"Macquarie","","",null,null],[17,"Mawson","","",null,null],[17,"McMurdo","","",null,null],[17,"Palmer","","",null,null],[17,"Rothera","","",null,null],[17,"South_Pole","","",null,null],[17,"Syowa","","",null,null],[17,"Troll","","",null,null],[17,"Vostok","","",null,null],[0,"Arctic","chrono_tz","",null,null],[17,"Longyearbyen","chrono_tz::Arctic","",null,null],[0,"Asia","chrono_tz","",null,null],[17,"Aden","chrono_tz::Asia","",null,null],[17,"Almaty","","",null,null],[17,"Amman","","",null,null],[17,"Anadyr","","",null,null],[17,"Aqtau","","",null,null],[17,"Aqtobe","","",null,null],[17,"Ashgabat","","",null,null],[17,"Ashkhabad","","",null,null],[17,"Atyrau","","",null,null],[17,"Baghdad","","",null,null],[17,"Bahrain","","",null,null],[17,"Baku","","",null,null],[17,"Bangkok","","",null,null],[17,"Barnaul","","",null,null],[17,"Beirut","","",null,null],[17,"Bishkek","","",null,null],[17,"Brunei","","",null,null],[17,"Calcutta","","",null,null],[17,"Chita","","",null,null],[17,"Choibalsan","","",null,null],[17,"Chongqing","","",null,null],[17,"Chungking","","",null,null],[17,"Colombo","","",null,null],[17,"Dacca","","",null,null],[17,"Damascus","","",null,null],[17,"Dhaka","","",null,null],[17,"Dili","","",null,null],[17,"Dubai","","",null,null],[17,"Dushanbe","","",null,null],[17,"Famagusta","","",null,null],[17,"Gaza","","",null,null],[17,"Harbin","","",null,null],[17,"Hebron","","",null,null],[17,"Ho_Chi_Minh","","",null,null],[17,"Hong_Kong","","",null,null],[17,"Hovd","","",null,null],[17,"Irkutsk","","",null,null],[17,"Istanbul","","",null,null],[17,"Jakarta","","",null,null],[17,"Jayapura","","",null,null],[17,"Jerusalem","","",null,null],[17,"Kabul","","",null,null],[17,"Kamchatka","","",null,null],[17,"Karachi","","",null,null],[17,"Kashgar","","",null,null],[17,"Kathmandu","","",null,null],[17,"Katmandu","","",null,null],[17,"Khandyga","","",null,null],[17,"Kolkata","","",null,null],[17,"Krasnoyarsk","","",null,null],[17,"Kuala_Lumpur","","",null,null],[17,"Kuching","","",null,null],[17,"Kuwait","","",null,null],[17,"Macao","","",null,null],[17,"Macau","","",null,null],[17,"Magadan","","",null,null],[17,"Makassar","","",null,null],[17,"Manila","","",null,null],[17,"Muscat","","",null,null],[17,"Nicosia","","",null,null],[17,"Novokuznetsk","","",null,null],[17,"Novosibirsk","","",null,null],[17,"Omsk","","",null,null],[17,"Oral","","",null,null],[17,"Phnom_Penh","","",null,null],[17,"Pontianak","","",null,null],[17,"Pyongyang","","",null,null],[17,"Qatar","","",null,null],[17,"Qostanay","","",null,null],[17,"Qyzylorda","","",null,null],[17,"Rangoon","","",null,null],[17,"Riyadh","","",null,null],[17,"Saigon","","",null,null],[17,"Sakhalin","","",null,null],[17,"Samarkand","","",null,null],[17,"Seoul","","",null,null],[17,"Shanghai","","",null,null],[17,"Singapore","","",null,null],[17,"Srednekolymsk","","",null,null],[17,"Taipei","","",null,null],[17,"Tashkent","","",null,null],[17,"Tbilisi","","",null,null],[17,"Tehran","","",null,null],[17,"Tel_Aviv","","",null,null],[17,"Thimbu","","",null,null],[17,"Thimphu","","",null,null],[17,"Tokyo","","",null,null],[17,"Tomsk","","",null,null],[17,"Ujung_Pandang","","",null,null],[17,"Ulaanbaatar","","",null,null],[17,"Ulan_Bator","","",null,null],[17,"Urumqi","","",null,null],[17,"UstNera","","",null,null],[17,"Vientiane","","",null,null],[17,"Vladivostok","","",null,null],[17,"Yakutsk","","",null,null],[17,"Yangon","","",null,null],[17,"Yekaterinburg","","",null,null],[17,"Yerevan","","",null,null],[0,"Atlantic","chrono_tz","",null,null],[17,"Azores","chrono_tz::Atlantic","",null,null],[17,"Bermuda","","",null,null],[17,"Canary","","",null,null],[17,"Cape_Verde","","",null,null],[17,"Faeroe","","",null,null],[17,"Faroe","","",null,null],[17,"Jan_Mayen","","",null,null],[17,"Madeira","","",null,null],[17,"Reykjavik","","",null,null],[17,"South_Georgia","","",null,null],[17,"St_Helena","","",null,null],[17,"Stanley","","",null,null],[0,"Australia","chrono_tz","",null,null],[17,"ACT","chrono_tz::Australia","",null,null],[17,"Adelaide","","",null,null],[17,"Brisbane","","",null,null],[17,"Broken_Hill","","",null,null],[17,"Canberra","","",null,null],[17,"Currie","","",null,null],[17,"Darwin","","",null,null],[17,"Eucla","","",null,null],[17,"Hobart","","",null,null],[17,"LHI","","",null,null],[17,"Lindeman","","",null,null],[17,"Lord_Howe","","",null,null],[17,"Melbourne","","",null,null],[17,"NSW","","",null,null],[17,"North","","",null,null],[17,"Perth","","",null,null],[17,"Queensland","","",null,null],[17,"South","","",null,null],[17,"Sydney","","",null,null],[17,"Tasmania","","",null,null],[17,"Victoria","","",null,null],[17,"West","","",null,null],[17,"Yancowinna","","",null,null],[0,"Brazil","chrono_tz","",null,null],[17,"Acre","chrono_tz::Brazil","",null,null],[17,"DeNoronha","","",null,null],[17,"East","","",null,null],[17,"West","","",null,null],[0,"Canada","chrono_tz","",null,null],[17,"Atlantic","chrono_tz::Canada","",null,null],[17,"Central","","",null,null],[17,"Eastern","","",null,null],[17,"Mountain","","",null,null],[17,"Newfoundland","","",null,null],[17,"Pacific","","",null,null],[17,"Saskatchewan","","",null,null],[17,"Yukon","","",null,null],[0,"Chile","chrono_tz","",null,null],[17,"Continental","chrono_tz::Chile","",null,null],[17,"EasterIsland","","",null,null],[0,"Etc","chrono_tz","",null,null],[17,"GMT","chrono_tz::Etc","",null,null],[17,"GMTPlus0","","",null,null],[17,"GMTPlus1","","",null,null],[17,"GMTPlus10","","",null,null],[17,"GMTPlus11","","",null,null],[17,"GMTPlus12","","",null,null],[17,"GMTPlus2","","",null,null],[17,"GMTPlus3","","",null,null],[17,"GMTPlus4","","",null,null],[17,"GMTPlus5","","",null,null],[17,"GMTPlus6","","",null,null],[17,"GMTPlus7","","",null,null],[17,"GMTPlus8","","",null,null],[17,"GMTPlus9","","",null,null],[17,"GMTMinus0","","",null,null],[17,"GMTMinus1","","",null,null],[17,"GMTMinus10","","",null,null],[17,"GMTMinus11","","",null,null],[17,"GMTMinus12","","",null,null],[17,"GMTMinus13","","",null,null],[17,"GMTMinus14","","",null,null],[17,"GMTMinus2","","",null,null],[17,"GMTMinus3","","",null,null],[17,"GMTMinus4","","",null,null],[17,"GMTMinus5","","",null,null],[17,"GMTMinus6","","",null,null],[17,"GMTMinus7","","",null,null],[17,"GMTMinus8","","",null,null],[17,"GMTMinus9","","",null,null],[17,"GMT0","","",null,null],[17,"Greenwich","","",null,null],[17,"UCT","","",null,null],[17,"UTC","","",null,null],[17,"Universal","","",null,null],[17,"Zulu","","",null,null],[0,"Europe","chrono_tz","",null,null],[17,"Amsterdam","chrono_tz::Europe","",null,null],[17,"Andorra","","",null,null],[17,"Astrakhan","","",null,null],[17,"Athens","","",null,null],[17,"Belfast","","",null,null],[17,"Belgrade","","",null,null],[17,"Berlin","","",null,null],[17,"Bratislava","","",null,null],[17,"Brussels","","",null,null],[17,"Bucharest","","",null,null],[17,"Budapest","","",null,null],[17,"Busingen","","",null,null],[17,"Chisinau","","",null,null],[17,"Copenhagen","","",null,null],[17,"Dublin","","",null,null],[17,"Gibraltar","","",null,null],[17,"Guernsey","","",null,null],[17,"Helsinki","","",null,null],[17,"Isle_of_Man","","",null,null],[17,"Istanbul","","",null,null],[17,"Jersey","","",null,null],[17,"Kaliningrad","","",null,null],[17,"Kiev","","",null,null],[17,"Kirov","","",null,null],[17,"Lisbon","","",null,null],[17,"Ljubljana","","",null,null],[17,"London","","",null,null],[17,"Luxembourg","","",null,null],[17,"Madrid","","",null,null],[17,"Malta","","",null,null],[17,"Mariehamn","","",null,null],[17,"Minsk","","",null,null],[17,"Monaco","","",null,null],[17,"Moscow","","",null,null],[17,"Nicosia","","",null,null],[17,"Oslo","","",null,null],[17,"Paris","","",null,null],[17,"Podgorica","","",null,null],[17,"Prague","","",null,null],[17,"Riga","","",null,null],[17,"Rome","","",null,null],[17,"Samara","","",null,null],[17,"San_Marino","","",null,null],[17,"Sarajevo","","",null,null],[17,"Saratov","","",null,null],[17,"Simferopol","","",null,null],[17,"Skopje","","",null,null],[17,"Sofia","","",null,null],[17,"Stockholm","","",null,null],[17,"Tallinn","","",null,null],[17,"Tirane","","",null,null],[17,"Tiraspol","","",null,null],[17,"Ulyanovsk","","",null,null],[17,"Uzhgorod","","",null,null],[17,"Vaduz","","",null,null],[17,"Vatican","","",null,null],[17,"Vienna","","",null,null],[17,"Vilnius","","",null,null],[17,"Volgograd","","",null,null],[17,"Warsaw","","",null,null],[17,"Zagreb","","",null,null],[17,"Zaporozhye","","",null,null],[17,"Zurich","","",null,null],[0,"Indian","chrono_tz","",null,null],[17,"Antananarivo","chrono_tz::Indian","",null,null],[17,"Chagos","","",null,null],[17,"Christmas","","",null,null],[17,"Cocos","","",null,null],[17,"Comoro","","",null,null],[17,"Kerguelen","","",null,null],[17,"Mahe","","",null,null],[17,"Maldives","","",null,null],[17,"Mauritius","","",null,null],[17,"Mayotte","","",null,null],[17,"Reunion","","",null,null],[0,"Mexico","chrono_tz","",null,null],[17,"BajaNorte","chrono_tz::Mexico","",null,null],[17,"BajaSur","","",null,null],[17,"General","","",null,null],[0,"Pacific","chrono_tz","",null,null],[17,"Apia","chrono_tz::Pacific","",null,null],[17,"Auckland","","",null,null],[17,"Bougainville","","",null,null],[17,"Chatham","","",null,null],[17,"Chuuk","","",null,null],[17,"Easter","","",null,null],[17,"Efate","","",null,null],[17,"Enderbury","","",null,null],[17,"Fakaofo","","",null,null],[17,"Fiji","","",null,null],[17,"Funafuti","","",null,null],[17,"Galapagos","","",null,null],[17,"Gambier","","",null,null],[17,"Guadalcanal","","",null,null],[17,"Guam","","",null,null],[17,"Honolulu","","",null,null],[17,"Johnston","","",null,null],[17,"Kiritimati","","",null,null],[17,"Kosrae","","",null,null],[17,"Kwajalein","","",null,null],[17,"Majuro","","",null,null],[17,"Marquesas","","",null,null],[17,"Midway","","",null,null],[17,"Nauru","","",null,null],[17,"Niue","","",null,null],[17,"Norfolk","","",null,null],[17,"Noumea","","",null,null],[17,"Pago_Pago","","",null,null],[17,"Palau","","",null,null],[17,"Pitcairn","","",null,null],[17,"Pohnpei","","",null,null],[17,"Ponape","","",null,null],[17,"Port_Moresby","","",null,null],[17,"Rarotonga","","",null,null],[17,"Saipan","","",null,null],[17,"Samoa","","",null,null],[17,"Tahiti","","",null,null],[17,"Tarawa","","",null,null],[17,"Tongatapu","","",null,null],[17,"Truk","","",null,null],[17,"Wake","","",null,null],[17,"Wallis","","",null,null],[17,"Yap","","",null,null],[0,"US","chrono_tz","",null,null],[17,"Alaska","chrono_tz::US","",null,null],[17,"Aleutian","","",null,null],[17,"Arizona","","",null,null],[17,"Central","","",null,null],[17,"EastIndiana","","",null,null],[17,"Eastern","","",null,null],[17,"Hawaii","","",null,null],[17,"IndianaStarke","","",null,null],[17,"Michigan","","",null,null],[17,"Mountain","","",null,null],[17,"Pacific","","",null,null],[17,"PacificNew","","",null,null],[17,"Samoa","","",null,null],[17,"CET","chrono_tz","",null,null],[17,"CST6CDT","","",null,null],[17,"Cuba","","",null,null],[17,"EET","","",null,null],[17,"EST","","",null,null],[17,"EST5EDT","","",null,null],[17,"Egypt","","",null,null],[17,"Eire","","",null,null],[17,"GB","","",null,null],[17,"GBEire","","",null,null],[17,"GMT","","",null,null],[17,"GMTPlus0","","",null,null],[17,"GMTMinus0","","",null,null],[17,"GMT0","","",null,null],[17,"Greenwich","","",null,null],[17,"HST","","",null,null],[17,"Hongkong","","",null,null],[17,"Iceland","","",null,null],[17,"Iran","","",null,null],[17,"Israel","","",null,null],[17,"Jamaica","","",null,null],[17,"Japan","","",null,null],[17,"Kwajalein","","",null,null],[17,"Libya","","",null,null],[17,"MET","","",null,null],[17,"MST","","",null,null],[17,"MST7MDT","","",null,null],[17,"NZ","","",null,null],[17,"NZCHAT","","",null,null],[17,"Navajo","","",null,null],[17,"PRC","","",null,null],[17,"PST8PDT","","",null,null],[17,"Poland","","",null,null],[17,"Portugal","","",null,null],[17,"ROC","","",null,null],[17,"ROK","","",null,null],[17,"Singapore","","",null,null],[17,"Turkey","","",null,null],[17,"UCT","","",null,null],[17,"UTC","","",null,null],[17,"Universal","","",null,null],[17,"WSU","","",null,null],[17,"WET","","",null,null],[17,"Zulu","","",null,null],[8,"OffsetComponents","","Detailed timezone offset components that expose any…",null,null],[10,"base_utc_offset","","The base offset from UTC; this usually doesn\'t change…",0,[[],["duration",3]]],[10,"dst_offset","","The additional offset from UTC that is currently in…",0,[[],["duration",3]]],[8,"OffsetName","","Timezone offset name information.",null,null],[10,"tz_id","","The IANA TZDB identifier (ex: America/New_York)",1,[[]]],[10,"abbreviation","","The abbreviation to use in a longer timestamp (ex: EST)",1,[[]]],[4,"Tz","","TimeZones built at compile time from the tz database",null,null],[13,"Africa__Abidjan","","Africa/Abidjan",2,null],[13,"Africa__Accra","","Africa/Accra",2,null],[13,"Africa__Addis_Ababa","","Africa/Addis_Ababa",2,null],[13,"Africa__Algiers","","Africa/Algiers",2,null],[13,"Africa__Asmara","","Africa/Asmara",2,null],[13,"Africa__Asmera","","Africa/Asmera",2,null],[13,"Africa__Bamako","","Africa/Bamako",2,null],[13,"Africa__Bangui","","Africa/Bangui",2,null],[13,"Africa__Banjul","","Africa/Banjul",2,null],[13,"Africa__Bissau","","Africa/Bissau",2,null],[13,"Africa__Blantyre","","Africa/Blantyre",2,null],[13,"Africa__Brazzaville","","Africa/Brazzaville",2,null],[13,"Africa__Bujumbura","","Africa/Bujumbura",2,null],[13,"Africa__Cairo","","Africa/Cairo",2,null],[13,"Africa__Casablanca","","Africa/Casablanca",2,null],[13,"Africa__Ceuta","","Africa/Ceuta",2,null],[13,"Africa__Conakry","","Africa/Conakry",2,null],[13,"Africa__Dakar","","Africa/Dakar",2,null],[13,"Africa__Dar_es_Salaam","","Africa/Dar_es_Salaam",2,null],[13,"Africa__Djibouti","","Africa/Djibouti",2,null],[13,"Africa__Douala","","Africa/Douala",2,null],[13,"Africa__El_Aaiun","","Africa/El_Aaiun",2,null],[13,"Africa__Freetown","","Africa/Freetown",2,null],[13,"Africa__Gaborone","","Africa/Gaborone",2,null],[13,"Africa__Harare","","Africa/Harare",2,null],[13,"Africa__Johannesburg","","Africa/Johannesburg",2,null],[13,"Africa__Juba","","Africa/Juba",2,null],[13,"Africa__Kampala","","Africa/Kampala",2,null],[13,"Africa__Khartoum","","Africa/Khartoum",2,null],[13,"Africa__Kigali","","Africa/Kigali",2,null],[13,"Africa__Kinshasa","","Africa/Kinshasa",2,null],[13,"Africa__Lagos","","Africa/Lagos",2,null],[13,"Africa__Libreville","","Africa/Libreville",2,null],[13,"Africa__Lome","","Africa/Lome",2,null],[13,"Africa__Luanda","","Africa/Luanda",2,null],[13,"Africa__Lubumbashi","","Africa/Lubumbashi",2,null],[13,"Africa__Lusaka","","Africa/Lusaka",2,null],[13,"Africa__Malabo","","Africa/Malabo",2,null],[13,"Africa__Maputo","","Africa/Maputo",2,null],[13,"Africa__Maseru","","Africa/Maseru",2,null],[13,"Africa__Mbabane","","Africa/Mbabane",2,null],[13,"Africa__Mogadishu","","Africa/Mogadishu",2,null],[13,"Africa__Monrovia","","Africa/Monrovia",2,null],[13,"Africa__Nairobi","","Africa/Nairobi",2,null],[13,"Africa__Ndjamena","","Africa/Ndjamena",2,null],[13,"Africa__Niamey","","Africa/Niamey",2,null],[13,"Africa__Nouakchott","","Africa/Nouakchott",2,null],[13,"Africa__Ouagadougou","","Africa/Ouagadougou",2,null],[13,"Africa__PortoNovo","","Africa/Porto-Novo",2,null],[13,"Africa__Sao_Tome","","Africa/Sao_Tome",2,null],[13,"Africa__Timbuktu","","Africa/Timbuktu",2,null],[13,"Africa__Tripoli","","Africa/Tripoli",2,null],[13,"Africa__Tunis","","Africa/Tunis",2,null],[13,"Africa__Windhoek","","Africa/Windhoek",2,null],[13,"America__Adak","","America/Adak",2,null],[13,"America__Anchorage","","America/Anchorage",2,null],[13,"America__Anguilla","","America/Anguilla",2,null],[13,"America__Antigua","","America/Antigua",2,null],[13,"America__Araguaina","","America/Araguaina",2,null],[13,"America__Argentina__Buenos_Aires","","America/Argentina/Buenos_Aires",2,null],[13,"America__Argentina__Catamarca","","America/Argentina/Catamarca",2,null],[13,"America__Argentina__ComodRivadavia","","America/Argentina/ComodRivadavia",2,null],[13,"America__Argentina__Cordoba","","America/Argentina/Cordoba",2,null],[13,"America__Argentina__Jujuy","","America/Argentina/Jujuy",2,null],[13,"America__Argentina__La_Rioja","","America/Argentina/La_Rioja",2,null],[13,"America__Argentina__Mendoza","","America/Argentina/Mendoza",2,null],[13,"America__Argentina__Rio_Gallegos","","America/Argentina/Rio_Gallegos",2,null],[13,"America__Argentina__Salta","","America/Argentina/Salta",2,null],[13,"America__Argentina__San_Juan","","America/Argentina/San_Juan",2,null],[13,"America__Argentina__San_Luis","","America/Argentina/San_Luis",2,null],[13,"America__Argentina__Tucuman","","America/Argentina/Tucuman",2,null],[13,"America__Argentina__Ushuaia","","America/Argentina/Ushuaia",2,null],[13,"America__Aruba","","America/Aruba",2,null],[13,"America__Asuncion","","America/Asuncion",2,null],[13,"America__Atikokan","","America/Atikokan",2,null],[13,"America__Atka","","America/Atka",2,null],[13,"America__Bahia","","America/Bahia",2,null],[13,"America__Bahia_Banderas","","America/Bahia_Banderas",2,null],[13,"America__Barbados","","America/Barbados",2,null],[13,"America__Belem","","America/Belem",2,null],[13,"America__Belize","","America/Belize",2,null],[13,"America__BlancSablon","","America/Blanc-Sablon",2,null],[13,"America__Boa_Vista","","America/Boa_Vista",2,null],[13,"America__Bogota","","America/Bogota",2,null],[13,"America__Boise","","America/Boise",2,null],[13,"America__Buenos_Aires","","America/Buenos_Aires",2,null],[13,"America__Cambridge_Bay","","America/Cambridge_Bay",2,null],[13,"America__Campo_Grande","","America/Campo_Grande",2,null],[13,"America__Cancun","","America/Cancun",2,null],[13,"America__Caracas","","America/Caracas",2,null],[13,"America__Catamarca","","America/Catamarca",2,null],[13,"America__Cayenne","","America/Cayenne",2,null],[13,"America__Cayman","","America/Cayman",2,null],[13,"America__Chicago","","America/Chicago",2,null],[13,"America__Chihuahua","","America/Chihuahua",2,null],[13,"America__Coral_Harbour","","America/Coral_Harbour",2,null],[13,"America__Cordoba","","America/Cordoba",2,null],[13,"America__Costa_Rica","","America/Costa_Rica",2,null],[13,"America__Creston","","America/Creston",2,null],[13,"America__Cuiaba","","America/Cuiaba",2,null],[13,"America__Curacao","","America/Curacao",2,null],[13,"America__Danmarkshavn","","America/Danmarkshavn",2,null],[13,"America__Dawson","","America/Dawson",2,null],[13,"America__Dawson_Creek","","America/Dawson_Creek",2,null],[13,"America__Denver","","America/Denver",2,null],[13,"America__Detroit","","America/Detroit",2,null],[13,"America__Dominica","","America/Dominica",2,null],[13,"America__Edmonton","","America/Edmonton",2,null],[13,"America__Eirunepe","","America/Eirunepe",2,null],[13,"America__El_Salvador","","America/El_Salvador",2,null],[13,"America__Ensenada","","America/Ensenada",2,null],[13,"America__Fort_Nelson","","America/Fort_Nelson",2,null],[13,"America__Fort_Wayne","","America/Fort_Wayne",2,null],[13,"America__Fortaleza","","America/Fortaleza",2,null],[13,"America__Glace_Bay","","America/Glace_Bay",2,null],[13,"America__Godthab","","America/Godthab",2,null],[13,"America__Goose_Bay","","America/Goose_Bay",2,null],[13,"America__Grand_Turk","","America/Grand_Turk",2,null],[13,"America__Grenada","","America/Grenada",2,null],[13,"America__Guadeloupe","","America/Guadeloupe",2,null],[13,"America__Guatemala","","America/Guatemala",2,null],[13,"America__Guayaquil","","America/Guayaquil",2,null],[13,"America__Guyana","","America/Guyana",2,null],[13,"America__Halifax","","America/Halifax",2,null],[13,"America__Havana","","America/Havana",2,null],[13,"America__Hermosillo","","America/Hermosillo",2,null],[13,"America__Indiana__Indianapolis","","America/Indiana/Indianapolis",2,null],[13,"America__Indiana__Knox","","America/Indiana/Knox",2,null],[13,"America__Indiana__Marengo","","America/Indiana/Marengo",2,null],[13,"America__Indiana__Petersburg","","America/Indiana/Petersburg",2,null],[13,"America__Indiana__Tell_City","","America/Indiana/Tell_City",2,null],[13,"America__Indiana__Vevay","","America/Indiana/Vevay",2,null],[13,"America__Indiana__Vincennes","","America/Indiana/Vincennes",2,null],[13,"America__Indiana__Winamac","","America/Indiana/Winamac",2,null],[13,"America__Indianapolis","","America/Indianapolis",2,null],[13,"America__Inuvik","","America/Inuvik",2,null],[13,"America__Iqaluit","","America/Iqaluit",2,null],[13,"America__Jamaica","","America/Jamaica",2,null],[13,"America__Jujuy","","America/Jujuy",2,null],[13,"America__Juneau","","America/Juneau",2,null],[13,"America__Kentucky__Louisville","","America/Kentucky/Louisville",2,null],[13,"America__Kentucky__Monticello","","America/Kentucky/Monticello",2,null],[13,"America__Knox_IN","","America/Knox_IN",2,null],[13,"America__Kralendijk","","America/Kralendijk",2,null],[13,"America__La_Paz","","America/La_Paz",2,null],[13,"America__Lima","","America/Lima",2,null],[13,"America__Los_Angeles","","America/Los_Angeles",2,null],[13,"America__Louisville","","America/Louisville",2,null],[13,"America__Lower_Princes","","America/Lower_Princes",2,null],[13,"America__Maceio","","America/Maceio",2,null],[13,"America__Managua","","America/Managua",2,null],[13,"America__Manaus","","America/Manaus",2,null],[13,"America__Marigot","","America/Marigot",2,null],[13,"America__Martinique","","America/Martinique",2,null],[13,"America__Matamoros","","America/Matamoros",2,null],[13,"America__Mazatlan","","America/Mazatlan",2,null],[13,"America__Mendoza","","America/Mendoza",2,null],[13,"America__Menominee","","America/Menominee",2,null],[13,"America__Merida","","America/Merida",2,null],[13,"America__Metlakatla","","America/Metlakatla",2,null],[13,"America__Mexico_City","","America/Mexico_City",2,null],[13,"America__Miquelon","","America/Miquelon",2,null],[13,"America__Moncton","","America/Moncton",2,null],[13,"America__Monterrey","","America/Monterrey",2,null],[13,"America__Montevideo","","America/Montevideo",2,null],[13,"America__Montreal","","America/Montreal",2,null],[13,"America__Montserrat","","America/Montserrat",2,null],[13,"America__Nassau","","America/Nassau",2,null],[13,"America__New_York","","America/New_York",2,null],[13,"America__Nipigon","","America/Nipigon",2,null],[13,"America__Nome","","America/Nome",2,null],[13,"America__Noronha","","America/Noronha",2,null],[13,"America__North_Dakota__Beulah","","America/North_Dakota/Beulah",2,null],[13,"America__North_Dakota__Center","","America/North_Dakota/Center",2,null],[13,"America__North_Dakota__New_Salem","","America/North_Dakota/New_Salem",2,null],[13,"America__Nuuk","","America/Nuuk",2,null],[13,"America__Ojinaga","","America/Ojinaga",2,null],[13,"America__Panama","","America/Panama",2,null],[13,"America__Pangnirtung","","America/Pangnirtung",2,null],[13,"America__Paramaribo","","America/Paramaribo",2,null],[13,"America__Phoenix","","America/Phoenix",2,null],[13,"America__PortauPrince","","America/Port-au-Prince",2,null],[13,"America__Port_of_Spain","","America/Port_of_Spain",2,null],[13,"America__Porto_Acre","","America/Porto_Acre",2,null],[13,"America__Porto_Velho","","America/Porto_Velho",2,null],[13,"America__Puerto_Rico","","America/Puerto_Rico",2,null],[13,"America__Punta_Arenas","","America/Punta_Arenas",2,null],[13,"America__Rainy_River","","America/Rainy_River",2,null],[13,"America__Rankin_Inlet","","America/Rankin_Inlet",2,null],[13,"America__Recife","","America/Recife",2,null],[13,"America__Regina","","America/Regina",2,null],[13,"America__Resolute","","America/Resolute",2,null],[13,"America__Rio_Branco","","America/Rio_Branco",2,null],[13,"America__Rosario","","America/Rosario",2,null],[13,"America__Santa_Isabel","","America/Santa_Isabel",2,null],[13,"America__Santarem","","America/Santarem",2,null],[13,"America__Santiago","","America/Santiago",2,null],[13,"America__Santo_Domingo","","America/Santo_Domingo",2,null],[13,"America__Sao_Paulo","","America/Sao_Paulo",2,null],[13,"America__Scoresbysund","","America/Scoresbysund",2,null],[13,"America__Shiprock","","America/Shiprock",2,null],[13,"America__Sitka","","America/Sitka",2,null],[13,"America__St_Barthelemy","","America/St_Barthelemy",2,null],[13,"America__St_Johns","","America/St_Johns",2,null],[13,"America__St_Kitts","","America/St_Kitts",2,null],[13,"America__St_Lucia","","America/St_Lucia",2,null],[13,"America__St_Thomas","","America/St_Thomas",2,null],[13,"America__St_Vincent","","America/St_Vincent",2,null],[13,"America__Swift_Current","","America/Swift_Current",2,null],[13,"America__Tegucigalpa","","America/Tegucigalpa",2,null],[13,"America__Thule","","America/Thule",2,null],[13,"America__Thunder_Bay","","America/Thunder_Bay",2,null],[13,"America__Tijuana","","America/Tijuana",2,null],[13,"America__Toronto","","America/Toronto",2,null],[13,"America__Tortola","","America/Tortola",2,null],[13,"America__Vancouver","","America/Vancouver",2,null],[13,"America__Virgin","","America/Virgin",2,null],[13,"America__Whitehorse","","America/Whitehorse",2,null],[13,"America__Winnipeg","","America/Winnipeg",2,null],[13,"America__Yakutat","","America/Yakutat",2,null],[13,"America__Yellowknife","","America/Yellowknife",2,null],[13,"Antarctica__Casey","","Antarctica/Casey",2,null],[13,"Antarctica__Davis","","Antarctica/Davis",2,null],[13,"Antarctica__DumontDUrville","","Antarctica/DumontDUrville",2,null],[13,"Antarctica__Macquarie","","Antarctica/Macquarie",2,null],[13,"Antarctica__Mawson","","Antarctica/Mawson",2,null],[13,"Antarctica__McMurdo","","Antarctica/McMurdo",2,null],[13,"Antarctica__Palmer","","Antarctica/Palmer",2,null],[13,"Antarctica__Rothera","","Antarctica/Rothera",2,null],[13,"Antarctica__South_Pole","","Antarctica/South_Pole",2,null],[13,"Antarctica__Syowa","","Antarctica/Syowa",2,null],[13,"Antarctica__Troll","","Antarctica/Troll",2,null],[13,"Antarctica__Vostok","","Antarctica/Vostok",2,null],[13,"Arctic__Longyearbyen","","Arctic/Longyearbyen",2,null],[13,"Asia__Aden","","Asia/Aden",2,null],[13,"Asia__Almaty","","Asia/Almaty",2,null],[13,"Asia__Amman","","Asia/Amman",2,null],[13,"Asia__Anadyr","","Asia/Anadyr",2,null],[13,"Asia__Aqtau","","Asia/Aqtau",2,null],[13,"Asia__Aqtobe","","Asia/Aqtobe",2,null],[13,"Asia__Ashgabat","","Asia/Ashgabat",2,null],[13,"Asia__Ashkhabad","","Asia/Ashkhabad",2,null],[13,"Asia__Atyrau","","Asia/Atyrau",2,null],[13,"Asia__Baghdad","","Asia/Baghdad",2,null],[13,"Asia__Bahrain","","Asia/Bahrain",2,null],[13,"Asia__Baku","","Asia/Baku",2,null],[13,"Asia__Bangkok","","Asia/Bangkok",2,null],[13,"Asia__Barnaul","","Asia/Barnaul",2,null],[13,"Asia__Beirut","","Asia/Beirut",2,null],[13,"Asia__Bishkek","","Asia/Bishkek",2,null],[13,"Asia__Brunei","","Asia/Brunei",2,null],[13,"Asia__Calcutta","","Asia/Calcutta",2,null],[13,"Asia__Chita","","Asia/Chita",2,null],[13,"Asia__Choibalsan","","Asia/Choibalsan",2,null],[13,"Asia__Chongqing","","Asia/Chongqing",2,null],[13,"Asia__Chungking","","Asia/Chungking",2,null],[13,"Asia__Colombo","","Asia/Colombo",2,null],[13,"Asia__Dacca","","Asia/Dacca",2,null],[13,"Asia__Damascus","","Asia/Damascus",2,null],[13,"Asia__Dhaka","","Asia/Dhaka",2,null],[13,"Asia__Dili","","Asia/Dili",2,null],[13,"Asia__Dubai","","Asia/Dubai",2,null],[13,"Asia__Dushanbe","","Asia/Dushanbe",2,null],[13,"Asia__Famagusta","","Asia/Famagusta",2,null],[13,"Asia__Gaza","","Asia/Gaza",2,null],[13,"Asia__Harbin","","Asia/Harbin",2,null],[13,"Asia__Hebron","","Asia/Hebron",2,null],[13,"Asia__Ho_Chi_Minh","","Asia/Ho_Chi_Minh",2,null],[13,"Asia__Hong_Kong","","Asia/Hong_Kong",2,null],[13,"Asia__Hovd","","Asia/Hovd",2,null],[13,"Asia__Irkutsk","","Asia/Irkutsk",2,null],[13,"Asia__Istanbul","","Asia/Istanbul",2,null],[13,"Asia__Jakarta","","Asia/Jakarta",2,null],[13,"Asia__Jayapura","","Asia/Jayapura",2,null],[13,"Asia__Jerusalem","","Asia/Jerusalem",2,null],[13,"Asia__Kabul","","Asia/Kabul",2,null],[13,"Asia__Kamchatka","","Asia/Kamchatka",2,null],[13,"Asia__Karachi","","Asia/Karachi",2,null],[13,"Asia__Kashgar","","Asia/Kashgar",2,null],[13,"Asia__Kathmandu","","Asia/Kathmandu",2,null],[13,"Asia__Katmandu","","Asia/Katmandu",2,null],[13,"Asia__Khandyga","","Asia/Khandyga",2,null],[13,"Asia__Kolkata","","Asia/Kolkata",2,null],[13,"Asia__Krasnoyarsk","","Asia/Krasnoyarsk",2,null],[13,"Asia__Kuala_Lumpur","","Asia/Kuala_Lumpur",2,null],[13,"Asia__Kuching","","Asia/Kuching",2,null],[13,"Asia__Kuwait","","Asia/Kuwait",2,null],[13,"Asia__Macao","","Asia/Macao",2,null],[13,"Asia__Macau","","Asia/Macau",2,null],[13,"Asia__Magadan","","Asia/Magadan",2,null],[13,"Asia__Makassar","","Asia/Makassar",2,null],[13,"Asia__Manila","","Asia/Manila",2,null],[13,"Asia__Muscat","","Asia/Muscat",2,null],[13,"Asia__Nicosia","","Asia/Nicosia",2,null],[13,"Asia__Novokuznetsk","","Asia/Novokuznetsk",2,null],[13,"Asia__Novosibirsk","","Asia/Novosibirsk",2,null],[13,"Asia__Omsk","","Asia/Omsk",2,null],[13,"Asia__Oral","","Asia/Oral",2,null],[13,"Asia__Phnom_Penh","","Asia/Phnom_Penh",2,null],[13,"Asia__Pontianak","","Asia/Pontianak",2,null],[13,"Asia__Pyongyang","","Asia/Pyongyang",2,null],[13,"Asia__Qatar","","Asia/Qatar",2,null],[13,"Asia__Qostanay","","Asia/Qostanay",2,null],[13,"Asia__Qyzylorda","","Asia/Qyzylorda",2,null],[13,"Asia__Rangoon","","Asia/Rangoon",2,null],[13,"Asia__Riyadh","","Asia/Riyadh",2,null],[13,"Asia__Saigon","","Asia/Saigon",2,null],[13,"Asia__Sakhalin","","Asia/Sakhalin",2,null],[13,"Asia__Samarkand","","Asia/Samarkand",2,null],[13,"Asia__Seoul","","Asia/Seoul",2,null],[13,"Asia__Shanghai","","Asia/Shanghai",2,null],[13,"Asia__Singapore","","Asia/Singapore",2,null],[13,"Asia__Srednekolymsk","","Asia/Srednekolymsk",2,null],[13,"Asia__Taipei","","Asia/Taipei",2,null],[13,"Asia__Tashkent","","Asia/Tashkent",2,null],[13,"Asia__Tbilisi","","Asia/Tbilisi",2,null],[13,"Asia__Tehran","","Asia/Tehran",2,null],[13,"Asia__Tel_Aviv","","Asia/Tel_Aviv",2,null],[13,"Asia__Thimbu","","Asia/Thimbu",2,null],[13,"Asia__Thimphu","","Asia/Thimphu",2,null],[13,"Asia__Tokyo","","Asia/Tokyo",2,null],[13,"Asia__Tomsk","","Asia/Tomsk",2,null],[13,"Asia__Ujung_Pandang","","Asia/Ujung_Pandang",2,null],[13,"Asia__Ulaanbaatar","","Asia/Ulaanbaatar",2,null],[13,"Asia__Ulan_Bator","","Asia/Ulan_Bator",2,null],[13,"Asia__Urumqi","","Asia/Urumqi",2,null],[13,"Asia__UstNera","","Asia/Ust-Nera",2,null],[13,"Asia__Vientiane","","Asia/Vientiane",2,null],[13,"Asia__Vladivostok","","Asia/Vladivostok",2,null],[13,"Asia__Yakutsk","","Asia/Yakutsk",2,null],[13,"Asia__Yangon","","Asia/Yangon",2,null],[13,"Asia__Yekaterinburg","","Asia/Yekaterinburg",2,null],[13,"Asia__Yerevan","","Asia/Yerevan",2,null],[13,"Atlantic__Azores","","Atlantic/Azores",2,null],[13,"Atlantic__Bermuda","","Atlantic/Bermuda",2,null],[13,"Atlantic__Canary","","Atlantic/Canary",2,null],[13,"Atlantic__Cape_Verde","","Atlantic/Cape_Verde",2,null],[13,"Atlantic__Faeroe","","Atlantic/Faeroe",2,null],[13,"Atlantic__Faroe","","Atlantic/Faroe",2,null],[13,"Atlantic__Jan_Mayen","","Atlantic/Jan_Mayen",2,null],[13,"Atlantic__Madeira","","Atlantic/Madeira",2,null],[13,"Atlantic__Reykjavik","","Atlantic/Reykjavik",2,null],[13,"Atlantic__South_Georgia","","Atlantic/South_Georgia",2,null],[13,"Atlantic__St_Helena","","Atlantic/St_Helena",2,null],[13,"Atlantic__Stanley","","Atlantic/Stanley",2,null],[13,"Australia__ACT","","Australia/ACT",2,null],[13,"Australia__Adelaide","","Australia/Adelaide",2,null],[13,"Australia__Brisbane","","Australia/Brisbane",2,null],[13,"Australia__Broken_Hill","","Australia/Broken_Hill",2,null],[13,"Australia__Canberra","","Australia/Canberra",2,null],[13,"Australia__Currie","","Australia/Currie",2,null],[13,"Australia__Darwin","","Australia/Darwin",2,null],[13,"Australia__Eucla","","Australia/Eucla",2,null],[13,"Australia__Hobart","","Australia/Hobart",2,null],[13,"Australia__LHI","","Australia/LHI",2,null],[13,"Australia__Lindeman","","Australia/Lindeman",2,null],[13,"Australia__Lord_Howe","","Australia/Lord_Howe",2,null],[13,"Australia__Melbourne","","Australia/Melbourne",2,null],[13,"Australia__NSW","","Australia/NSW",2,null],[13,"Australia__North","","Australia/North",2,null],[13,"Australia__Perth","","Australia/Perth",2,null],[13,"Australia__Queensland","","Australia/Queensland",2,null],[13,"Australia__South","","Australia/South",2,null],[13,"Australia__Sydney","","Australia/Sydney",2,null],[13,"Australia__Tasmania","","Australia/Tasmania",2,null],[13,"Australia__Victoria","","Australia/Victoria",2,null],[13,"Australia__West","","Australia/West",2,null],[13,"Australia__Yancowinna","","Australia/Yancowinna",2,null],[13,"Brazil__Acre","","Brazil/Acre",2,null],[13,"Brazil__DeNoronha","","Brazil/DeNoronha",2,null],[13,"Brazil__East","","Brazil/East",2,null],[13,"Brazil__West","","Brazil/West",2,null],[13,"CET","","CET",2,null],[13,"CST6CDT","","CST6CDT",2,null],[13,"Canada__Atlantic","","Canada/Atlantic",2,null],[13,"Canada__Central","","Canada/Central",2,null],[13,"Canada__Eastern","","Canada/Eastern",2,null],[13,"Canada__Mountain","","Canada/Mountain",2,null],[13,"Canada__Newfoundland","","Canada/Newfoundland",2,null],[13,"Canada__Pacific","","Canada/Pacific",2,null],[13,"Canada__Saskatchewan","","Canada/Saskatchewan",2,null],[13,"Canada__Yukon","","Canada/Yukon",2,null],[13,"Chile__Continental","","Chile/Continental",2,null],[13,"Chile__EasterIsland","","Chile/EasterIsland",2,null],[13,"Cuba","","Cuba",2,null],[13,"EET","","EET",2,null],[13,"EST","","EST",2,null],[13,"EST5EDT","","EST5EDT",2,null],[13,"Egypt","","Egypt",2,null],[13,"Eire","","Eire",2,null],[13,"Etc__GMT","","Etc/GMT",2,null],[13,"Etc__GMTPlus0","","Etc/GMT+0",2,null],[13,"Etc__GMTPlus1","","Etc/GMT+1",2,null],[13,"Etc__GMTPlus10","","Etc/GMT+10",2,null],[13,"Etc__GMTPlus11","","Etc/GMT+11",2,null],[13,"Etc__GMTPlus12","","Etc/GMT+12",2,null],[13,"Etc__GMTPlus2","","Etc/GMT+2",2,null],[13,"Etc__GMTPlus3","","Etc/GMT+3",2,null],[13,"Etc__GMTPlus4","","Etc/GMT+4",2,null],[13,"Etc__GMTPlus5","","Etc/GMT+5",2,null],[13,"Etc__GMTPlus6","","Etc/GMT+6",2,null],[13,"Etc__GMTPlus7","","Etc/GMT+7",2,null],[13,"Etc__GMTPlus8","","Etc/GMT+8",2,null],[13,"Etc__GMTPlus9","","Etc/GMT+9",2,null],[13,"Etc__GMTMinus0","","Etc/GMT-0",2,null],[13,"Etc__GMTMinus1","","Etc/GMT-1",2,null],[13,"Etc__GMTMinus10","","Etc/GMT-10",2,null],[13,"Etc__GMTMinus11","","Etc/GMT-11",2,null],[13,"Etc__GMTMinus12","","Etc/GMT-12",2,null],[13,"Etc__GMTMinus13","","Etc/GMT-13",2,null],[13,"Etc__GMTMinus14","","Etc/GMT-14",2,null],[13,"Etc__GMTMinus2","","Etc/GMT-2",2,null],[13,"Etc__GMTMinus3","","Etc/GMT-3",2,null],[13,"Etc__GMTMinus4","","Etc/GMT-4",2,null],[13,"Etc__GMTMinus5","","Etc/GMT-5",2,null],[13,"Etc__GMTMinus6","","Etc/GMT-6",2,null],[13,"Etc__GMTMinus7","","Etc/GMT-7",2,null],[13,"Etc__GMTMinus8","","Etc/GMT-8",2,null],[13,"Etc__GMTMinus9","","Etc/GMT-9",2,null],[13,"Etc__GMT0","","Etc/GMT0",2,null],[13,"Etc__Greenwich","","Etc/Greenwich",2,null],[13,"Etc__UCT","","Etc/UCT",2,null],[13,"Etc__UTC","","Etc/UTC",2,null],[13,"Etc__Universal","","Etc/Universal",2,null],[13,"Etc__Zulu","","Etc/Zulu",2,null],[13,"Europe__Amsterdam","","Europe/Amsterdam",2,null],[13,"Europe__Andorra","","Europe/Andorra",2,null],[13,"Europe__Astrakhan","","Europe/Astrakhan",2,null],[13,"Europe__Athens","","Europe/Athens",2,null],[13,"Europe__Belfast","","Europe/Belfast",2,null],[13,"Europe__Belgrade","","Europe/Belgrade",2,null],[13,"Europe__Berlin","","Europe/Berlin",2,null],[13,"Europe__Bratislava","","Europe/Bratislava",2,null],[13,"Europe__Brussels","","Europe/Brussels",2,null],[13,"Europe__Bucharest","","Europe/Bucharest",2,null],[13,"Europe__Budapest","","Europe/Budapest",2,null],[13,"Europe__Busingen","","Europe/Busingen",2,null],[13,"Europe__Chisinau","","Europe/Chisinau",2,null],[13,"Europe__Copenhagen","","Europe/Copenhagen",2,null],[13,"Europe__Dublin","","Europe/Dublin",2,null],[13,"Europe__Gibraltar","","Europe/Gibraltar",2,null],[13,"Europe__Guernsey","","Europe/Guernsey",2,null],[13,"Europe__Helsinki","","Europe/Helsinki",2,null],[13,"Europe__Isle_of_Man","","Europe/Isle_of_Man",2,null],[13,"Europe__Istanbul","","Europe/Istanbul",2,null],[13,"Europe__Jersey","","Europe/Jersey",2,null],[13,"Europe__Kaliningrad","","Europe/Kaliningrad",2,null],[13,"Europe__Kiev","","Europe/Kiev",2,null],[13,"Europe__Kirov","","Europe/Kirov",2,null],[13,"Europe__Lisbon","","Europe/Lisbon",2,null],[13,"Europe__Ljubljana","","Europe/Ljubljana",2,null],[13,"Europe__London","","Europe/London",2,null],[13,"Europe__Luxembourg","","Europe/Luxembourg",2,null],[13,"Europe__Madrid","","Europe/Madrid",2,null],[13,"Europe__Malta","","Europe/Malta",2,null],[13,"Europe__Mariehamn","","Europe/Mariehamn",2,null],[13,"Europe__Minsk","","Europe/Minsk",2,null],[13,"Europe__Monaco","","Europe/Monaco",2,null],[13,"Europe__Moscow","","Europe/Moscow",2,null],[13,"Europe__Nicosia","","Europe/Nicosia",2,null],[13,"Europe__Oslo","","Europe/Oslo",2,null],[13,"Europe__Paris","","Europe/Paris",2,null],[13,"Europe__Podgorica","","Europe/Podgorica",2,null],[13,"Europe__Prague","","Europe/Prague",2,null],[13,"Europe__Riga","","Europe/Riga",2,null],[13,"Europe__Rome","","Europe/Rome",2,null],[13,"Europe__Samara","","Europe/Samara",2,null],[13,"Europe__San_Marino","","Europe/San_Marino",2,null],[13,"Europe__Sarajevo","","Europe/Sarajevo",2,null],[13,"Europe__Saratov","","Europe/Saratov",2,null],[13,"Europe__Simferopol","","Europe/Simferopol",2,null],[13,"Europe__Skopje","","Europe/Skopje",2,null],[13,"Europe__Sofia","","Europe/Sofia",2,null],[13,"Europe__Stockholm","","Europe/Stockholm",2,null],[13,"Europe__Tallinn","","Europe/Tallinn",2,null],[13,"Europe__Tirane","","Europe/Tirane",2,null],[13,"Europe__Tiraspol","","Europe/Tiraspol",2,null],[13,"Europe__Ulyanovsk","","Europe/Ulyanovsk",2,null],[13,"Europe__Uzhgorod","","Europe/Uzhgorod",2,null],[13,"Europe__Vaduz","","Europe/Vaduz",2,null],[13,"Europe__Vatican","","Europe/Vatican",2,null],[13,"Europe__Vienna","","Europe/Vienna",2,null],[13,"Europe__Vilnius","","Europe/Vilnius",2,null],[13,"Europe__Volgograd","","Europe/Volgograd",2,null],[13,"Europe__Warsaw","","Europe/Warsaw",2,null],[13,"Europe__Zagreb","","Europe/Zagreb",2,null],[13,"Europe__Zaporozhye","","Europe/Zaporozhye",2,null],[13,"Europe__Zurich","","Europe/Zurich",2,null],[13,"GB","","GB",2,null],[13,"GBEire","","GB-Eire",2,null],[13,"GMT","","GMT",2,null],[13,"GMTPlus0","","GMT+0",2,null],[13,"GMTMinus0","","GMT-0",2,null],[13,"GMT0","","GMT0",2,null],[13,"Greenwich","","Greenwich",2,null],[13,"HST","","HST",2,null],[13,"Hongkong","","Hongkong",2,null],[13,"Iceland","","Iceland",2,null],[13,"Indian__Antananarivo","","Indian/Antananarivo",2,null],[13,"Indian__Chagos","","Indian/Chagos",2,null],[13,"Indian__Christmas","","Indian/Christmas",2,null],[13,"Indian__Cocos","","Indian/Cocos",2,null],[13,"Indian__Comoro","","Indian/Comoro",2,null],[13,"Indian__Kerguelen","","Indian/Kerguelen",2,null],[13,"Indian__Mahe","","Indian/Mahe",2,null],[13,"Indian__Maldives","","Indian/Maldives",2,null],[13,"Indian__Mauritius","","Indian/Mauritius",2,null],[13,"Indian__Mayotte","","Indian/Mayotte",2,null],[13,"Indian__Reunion","","Indian/Reunion",2,null],[13,"Iran","","Iran",2,null],[13,"Israel","","Israel",2,null],[13,"Jamaica","","Jamaica",2,null],[13,"Japan","","Japan",2,null],[13,"Kwajalein","","Kwajalein",2,null],[13,"Libya","","Libya",2,null],[13,"MET","","MET",2,null],[13,"MST","","MST",2,null],[13,"MST7MDT","","MST7MDT",2,null],[13,"Mexico__BajaNorte","","Mexico/BajaNorte",2,null],[13,"Mexico__BajaSur","","Mexico/BajaSur",2,null],[13,"Mexico__General","","Mexico/General",2,null],[13,"NZ","","NZ",2,null],[13,"NZCHAT","","NZ-CHAT",2,null],[13,"Navajo","","Navajo",2,null],[13,"PRC","","PRC",2,null],[13,"PST8PDT","","PST8PDT",2,null],[13,"Pacific__Apia","","Pacific/Apia",2,null],[13,"Pacific__Auckland","","Pacific/Auckland",2,null],[13,"Pacific__Bougainville","","Pacific/Bougainville",2,null],[13,"Pacific__Chatham","","Pacific/Chatham",2,null],[13,"Pacific__Chuuk","","Pacific/Chuuk",2,null],[13,"Pacific__Easter","","Pacific/Easter",2,null],[13,"Pacific__Efate","","Pacific/Efate",2,null],[13,"Pacific__Enderbury","","Pacific/Enderbury",2,null],[13,"Pacific__Fakaofo","","Pacific/Fakaofo",2,null],[13,"Pacific__Fiji","","Pacific/Fiji",2,null],[13,"Pacific__Funafuti","","Pacific/Funafuti",2,null],[13,"Pacific__Galapagos","","Pacific/Galapagos",2,null],[13,"Pacific__Gambier","","Pacific/Gambier",2,null],[13,"Pacific__Guadalcanal","","Pacific/Guadalcanal",2,null],[13,"Pacific__Guam","","Pacific/Guam",2,null],[13,"Pacific__Honolulu","","Pacific/Honolulu",2,null],[13,"Pacific__Johnston","","Pacific/Johnston",2,null],[13,"Pacific__Kiritimati","","Pacific/Kiritimati",2,null],[13,"Pacific__Kosrae","","Pacific/Kosrae",2,null],[13,"Pacific__Kwajalein","","Pacific/Kwajalein",2,null],[13,"Pacific__Majuro","","Pacific/Majuro",2,null],[13,"Pacific__Marquesas","","Pacific/Marquesas",2,null],[13,"Pacific__Midway","","Pacific/Midway",2,null],[13,"Pacific__Nauru","","Pacific/Nauru",2,null],[13,"Pacific__Niue","","Pacific/Niue",2,null],[13,"Pacific__Norfolk","","Pacific/Norfolk",2,null],[13,"Pacific__Noumea","","Pacific/Noumea",2,null],[13,"Pacific__Pago_Pago","","Pacific/Pago_Pago",2,null],[13,"Pacific__Palau","","Pacific/Palau",2,null],[13,"Pacific__Pitcairn","","Pacific/Pitcairn",2,null],[13,"Pacific__Pohnpei","","Pacific/Pohnpei",2,null],[13,"Pacific__Ponape","","Pacific/Ponape",2,null],[13,"Pacific__Port_Moresby","","Pacific/Port_Moresby",2,null],[13,"Pacific__Rarotonga","","Pacific/Rarotonga",2,null],[13,"Pacific__Saipan","","Pacific/Saipan",2,null],[13,"Pacific__Samoa","","Pacific/Samoa",2,null],[13,"Pacific__Tahiti","","Pacific/Tahiti",2,null],[13,"Pacific__Tarawa","","Pacific/Tarawa",2,null],[13,"Pacific__Tongatapu","","Pacific/Tongatapu",2,null],[13,"Pacific__Truk","","Pacific/Truk",2,null],[13,"Pacific__Wake","","Pacific/Wake",2,null],[13,"Pacific__Wallis","","Pacific/Wallis",2,null],[13,"Pacific__Yap","","Pacific/Yap",2,null],[13,"Poland","","Poland",2,null],[13,"Portugal","","Portugal",2,null],[13,"ROC","","ROC",2,null],[13,"ROK","","ROK",2,null],[13,"Singapore","","Singapore",2,null],[13,"Turkey","","Turkey",2,null],[13,"UCT","","UCT",2,null],[13,"US__Alaska","","US/Alaska",2,null],[13,"US__Aleutian","","US/Aleutian",2,null],[13,"US__Arizona","","US/Arizona",2,null],[13,"US__Central","","US/Central",2,null],[13,"US__EastIndiana","","US/East-Indiana",2,null],[13,"US__Eastern","","US/Eastern",2,null],[13,"US__Hawaii","","US/Hawaii",2,null],[13,"US__IndianaStarke","","US/Indiana-Starke",2,null],[13,"US__Michigan","","US/Michigan",2,null],[13,"US__Mountain","","US/Mountain",2,null],[13,"US__Pacific","","US/Pacific",2,null],[13,"US__PacificNew","","US/Pacific-New",2,null],[13,"US__Samoa","","US/Samoa",2,null],[13,"UTC","","UTC",2,null],[13,"Universal","","Universal",2,null],[13,"WSU","","W-SU",2,null],[13,"WET","","WET",2,null],[13,"Zulu","","Zulu",2,null],[7,"TZ_VARIANTS","","An array of every known variant",null,null],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",2,[[],["tz",4]]],[11,"eq","","",2,[[["tz",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"from_str","","",2,[[],["result",4]]],[11,"from_offset","","",2,[[]]],[11,"offset_from_local_date","","",2,[[["naivedate",3]],["localresult",4]]],[11,"offset_from_local_datetime","","",2,[[["naivedatetime",3]],["localresult",4]]],[11,"offset_from_utc_date","","",2,[[["naivedate",3]]]],[11,"offset_from_utc_datetime","","",2,[[["naivedatetime",3]]]],[11,"name","","",2,[[]]]],"p":[[8,"OffsetComponents"],[8,"OffsetName"],[4,"Tz"]]},\
"clap":{"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"App","clap","Used to create a representation of a command line program…",null,null],[4,"AppSettings","","Application level settings, which affect how `App` operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",0,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\\\"itself\\\")`] for all…",0,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",0,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",0,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",0,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",0,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid argument negates subcommands…",0,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",0,null],[13,"ColoredHelp","","Uses colorized help messages.",0,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",0,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",0,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",0,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",0,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",0,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` `App` without affecting any of…",0,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",0,null],[13,"DisableVersion","","Disables `-V` and `--version` `App` without affecting any…",0,null],[13,"DeriveDisplayOrder","","Displays the arguments and `SubCommand`s in the help…",0,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",0,null],[13,"Hidden","","Specifies that this `SubCommand` should be hidden from…",0,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",0,null],[13,"InferSubcommands","","Tries to match unknown args to partial `subcommands` or…",0,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",0,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",0,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",0,null],[13,"SubcommandsNegateReqs","","Allows `SubCommand`s to override all requirements of the…",0,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",0,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",0,null],[13,"SubcommandRequired","","Allows specifying that if no `SubCommand` is present at…",0,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \\\"VarArg\\\"…",0,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",0,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all `SubCommand`s…",0,null],[13,"WaitOnError","","Will display a message \\\"Press [ENTER]/[RETURN] to…",0,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related arguments and way for…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",1,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",1,null],[13,"EmptyValues","","The argument allows empty values such as `--option \\\"\\\"`",1,null],[13,"Global","","The argument should be propagated down through all child…",1,null],[13,"Hidden","","The argument should not be shown in help text",1,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",1,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",1,null],[13,"HidePossibleValues","","Hides the possible values from the help string",1,null],[13,"AllowLeadingHyphen","","Allows vals that start with a \'-\'",1,null],[13,"RequireEquals","","Require options use `--option=val` syntax",1,null],[13,"Last","","Specifies that the arg is the last positional argument and…",1,null],[13,"HideDefaultValue","","Hides the default value from the help string",1,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,null],[13,"HideEnvValues","","Hides ENV values in the help message",1,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",2,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",2,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",2,null],[13,"PowerShell","","Generates a completion file for PowerShell",2,null],[13,"Elvish","","Generates a completion file for Elvish",2,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",3,null],[12,"kind","","The type of error",3,null],[12,"info","","Any additional information passed along, such as the…",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an `Arg` has a set of possible values, and the…",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized `SubCommand`…",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or `SubCommand` is…",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",4,null],[13,"HelpDisplayed","","Not a true \\\"error\\\" as it means `--help` or similar was…",4,null],[13,"VersionDisplayed","","Not a true \\\"error\\\" as it means `--version` or similar was…",4,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",4,null],[13,"Format","","Represents a Format error (which is a part of `Display`).…",4,null],[6,"Result","","Short hand for `Result` type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value `Vec<T>` where `T`…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value `Vec<T>` where `T`…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[["arg",3]]]],[11,"from","","",10,[[["arggroup",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],[["osstr",3],["option",4]]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],[["osstr",3],["option",4]]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",0,[[],["appsettings",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["arg",3]]],[11,"clone","","",7,[[],["argmatches",3]]],[11,"clone","","",8,[[],["values",3]]],[11,"clone","","",9,[[],["osvalues",3]]],[11,"clone","","",10,[[]]],[11,"clone","","",1,[[],["argsettings",4]]],[11,"clone","","",11,[[],["subcommand",3]]],[11,"clone","","",2,[[],["shell",4]]],[11,"clone","","",4,[[],["errorkind",4]]],[11,"default","","",6,[[],["arg",3]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[],["arggroup",3]]],[11,"eq","","",0,[[["appsettings",4]]]],[11,"eq","","",6,[[["arg",3]]]],[11,"eq","","",1,[[["argsettings",4]]]],[11,"eq","","",4,[[["errorkind",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],[["result",4],["string",3]]]],[11,"from_str","","",1,[[],[["result",4],["string",3]]]],[11,"from_str","","",2,[[],["result",4]]],[11,"description","","",3,[[]]],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["into",8],["string",3]]]],[11,"get_name","","Get the name of the app",5,[[]]],[11,"get_bin_name","","Get the name of the binary",5,[[],["option",4]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["into",8],["string",3]]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["into",8]]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["into",8],["string",3]]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"name","","Sets the program\'s name. This will be displayed when…",5,[[["into",8],["string",3]]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["into",8]]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["into",8]]]],[11,"help_short","","Sets the `short` for the auto-generated `help` argument.",5,[[["asref",8]]]],[11,"version_short","","Sets the `short` for the auto-generated `version` argument.",5,[[["asref",8]]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["into",8]]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["into",8]]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["into",8]]]],[11,"setting","","Enables a single command, or `SubCommand`, level settings.",5,[[["appsettings",4]]]],[11,"settings","","Enables multiple command, or `SubCommand`, level settings",5,[[]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings",4]]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[]]],[11,"unset_setting","","Disables a single command, or `SubCommand`, level setting.",5,[[["appsettings",4]]]],[11,"unset_settings","","Disables multiple command, or `SubCommand`, level settings.",5,[[]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[]]],[11,"arg","","Adds an argument to the list of valid possibilities.",5,[[["into",8],["arg",3]]]],[11,"args","","Adds multiple arguments to the list of valid possibilities",5,[[]]],[11,"arg_from_usage","","A convenience method for adding a single argument from a…",5,[[]]],[11,"args_from_usage","","Adds multiple arguments at once from a usage string, one…",5,[[]]],[11,"alias","","Allows adding a `SubCommand` alias, which function as…",5,[[["into",8]]]],[11,"aliases","","Allows adding `SubCommand` aliases, which function as…",5,[[]]],[11,"visible_alias","","Allows adding a `SubCommand` alias that functions exactly…",5,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple `SubCommand` aliases that functions…",5,[[]]],[11,"group","","Adds an `ArgGroup` to the application. `ArgGroup`s are a…",5,[[["arggroup",3]]]],[11,"groups","","Adds multiple `ArgGroup`s to the `App` at once.",5,[[]]],[11,"subcommand","","Adds a `SubCommand` to the list of valid possibilities.…",5,[[["app",3]]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[]]],[11,"display_order","","Allows custom ordering of `SubCommand`s within the help…",5,[[]]],[11,"print_help","","Prints the full help message to `io::stdout()` using a…",5,[[],["clapresult",6]]],[11,"print_long_help","","Prints the full help message to `io::stdout()` using a…",5,[[],["clapresult",6]]],[11,"write_help","","Writes the full help message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_long_help","","Writes the full help message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_version","","Writes the version message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_long_version","","Writes the version message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["into",8],["osstring",3],["into",8],["string",3],["shell",4]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["shell",4],["into",8],["string",3]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches",3]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from","","Starts the parsing process. Like `App::get_matches` this…",5,[[],["argmatches",3]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the `App`…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"with_name","","Creates a new instance of `Arg` using a unique string…",6,[[]]],[11,"from_usage","","Creates a new instance of `Arg` from a usage string.…",6,[[]]],[11,"short","","Sets the short version of the argument without the…",6,[[["asref",8]]]],[11,"long","","Sets the long version of the argument without the…",6,[[]]],[11,"alias","","Allows adding a `Arg` alias, which function as \\\"hidden\\\"…",6,[[["into",8]]]],[11,"aliases","","Allows adding `Arg` aliases, which function as \\\"hidden\\\"…",6,[[]]],[11,"visible_alias","","Allows adding a `Arg` alias that functions exactly like…",6,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple `Arg` aliases that functions…",6,[[]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[]]],[11,"required_unless","","Sets an arg that override this arg\'s required setting.…",6,[[]]],[11,"required_unless_all","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"required_unless_one","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[]]],[11,"conflicts_with_all","","The same as `Arg::conflicts_with` but allows specifying…",6,[[]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[]]],[11,"required_if","","Allows specifying that an argument is required…",6,[[]]],[11,"required_ifs","","Allows specifying that an argument is required based on…",6,[[]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[]]],[11,"hidden","","Hides an argument from help message output.",6,[[]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[]]],[11,"group","","Specifies the name of the `ArgGroup` the argument belongs…",6,[[]]],[11,"groups","","Specifies the names of multiple `ArgGroup`\'s the argument…",6,[[]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[]]],[11,"value_name","","Specifies the name for value of option or positional…",6,[[]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr",3]]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["option",4]]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["option",4],["osstr",3]]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr",3]]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[]]],[11,"is_set","","Checks if one of the `ArgSettings` settings is set for the…",6,[[["argsettings",4]]]],[11,"set","","Sets one of the `ArgSettings` settings for the argument.",6,[[["argsettings",4]]]],[11,"unset","","Unsets one of the `ArgSettings` settings for the argument.",6,[[["argsettings",4]]]],[11,"value_of","","Gets the value of a specific option or positional argument…",7,[[["asref",8]],["option",4]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["asref",8]],[["option",4],["cow",4]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["asref",8]],[["osstr",3],["option",4]]]],[11,"values_of","","Gets a `Values` struct which implements `Iterator` for…",7,[[["asref",8]],[["option",4],["values",3]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["asref",8]],[["vec",3],["option",4]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["asref",8]],[["option",4],["osvalues",3]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["asref",8]]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["asref",8]]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["asref",8]],["option",4]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["asref",8]],[["indices",3],["option",4]]]],[11,"subcommand_matches","","Because `Subcommand`s are essentially \\\"sub-`App`s\\\" they…",7,[[["asref",8]],[["option",4],["argmatches",3]]]],[11,"subcommand_name","","Because `Subcommand`s are essentially \\\"sub-`App`s\\\" they…",7,[[],["option",4]]],[11,"subcommand","","This brings together `ArgMatches::subcommand_matches` and…",7,[[]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",10,[[]]],[11,"arg","","Adds an argument to this group by name",10,[[]]],[11,"args","","Adds multiple arguments to this group by name",10,[[]]],[11,"multiple","","Allows more than one of the \'Arg\'s in this group to be…",10,[[]]],[11,"required","","Sets the group as required or not. A required group will…",10,[[]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",10,[[]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",10,[[]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",10,[[]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",10,[[]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",11,[[],["app",3]]],[11,"variants","","A list of possible variants in `&\'static str` form",2,[[]]],[11,"use_stderr","","Should the message be written to `stdout` or not",3,[[]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",3,[[]]],[11,"with_description","","Create an error with a custom description.",3,[[["errorkind",4]]]]],"p":[[4,"AppSettings"],[4,"ArgSettings"],[4,"Shell"],[3,"Error"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"ArgGroup"],[3,"SubCommand"]]},\
"focaccia":{"doc":"Unicode case folding methods for case-insensitive string…","i":[[5,"ascii_case_eq","focaccia","Check two bytestrings for equality with ASCII case folding.",null,[[]]],[5,"ascii_casecmp","","Compare two bytestrings with ASCII case folding.",null,[[],["ordering",4]]],[5,"unicode_full_case_eq","","Check two strings for equality with Full Unicode case…",null,[[]]],[5,"unicode_full_casecmp","","Compare two strings with Full Unicode case folding.",null,[[],["ordering",4]]],[5,"unicode_full_turkic_case_eq","","Check two strings for equality with Full Unicode case…",null,[[]]],[5,"unicode_full_turkic_casecmp","","Compare two strings with Full Unicode case folding for…",null,[[],["ordering",4]]],[4,"CaseFold","","Unicode case folding strategies.",null,null],[13,"Full","","Full Unicode case mapping, suitable for most languages…",0,null],[13,"Ascii","","Only the ASCII region, i.e. the characters \\\"A\\\" to \\\"Z\\\" and…",0,null],[13,"Turkic","","Full Unicode case mapping, adapted for Turkic languages…",0,null],[13,"Lithuanian","","Currently, just full Unicode case mapping. In the future,…",0,null],[11,"new","","Construct a new full Unicode case folding.",0,[[]]],[11,"casecmp","","Make a case-insensitive string comparison based on the…",0,[[],["ordering",4]]],[11,"case_eq","","Make a case-insensitive string equality check based on the…",0,[[]]],[3,"NoSuchCaseFoldingScheme","","Error type for returned when a folding scheme could not be…",null,null],[11,"new","","Construct a new [`NoSuchCaseFoldingScheme`] error.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["casefold",4]]],[11,"clone","","",1,[[],["nosuchcasefoldingscheme",3]]],[11,"default","","Default to full Unicode case folding.",0,[[]]],[11,"default","","",1,[[],["nosuchcasefoldingscheme",3]]],[11,"cmp","","",0,[[["casefold",4]],["ordering",4]]],[11,"cmp","","",1,[[["nosuchcasefoldingscheme",3]],["ordering",4]]],[11,"eq","","",0,[[["casefold",4]]]],[11,"eq","","",1,[[["nosuchcasefoldingscheme",3]]]],[11,"ne","","",1,[[["nosuchcasefoldingscheme",3]]]],[11,"partial_cmp","","",0,[[["casefold",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["nosuchcasefoldingscheme",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["nosuchcasefoldingscheme",3]]]],[11,"le","","",1,[[["nosuchcasefoldingscheme",3]]]],[11,"gt","","",1,[[["nosuchcasefoldingscheme",3]]]],[11,"ge","","",1,[[["nosuchcasefoldingscheme",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"try_from","","",0,[[["option",4]],["result",4]]],[11,"try_from","","",0,[[["option",4]],["result",4]]]],"p":[[4,"CaseFold"],[3,"NoSuchCaseFoldingScheme"]]},\
"getrandom":{"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system\'s preferred…",null,[[],[["result",4],["error",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]]],"p":[[3,"Error"]]},\
"heck":{"doc":"heck is a case conversion library.","i":[[8,"CamelCase","heck","This trait defines a camel case conversion.",null,null],[10,"to_camel_case","","Convert this type to camel case.",0,[[]]],[8,"KebabCase","","This trait defines a kebab case conversion.",null,null],[10,"to_kebab_case","","Convert this type to kebab case.",1,[[]]],[8,"MixedCase","","This trait defines a mixed case conversion.",null,null],[10,"to_mixed_case","","Convert this type to mixed case.",2,[[]]],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",null,null],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",3,[[]]],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",null,null],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",4,[[]]],[8,"SnakeCase","","This trait defines a camel case conversion.",null,null],[10,"to_snake_case","","Convert this type to snake case.",5,[[]]],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",null,null],[10,"to_snek_case","","Convert this type to snek case.",6,[[]]],[8,"TitleCase","","This trait defines a title case conversion.",null,null],[10,"to_title_case","","Convert this type to title case.",7,[[]]]],"p":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]},\
"intaglio":{"doc":"This crate provides a library for interning strings.","i":[[0,"bytes","intaglio","Intern arbitrary bytes.",null,null],[3,"AllSymbols","intaglio::bytes","An iterator over all [`Symbol`]s in a [`SymbolTable`].",null,null],[3,"Bytestrings","","An iterator over all interned bytestrings in a…",null,null],[3,"Iter","","An iterator over all symbols and interned bytestrings in a…",null,null],[3,"SymbolTable","","Byte string interner.",null,null],[11,"new","","Constructs a new, empty `SymbolTable` with default capacity.",0,[[]]],[11,"with_capacity","","Constructs a new, empty `SymbolTable` with the specified…",0,[[]]],[11,"with_hasher","","Constructs a new, empty `SymbolTable` with default…",0,[[]]],[11,"with_capacity_and_hasher","","Constructs a new, empty `SymbolTable` with the specified…",0,[[]]],[11,"capacity","","Returns the number of bytestrings the table can hold…",0,[[]]],[11,"len","","Returns the number of interned bytestrings in the table.",0,[[]]],[11,"is_empty","","Returns `true` if the symbol table contains no interned…",0,[[]]],[11,"contains","","Returns `true` if the symbol table contains the given…",0,[[["symbol",3]]]],[11,"get","","Returns a reference to the byte string associated with the…",0,[[["symbol",3]],["option",4]]],[11,"iter","","Returns an iterator over all [`Symbol`]s and bytestrings…",0,[[],["iter",3]]],[11,"all_symbols","","Returns an iterator over all [`Symbol`]s in the…",0,[[],["allsymbols",3]]],[11,"bytestrings","","Returns an iterator over all bytestrings in the…",0,[[],["bytestrings",3]]],[11,"intern","","Intern a bytestring for the lifetime of the symbol table.",0,[[],[["symbol",3],["symboloverflowerror",3],["result",4]]]],[11,"check_interned","","Returns the `Symbol` identifier for `contents` if it has…",0,[[],[["symbol",3],["option",4]]]],[11,"is_interned","","Returns `true` if the given byte string has been interned…",0,[[]]],[11,"reserve","","Reserves capacity for at least additional more elements to…",0,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the symbol table as much as…",0,[[]]],[3,"AllSymbols","intaglio","An iterator over all [`Symbol`]s in a [`SymbolTable`].",null,null],[3,"Strings","","An iterator over all interned strings in a [`SymbolTable`].",null,null],[3,"Iter","","An iterator over all symbols and interned strings in a…",null,null],[3,"SymbolTable","","UTF-8 string interner.",null,null],[17,"DEFAULT_SYMBOL_TABLE_CAPACITY","","Default capacity for new a [`SymbolTable`].",null,null],[3,"SymbolOverflowError","","Error returned when a [`SymbolTable`] or symbol identifier…",null,null],[11,"new","","Construct a new `SymbolOverflowError` with no source.",1,[[]]],[11,"max_capacity","","Return the maximum capacity of the [`SymbolTable`] that…",1,[[]]],[3,"Symbol","","Identifier bound to an interned string.",null,null],[11,"new","","Construct a new `Symbol` from the given `u32`.",2,[[]]],[11,"id","","Return the `u32` identifier from this `Symbol`.",2,[[]]],[11,"from","intaglio::bytes","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","intaglio","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[["tryfrominterror",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["nonzerou8",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["nonzerou16",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["nonzerou32",3]]]],[11,"next_back","intaglio::bytes","",3,[[],["option",4]]],[11,"nth_back","","",3,[[],["option",4]]],[11,"next_back","","",4,[[],["option",4]]],[11,"nth_back","","",4,[[],["option",4]]],[11,"rfold","","",4,[[]]],[11,"next_back","intaglio","",6,[[],["option",4]]],[11,"nth_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"nth_back","","",7,[[],["option",4]]],[11,"rfold","","",7,[[]]],[11,"len","intaglio::bytes","",4,[[]]],[11,"len","intaglio","",7,[[]]],[11,"next","intaglio::bytes","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[]]],[11,"last","","",3,[[],["option",4]]],[11,"nth","","",3,[[],["option",4]]],[11,"collect","","",3,[[],["fromiterator",8]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"count","","",4,[[]]],[11,"last","","",4,[[],["option",4]]],[11,"nth","","",4,[[],["option",4]]],[11,"collect","","",4,[[],["fromiterator",8]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"count","","",5,[[]]],[11,"last","","",5,[[],["option",4]]],[11,"nth","","",5,[[],["option",4]]],[11,"collect","","",5,[[],["fromiterator",8]]],[11,"next","intaglio","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"count","","",6,[[]]],[11,"last","","",6,[[],["option",4]]],[11,"nth","","",6,[[],["option",4]]],[11,"collect","","",6,[[],["fromiterator",8]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[]]],[11,"last","","",7,[[],["option",4]]],[11,"nth","","",7,[[],["option",4]]],[11,"collect","","",7,[[],["fromiterator",8]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"last","","",8,[[],["option",4]]],[11,"nth","","",8,[[],["option",4]]],[11,"collect","","",8,[[],["fromiterator",8]]],[11,"clone","intaglio::bytes","",3,[[],["allsymbols",3]]],[11,"clone","","",4,[[],["bytestrings",3]]],[11,"clone","","",5,[[],["iter",3]]],[11,"clone","intaglio","",6,[[],["allsymbols",3]]],[11,"clone","","",7,[[],["strings",3]]],[11,"clone","","",8,[[],["iter",3]]],[11,"clone","","",1,[[],["symboloverflowerror",3]]],[11,"clone","","",2,[[],["symbol",3]]],[11,"default","intaglio::bytes","",0,[[],["symboltable",3]]],[11,"default","intaglio","",9,[[],["symboltable",3]]],[11,"default","","",1,[[],["symboloverflowerror",3]]],[11,"cmp","","",2,[[["symbol",3]],["ordering",4]]],[11,"eq","intaglio::bytes","",3,[[["allsymbols",3]]]],[11,"ne","","",3,[[["allsymbols",3]]]],[11,"eq","intaglio","",6,[[["allsymbols",3]]]],[11,"ne","","",6,[[["allsymbols",3]]]],[11,"eq","","",1,[[["symboloverflowerror",3]]]],[11,"ne","","",1,[[["symboloverflowerror",3]]]],[11,"eq","","",2,[[["symbol",3]]]],[11,"ne","","",2,[[["symbol",3]]]],[11,"partial_cmp","","",2,[[["symbol",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["symbol",3]]]],[11,"le","","",2,[[["symbol",3]]]],[11,"gt","","",2,[[["symbol",3]]]],[11,"ge","","",2,[[["symbol",3]]]],[11,"fmt","intaglio::bytes","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","intaglio","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","intaglio::bytes","",3,[[]]],[11,"hash","intaglio","",6,[[]]],[11,"hash","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_from","","",2,[[["nonzerou64",3]],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_from","","",2,[[["nonzerousize",3]],["result",4]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"new","","Constructs a new, empty `SymbolTable` with default capacity.",9,[[]]],[11,"with_capacity","","Constructs a new, empty `SymbolTable` with the specified…",9,[[]]],[11,"with_hasher","","Constructs a new, empty `SymbolTable` with default…",9,[[]]],[11,"with_capacity_and_hasher","","Constructs a new, empty `SymbolTable` with the specified…",9,[[]]],[11,"capacity","","Returns the number of bytestrings the table can hold…",9,[[]]],[11,"len","","Returns the number of interned bytestrings in the table.",9,[[]]],[11,"is_empty","","Returns `true` if the symbol table contains no interned…",9,[[]]],[11,"contains","","Returns `true` if the symbol table contains the given…",9,[[["symbol",3]]]],[11,"get","","Returns a reference to the byte string associated with the…",9,[[["symbol",3]],["option",4]]],[11,"iter","","Returns an iterator over all [`Symbol`]s and bytestrings…",9,[[],["iter",3]]],[11,"all_symbols","","Returns an iterator over all [`Symbol`]s in the…",9,[[],["allsymbols",3]]],[11,"strings","","Returns an iterator over all strings in the [`SymbolTable`].",9,[[],["strings",3]]],[11,"intern","","Intern a bytestring for the lifetime of the symbol table.",9,[[],[["symbol",3],["symboloverflowerror",3],["result",4]]]],[11,"check_interned","","Returns the `Symbol` identifier for `contents` if it has…",9,[[],[["symbol",3],["option",4]]]],[11,"is_interned","","Returns `true` if the given byte string has been interned…",9,[[]]],[11,"reserve","","Reserves capacity for at least additional more elements to…",9,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the symbol table as much as…",9,[[]]]],"p":[[3,"SymbolTable"],[3,"SymbolOverflowError"],[3,"Symbol"],[3,"AllSymbols"],[3,"Bytestrings"],[3,"Iter"],[3,"AllSymbols"],[3,"Strings"],[3,"Iter"],[3,"SymbolTable"]]},\
"itoa":{"doc":"github crates-io docs-rs","i":[[5,"write","itoa","Write integer to an `io::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[3,"Buffer","","A safe API for formatting integers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer",8]]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy…",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes…",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a pointer.",null,null],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[4,"timezone","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[4,"fpos64_t","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","WARNING: The `PartialEq`, `Eq` and `Hash` implementations…",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_ULP","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"fmt","","",139,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["group",3]]]],[11,"ne","","",0,[[["group",3]]]],[11,"eq","","",1,[[["utimbuf",3]]]],[11,"ne","","",1,[[["utimbuf",3]]]],[11,"eq","","",2,[[["timeval",3]]]],[11,"ne","","",2,[[["timeval",3]]]],[11,"eq","","",3,[[["timespec",3]]]],[11,"ne","","",3,[[["timespec",3]]]],[11,"eq","","",4,[[["rlimit",3]]]],[11,"ne","","",4,[[["rlimit",3]]]],[11,"eq","","",5,[[["rusage",3]]]],[11,"ne","","",5,[[["rusage",3]]]],[11,"eq","","",6,[[["ipv6_mreq",3]]]],[11,"ne","","",6,[[["ipv6_mreq",3]]]],[11,"eq","","",7,[[["hostent",3]]]],[11,"ne","","",7,[[["hostent",3]]]],[11,"eq","","",8,[[["iovec",3]]]],[11,"ne","","",8,[[["iovec",3]]]],[11,"eq","","",9,[[["pollfd",3]]]],[11,"ne","","",9,[[["pollfd",3]]]],[11,"eq","","",10,[[["winsize",3]]]],[11,"ne","","",10,[[["winsize",3]]]],[11,"eq","","",11,[[["linger",3]]]],[11,"ne","","",11,[[["linger",3]]]],[11,"eq","","",12,[[["sigval",3]]]],[11,"ne","","",12,[[["sigval",3]]]],[11,"eq","","",13,[[["itimerval",3]]]],[11,"ne","","",13,[[["itimerval",3]]]],[11,"eq","","",14,[[["tms",3]]]],[11,"ne","","",14,[[["tms",3]]]],[11,"eq","","",15,[[["servent",3]]]],[11,"ne","","",15,[[["servent",3]]]],[11,"eq","","",16,[[["protoent",3]]]],[11,"ne","","",16,[[["protoent",3]]]],[11,"eq","","",17,[[["in_addr",3]]]],[11,"ne","","",17,[[["in_addr",3]]]],[11,"eq","","",18,[[["ip_mreq",3]]]],[11,"ne","","",18,[[["ip_mreq",3]]]],[11,"eq","","",19,[[["ip_mreq_source",3]]]],[11,"ne","","",19,[[["ip_mreq_source",3]]]],[11,"eq","","",20,[[["sockaddr",3]]]],[11,"ne","","",20,[[["sockaddr",3]]]],[11,"eq","","",21,[[["sockaddr_in",3]]]],[11,"ne","","",21,[[["sockaddr_in",3]]]],[11,"eq","","",22,[[["sockaddr_in6",3]]]],[11,"ne","","",22,[[["sockaddr_in6",3]]]],[11,"eq","","",23,[[["addrinfo",3]]]],[11,"ne","","",23,[[["addrinfo",3]]]],[11,"eq","","",24,[[["sockaddr_ll",3]]]],[11,"ne","","",24,[[["sockaddr_ll",3]]]],[11,"eq","","",157,[[["fd_set",3]]]],[11,"ne","","",157,[[["fd_set",3]]]],[11,"eq","","",25,[[["tm",3]]]],[11,"ne","","",25,[[["tm",3]]]],[11,"eq","","",26,[[["sched_param",3]]]],[11,"ne","","",26,[[["sched_param",3]]]],[11,"eq","","",27,[[["dl_info",3]]]],[11,"ne","","",27,[[["dl_info",3]]]],[11,"eq","","",28,[[["lconv",3]]]],[11,"ne","","",28,[[["lconv",3]]]],[11,"eq","","",29,[[["in_pktinfo",3]]]],[11,"ne","","",29,[[["in_pktinfo",3]]]],[11,"eq","","",30,[[["ifaddrs",3]]]],[11,"ne","","",30,[[["ifaddrs",3]]]],[11,"eq","","",158,[[["in6_rtmsg",3]]]],[11,"ne","","",158,[[["in6_rtmsg",3]]]],[11,"eq","","",31,[[["arpreq",3]]]],[11,"ne","","",31,[[["arpreq",3]]]],[11,"eq","","",32,[[["arpreq_old",3]]]],[11,"ne","","",32,[[["arpreq_old",3]]]],[11,"eq","","",33,[[["arphdr",3]]]],[11,"ne","","",33,[[["arphdr",3]]]],[11,"eq","","",34,[[["mmsghdr",3]]]],[11,"ne","","",34,[[["mmsghdr",3]]]],[11,"eq","","",35,[[["epoll_event",3]]]],[11,"eq","","",36,[[["sockaddr_un",3]]]],[11,"eq","","",37,[[["sockaddr_storage",3]]]],[11,"eq","","",38,[[["utsname",3]]]],[11,"eq","","",39,[[["sigevent",3]]]],[11,"eq","","",40,[[["rlimit64",3]]]],[11,"ne","","",40,[[["rlimit64",3]]]],[11,"eq","","",41,[[["glob_t",3]]]],[11,"ne","","",41,[[["glob_t",3]]]],[11,"eq","","",42,[[["passwd",3]]]],[11,"ne","","",42,[[["passwd",3]]]],[11,"eq","","",43,[[["spwd",3]]]],[11,"ne","","",43,[[["spwd",3]]]],[11,"eq","","",44,[[["dqblk",3]]]],[11,"ne","","",44,[[["dqblk",3]]]],[11,"eq","","",45,[[["signalfd_siginfo",3]]]],[11,"ne","","",45,[[["signalfd_siginfo",3]]]],[11,"eq","","",46,[[["itimerspec",3]]]],[11,"ne","","",46,[[["itimerspec",3]]]],[11,"eq","","",146,[[["fsid_t",3]]]],[11,"ne","","",146,[[["fsid_t",3]]]],[11,"eq","","",47,[[["packet_mreq",3]]]],[11,"ne","","",47,[[["packet_mreq",3]]]],[11,"eq","","",147,[[["cpu_set_t",3]]]],[11,"ne","","",147,[[["cpu_set_t",3]]]],[11,"eq","","",48,[[["if_nameindex",3]]]],[11,"ne","","",48,[[["if_nameindex",3]]]],[11,"eq","","",49,[[["msginfo",3]]]],[11,"ne","","",49,[[["msginfo",3]]]],[11,"eq","","",50,[[["sembuf",3]]]],[11,"ne","","",50,[[["sembuf",3]]]],[11,"eq","","",51,[[["input_event",3]]]],[11,"ne","","",51,[[["input_event",3]]]],[11,"eq","","",52,[[["input_id",3]]]],[11,"ne","","",52,[[["input_id",3]]]],[11,"eq","","",53,[[["input_absinfo",3]]]],[11,"ne","","",53,[[["input_absinfo",3]]]],[11,"eq","","",54,[[["input_keymap_entry",3]]]],[11,"ne","","",54,[[["input_keymap_entry",3]]]],[11,"eq","","",55,[[["input_mask",3]]]],[11,"ne","","",55,[[["input_mask",3]]]],[11,"eq","","",56,[[["ff_replay",3]]]],[11,"ne","","",56,[[["ff_replay",3]]]],[11,"eq","","",57,[[["ff_trigger",3]]]],[11,"ne","","",57,[[["ff_trigger",3]]]],[11,"eq","","",58,[[["ff_envelope",3]]]],[11,"ne","","",58,[[["ff_envelope",3]]]],[11,"eq","","",59,[[["ff_constant_effect",3]]]],[11,"ne","","",59,[[["ff_constant_effect",3]]]],[11,"eq","","",60,[[["ff_ramp_effect",3]]]],[11,"ne","","",60,[[["ff_ramp_effect",3]]]],[11,"eq","","",61,[[["ff_condition_effect",3]]]],[11,"ne","","",61,[[["ff_condition_effect",3]]]],[11,"eq","","",62,[[["ff_periodic_effect",3]]]],[11,"ne","","",62,[[["ff_periodic_effect",3]]]],[11,"eq","","",63,[[["ff_rumble_effect",3]]]],[11,"ne","","",63,[[["ff_rumble_effect",3]]]],[11,"eq","","",64,[[["ff_effect",3]]]],[11,"ne","","",64,[[["ff_effect",3]]]],[11,"eq","","",65,[[["dl_phdr_info",3]]]],[11,"ne","","",65,[[["dl_phdr_info",3]]]],[11,"eq","","",66,[[["elf32_ehdr",3]]]],[11,"ne","","",66,[[["elf32_ehdr",3]]]],[11,"eq","","",67,[[["elf64_ehdr",3]]]],[11,"ne","","",67,[[["elf64_ehdr",3]]]],[11,"eq","","",68,[[["elf32_sym",3]]]],[11,"ne","","",68,[[["elf32_sym",3]]]],[11,"eq","","",69,[[["elf64_sym",3]]]],[11,"ne","","",69,[[["elf64_sym",3]]]],[11,"eq","","",70,[[["elf32_phdr",3]]]],[11,"ne","","",70,[[["elf32_phdr",3]]]],[11,"eq","","",71,[[["elf64_phdr",3]]]],[11,"ne","","",71,[[["elf64_phdr",3]]]],[11,"eq","","",72,[[["elf32_shdr",3]]]],[11,"ne","","",72,[[["elf32_shdr",3]]]],[11,"eq","","",73,[[["elf64_shdr",3]]]],[11,"ne","","",73,[[["elf64_shdr",3]]]],[11,"eq","","",74,[[["elf32_chdr",3]]]],[11,"ne","","",74,[[["elf32_chdr",3]]]],[11,"eq","","",75,[[["elf64_chdr",3]]]],[11,"ne","","",75,[[["elf64_chdr",3]]]],[11,"eq","","",76,[[["ucred",3]]]],[11,"ne","","",76,[[["ucred",3]]]],[11,"eq","","",77,[[["mntent",3]]]],[11,"ne","","",77,[[["mntent",3]]]],[11,"eq","","",148,[[["posix_spawn_file_actions_t",3]]]],[11,"ne","","",148,[[["posix_spawn_file_actions_t",3]]]],[11,"eq","","",149,[[["posix_spawnattr_t",3]]]],[11,"ne","","",149,[[["posix_spawnattr_t",3]]]],[11,"eq","","",78,[[["genlmsghdr",3]]]],[11,"ne","","",78,[[["genlmsghdr",3]]]],[11,"eq","","",79,[[["in6_pktinfo",3]]]],[11,"ne","","",79,[[["in6_pktinfo",3]]]],[11,"eq","","",80,[[["arpd_request",3]]]],[11,"ne","","",80,[[["arpd_request",3]]]],[11,"eq","","",81,[[["inotify_event",3]]]],[11,"ne","","",81,[[["inotify_event",3]]]],[11,"eq","","",82,[[["fanotify_response",3]]]],[11,"ne","","",82,[[["fanotify_response",3]]]],[11,"eq","","",83,[[["sockaddr_vm",3]]]],[11,"ne","","",83,[[["sockaddr_vm",3]]]],[11,"eq","","",84,[[["regmatch_t",3]]]],[11,"ne","","",84,[[["regmatch_t",3]]]],[11,"eq","","",85,[[["sock_extended_err",3]]]],[11,"ne","","",85,[[["sock_extended_err",3]]]],[11,"eq","","",86,[[["sockaddr_nl",3]]]],[11,"eq","","",87,[[["dirent",3]]]],[11,"eq","","",88,[[["dirent64",3]]]],[11,"eq","","",153,[[["pthread_cond_t",3]]]],[11,"eq","","",154,[[["pthread_mutex_t",3]]]],[11,"eq","","",155,[[["pthread_rwlock_t",3]]]],[11,"eq","","",89,[[["sockaddr_alg",3]]]],[11,"eq","","",90,[[["af_alg_iv",3]]]],[11,"eq","","",91,[[["mq_attr",3]]]],[11,"eq","","",92,[[["statx",3]]]],[11,"ne","","",92,[[["statx",3]]]],[11,"eq","","",93,[[["statx_timestamp",3]]]],[11,"ne","","",93,[[["statx_timestamp",3]]]],[11,"eq","","",94,[[["aiocb",3]]]],[11,"ne","","",94,[[["aiocb",3]]]],[11,"eq","","",95,[[["__exit_status",3]]]],[11,"ne","","",95,[[["__exit_status",3]]]],[11,"eq","","",96,[[["__timeval",3]]]],[11,"ne","","",96,[[["__timeval",3]]]],[11,"eq","","",97,[[["glob64_t",3]]]],[11,"ne","","",97,[[["glob64_t",3]]]],[11,"eq","","",98,[[["msghdr",3]]]],[11,"ne","","",98,[[["msghdr",3]]]],[11,"eq","","",99,[[["cmsghdr",3]]]],[11,"ne","","",99,[[["cmsghdr",3]]]],[11,"eq","","",100,[[["termios",3]]]],[11,"ne","","",100,[[["termios",3]]]],[11,"eq","","",101,[[["mallinfo",3]]]],[11,"ne","","",101,[[["mallinfo",3]]]],[11,"eq","","",102,[[["nlmsghdr",3]]]],[11,"ne","","",102,[[["nlmsghdr",3]]]],[11,"eq","","",103,[[["nlmsgerr",3]]]],[11,"ne","","",103,[[["nlmsgerr",3]]]],[11,"eq","","",104,[[["nl_pktinfo",3]]]],[11,"ne","","",104,[[["nl_pktinfo",3]]]],[11,"eq","","",105,[[["nl_mmap_req",3]]]],[11,"ne","","",105,[[["nl_mmap_req",3]]]],[11,"eq","","",106,[[["nl_mmap_hdr",3]]]],[11,"ne","","",106,[[["nl_mmap_hdr",3]]]],[11,"eq","","",107,[[["nlattr",3]]]],[11,"ne","","",107,[[["nlattr",3]]]],[11,"eq","","",108,[[["rtentry",3]]]],[11,"ne","","",108,[[["rtentry",3]]]],[11,"eq","","",109,[[["timex",3]]]],[11,"ne","","",109,[[["timex",3]]]],[11,"eq","","",110,[[["ntptimeval",3]]]],[11,"ne","","",110,[[["ntptimeval",3]]]],[11,"eq","","",144,[[["regex_t",3]]]],[11,"ne","","",144,[[["regex_t",3]]]],[11,"eq","","",111,[[["utmpx",3]]]],[11,"eq","","",142,[[["sigset_t",3]]]],[11,"ne","","",142,[[["sigset_t",3]]]],[11,"eq","","",112,[[["sysinfo",3]]]],[11,"ne","","",112,[[["sysinfo",3]]]],[11,"eq","","",113,[[["msqid_ds",3]]]],[11,"ne","","",113,[[["msqid_ds",3]]]],[11,"eq","","",114,[[["sigaction",3]]]],[11,"ne","","",114,[[["sigaction",3]]]],[11,"eq","","",115,[[["statfs",3]]]],[11,"ne","","",115,[[["statfs",3]]]],[11,"eq","","",116,[[["flock",3]]]],[11,"ne","","",116,[[["flock",3]]]],[11,"eq","","",117,[[["flock64",3]]]],[11,"ne","","",117,[[["flock64",3]]]],[11,"eq","","",118,[[["siginfo_t",3]]]],[11,"ne","","",118,[[["siginfo_t",3]]]],[11,"eq","","",119,[[["stack_t",3]]]],[11,"ne","","",119,[[["stack_t",3]]]],[11,"eq","","",120,[[["stat",3]]]],[11,"ne","","",120,[[["stat",3]]]],[11,"eq","","",121,[[["stat64",3]]]],[11,"ne","","",121,[[["stat64",3]]]],[11,"eq","","",122,[[["statfs64",3]]]],[11,"ne","","",122,[[["statfs64",3]]]],[11,"eq","","",123,[[["statvfs64",3]]]],[11,"ne","","",123,[[["statvfs64",3]]]],[11,"eq","","",141,[[["pthread_attr_t",3]]]],[11,"ne","","",141,[[["pthread_attr_t",3]]]],[11,"eq","","",124,[[["_libc_fpxreg",3]]]],[11,"ne","","",124,[[["_libc_fpxreg",3]]]],[11,"eq","","",125,[[["_libc_xmmreg",3]]]],[11,"ne","","",125,[[["_libc_xmmreg",3]]]],[11,"eq","","",126,[[["_libc_fpstate",3]]]],[11,"ne","","",126,[[["_libc_fpstate",3]]]],[11,"eq","","",127,[[["user_regs_struct",3]]]],[11,"ne","","",127,[[["user_regs_struct",3]]]],[11,"eq","","",128,[[["user",3]]]],[11,"ne","","",128,[[["user",3]]]],[11,"eq","","",129,[[["mcontext_t",3]]]],[11,"ne","","",129,[[["mcontext_t",3]]]],[11,"eq","","",130,[[["ipc_perm",3]]]],[11,"ne","","",130,[[["ipc_perm",3]]]],[11,"eq","","",131,[[["shmid_ds",3]]]],[11,"ne","","",131,[[["shmid_ds",3]]]],[11,"eq","","",132,[[["termios2",3]]]],[11,"ne","","",132,[[["termios2",3]]]],[11,"eq","","",133,[[["ip_mreqn",3]]]],[11,"ne","","",133,[[["ip_mreqn",3]]]],[11,"eq","","",134,[[["user_fpregs_struct",3]]]],[11,"eq","","",135,[[["ucontext_t",3]]]],[11,"eq","","",136,[[["statvfs",3]]]],[11,"ne","","",136,[[["statvfs",3]]]],[11,"eq","","",143,[[["sem_t",3]]]],[11,"ne","","",143,[[["sem_t",3]]]],[11,"eq","","",150,[[["pthread_mutexattr_t",3]]]],[11,"ne","","",150,[[["pthread_mutexattr_t",3]]]],[11,"eq","","",151,[[["pthread_rwlockattr_t",3]]]],[11,"ne","","",151,[[["pthread_rwlockattr_t",3]]]],[11,"eq","","",152,[[["pthread_condattr_t",3]]]],[11,"ne","","",152,[[["pthread_condattr_t",3]]]],[11,"eq","","",137,[[["fanotify_event_metadata",3]]]],[11,"ne","","",137,[[["fanotify_event_metadata",3]]]],[11,"eq","","",138,[[["in6_addr",3]]]],[11,"ne","","",138,[[["in6_addr",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"clone","","",159,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",160,[[],["file",4]]],[11,"clone","","",161,[[],["fpos_t",4]]],[11,"clone","","",156,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",157,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",158,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",145,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",146,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",147,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",148,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",149,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["fanotify_response",3]]],[11,"clone","","",83,[[],["sockaddr_vm",3]]],[11,"clone","","",84,[[],["regmatch_t",3]]],[11,"clone","","",85,[[],["sock_extended_err",3]]],[11,"clone","","",86,[[],["sockaddr_nl",3]]],[11,"clone","","",87,[[],["dirent",3]]],[11,"clone","","",88,[[],["dirent64",3]]],[11,"clone","","",89,[[],["sockaddr_alg",3]]],[11,"clone","","",90,[[],["af_alg_iv",3]]],[11,"clone","","",91,[[],["mq_attr",3]]],[11,"clone","","",92,[[],["statx",3]]],[11,"clone","","",93,[[],["statx_timestamp",3]]],[11,"clone","","",94,[[],["aiocb",3]]],[11,"clone","","",95,[[],["__exit_status",3]]],[11,"clone","","",96,[[],["__timeval",3]]],[11,"clone","","",97,[[],["glob64_t",3]]],[11,"clone","","",98,[[],["msghdr",3]]],[11,"clone","","",99,[[],["cmsghdr",3]]],[11,"clone","","",100,[[],["termios",3]]],[11,"clone","","",101,[[],["mallinfo",3]]],[11,"clone","","",102,[[],["nlmsghdr",3]]],[11,"clone","","",103,[[],["nlmsgerr",3]]],[11,"clone","","",104,[[],["nl_pktinfo",3]]],[11,"clone","","",105,[[],["nl_mmap_req",3]]],[11,"clone","","",106,[[],["nl_mmap_hdr",3]]],[11,"clone","","",107,[[],["nlattr",3]]],[11,"clone","","",108,[[],["rtentry",3]]],[11,"clone","","",109,[[],["timex",3]]],[11,"clone","","",110,[[],["ntptimeval",3]]],[11,"clone","","",144,[[],["regex_t",3]]],[11,"clone","","",111,[[],["utmpx",3]]],[11,"clone","","",142,[[],["sigset_t",3]]],[11,"clone","","",112,[[],["sysinfo",3]]],[11,"clone","","",113,[[],["msqid_ds",3]]],[11,"clone","","",114,[[],["sigaction",3]]],[11,"clone","","",115,[[],["statfs",3]]],[11,"clone","","",116,[[],["flock",3]]],[11,"clone","","",117,[[],["flock64",3]]],[11,"clone","","",118,[[],["siginfo_t",3]]],[11,"clone","","",119,[[],["stack_t",3]]],[11,"clone","","",120,[[],["stat",3]]],[11,"clone","","",121,[[],["stat64",3]]],[11,"clone","","",122,[[],["statfs64",3]]],[11,"clone","","",123,[[],["statvfs64",3]]],[11,"clone","","",141,[[],["pthread_attr_t",3]]],[11,"clone","","",124,[[],["_libc_fpxreg",3]]],[11,"clone","","",125,[[],["_libc_xmmreg",3]]],[11,"clone","","",126,[[],["_libc_fpstate",3]]],[11,"clone","","",127,[[],["user_regs_struct",3]]],[11,"clone","","",128,[[],["user",3]]],[11,"clone","","",129,[[],["mcontext_t",3]]],[11,"clone","","",130,[[],["ipc_perm",3]]],[11,"clone","","",131,[[],["shmid_ds",3]]],[11,"clone","","",132,[[],["termios2",3]]],[11,"clone","","",133,[[],["ip_mreqn",3]]],[11,"clone","","",134,[[],["user_fpregs_struct",3]]],[11,"clone","","",135,[[],["ucontext_t",3]]],[11,"clone","","",136,[[],["statvfs",3]]],[11,"clone","","",140,[[],["max_align_t",3]]],[11,"clone","","",143,[[],["sem_t",3]]],[11,"clone","","",150,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",151,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",152,[[],["pthread_condattr_t",3]]],[11,"clone","","",137,[[],["fanotify_event_metadata",3]]],[11,"clone","","",153,[[],["pthread_cond_t",3]]],[11,"clone","","",154,[[],["pthread_mutex_t",3]]],[11,"clone","","",155,[[],["pthread_rwlock_t",3]]],[11,"clone","","",138,[[],["in6_addr",3]]],[11,"si_addr","","",118,[[]]],[11,"si_value","","",118,[[],["sigval",3]]],[11,"si_pid","","",118,[[],["pid_t",6]]],[11,"si_uid","","",118,[[],["uid_t",6]]],[11,"si_status","","",118,[[],["c_int",6]]],[11,"si_utime","","",118,[[],["c_long",6]]],[11,"si_stime","","",118,[[],["c_long",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"]]},\
"libm":{"doc":"libm in pure Rust","i":[[5,"acos","libm","Arccosine (f64)",null,[[]]],[5,"acosf","","Arccosine (f32)",null,[[]]],[5,"acosh","","Inverse hyperbolic cosine (f64)",null,[[]]],[5,"acoshf","","Inverse hyperbolic cosine (f32)",null,[[]]],[5,"asin","","Arcsine (f64)",null,[[]]],[5,"asinf","","Arcsine (f32)",null,[[]]],[5,"asinh","","Inverse hyperbolic sine (f64)",null,[[]]],[5,"asinhf","","Inverse hyperbolic sine (f32)",null,[[]]],[5,"atan","","Arctangent (f64)",null,[[]]],[5,"atan2","","Arctangent of y/x (f64)",null,[[]]],[5,"atan2f","","Arctangent of y/x (f32)",null,[[]]],[5,"atanf","","Arctangent (f32)",null,[[]]],[5,"atanh","","Inverse hyperbolic tangent (f64)",null,[[]]],[5,"atanhf","","Inverse hyperbolic tangent (f32)",null,[[]]],[5,"cbrt","","Computes the cube root of the argument.",null,[[]]],[5,"cbrtf","","Cube root (f32)",null,[[]]],[5,"ceil","","Ceil (f64)",null,[[]]],[5,"ceilf","","Ceil (f32)",null,[[]]],[5,"copysign","","Sign of Y, magnitude of X (f64)",null,[[]]],[5,"copysignf","","Sign of Y, magnitude of X (f32)",null,[[]]],[5,"cos","","",null,[[]]],[5,"cosf","","",null,[[]]],[5,"cosh","","Hyperbolic cosine (f64)",null,[[]]],[5,"coshf","","Hyperbolic cosine (f64)",null,[[]]],[5,"erf","","Error function (f64)",null,[[]]],[5,"erfc","","Error function (f64)",null,[[]]],[5,"erfcf","","Error function (f32)",null,[[]]],[5,"erff","","Error function (f32)",null,[[]]],[5,"exp","","Exponential, base e (f64)",null,[[]]],[5,"exp10","","",null,[[]]],[5,"exp10f","","",null,[[]]],[5,"exp2","","Exponential, base 2 (f64)",null,[[]]],[5,"exp2f","","Exponential, base 2 (f32)",null,[[]]],[5,"expf","","Exponential, base e (f32)",null,[[]]],[5,"expm1","","Exponential, base e, of x-1 (f64)",null,[[]]],[5,"expm1f","","Exponential, base e, of x-1 (f32)",null,[[]]],[5,"fabs","","Absolute value (magnitude) (f64) Calculates the absolute…",null,[[]]],[5,"fabsf","","Absolute value (magnitude) (f32) Calculates the absolute…",null,[[]]],[5,"fdim","","Positive difference (f64)",null,[[]]],[5,"fdimf","","Positive difference (f32)",null,[[]]],[5,"floor","","Floor (f64)",null,[[]]],[5,"floorf","","Floor (f32)",null,[[]]],[5,"fma","","Floating multiply add (f64)",null,[[]]],[5,"fmaf","","Floating multiply add (f32)",null,[[]]],[5,"fmax","","",null,[[]]],[5,"fmaxf","","",null,[[]]],[5,"fmin","","",null,[[]]],[5,"fminf","","",null,[[]]],[5,"fmod","","",null,[[]]],[5,"fmodf","","",null,[[]]],[5,"frexp","","",null,[[]]],[5,"frexpf","","",null,[[]]],[5,"hypot","","",null,[[]]],[5,"hypotf","","",null,[[]]],[5,"ilogb","","",null,[[]]],[5,"ilogbf","","",null,[[]]],[5,"j0","","",null,[[]]],[5,"y0","","",null,[[]]],[5,"j0f","","",null,[[]]],[5,"y0f","","",null,[[]]],[5,"j1","","",null,[[]]],[5,"y1","","",null,[[]]],[5,"j1f","","",null,[[]]],[5,"y1f","","",null,[[]]],[5,"jn","","",null,[[]]],[5,"yn","","",null,[[]]],[5,"jnf","","",null,[[]]],[5,"ynf","","",null,[[]]],[5,"ldexp","","",null,[[]]],[5,"ldexpf","","",null,[[]]],[5,"lgamma","","",null,[[]]],[5,"lgamma_r","","",null,[[]]],[5,"lgammaf","","",null,[[]]],[5,"lgammaf_r","","",null,[[]]],[5,"log","","",null,[[]]],[5,"log10","","",null,[[]]],[5,"log10f","","",null,[[]]],[5,"log1p","","",null,[[]]],[5,"log1pf","","",null,[[]]],[5,"log2","","",null,[[]]],[5,"log2f","","",null,[[]]],[5,"logf","","",null,[[]]],[5,"modf","","",null,[[]]],[5,"modff","","",null,[[]]],[5,"nextafter","","",null,[[]]],[5,"nextafterf","","",null,[[]]],[5,"pow","","",null,[[]]],[5,"powf","","",null,[[]]],[5,"remainder","","",null,[[]]],[5,"remainderf","","",null,[[]]],[5,"remquo","","",null,[[]]],[5,"remquof","","",null,[[]]],[5,"round","","",null,[[]]],[5,"roundf","","",null,[[]]],[5,"scalbn","","",null,[[]]],[5,"scalbnf","","",null,[[]]],[5,"sin","","",null,[[]]],[5,"sincos","","",null,[[]]],[5,"sincosf","","",null,[[]]],[5,"sinf","","",null,[[]]],[5,"sinh","","",null,[[]]],[5,"sinhf","","",null,[[]]],[5,"sqrt","","",null,[[]]],[5,"sqrtf","","",null,[[]]],[5,"tan","","",null,[[]]],[5,"tanf","","",null,[[]]],[5,"tanh","","",null,[[]]],[5,"tanhf","","",null,[[]]],[5,"tgamma","","",null,[[]]],[5,"tgammaf","","",null,[[]]],[5,"trunc","","",null,[[]]],[5,"truncf","","",null,[[]]]],"p":[]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[],["levelfilter",4]]],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[],[["level",4],["option",4]]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[]]],[11,"module_path","","The module path of the message.",2,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",2,[[],["option",4]]],[11,"file","","The source file containing the message.",2,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",2,[[],["option",4]]],[11,"line","","The line containing the message.",2,[[],["option",4]]],[3,"RecordBuilder","","Builder for `Record`.",null,null],[11,"new","","Construct new `RecordBuilder`.",3,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",3,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",3,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",3,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",3,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",3,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",3,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[]]],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[11,"new","","Construct a new `MetadataBuilder`.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",5,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",6,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of `set_logger`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ParseLevelError","","The type returned by `from_str` when the string doesn\'t…",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",4,[[["metadata",3]]]],[11,"ne","","",4,[[["metadata",3]]]],[11,"eq","","",5,[[["metadatabuilder",3]]]],[11,"ne","","",5,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["metadata",3]]]],[11,"le","","",4,[[["metadata",3]]]],[11,"gt","","",4,[[["metadata",3]]]],[11,"ge","","",4,[[["metadata",3]]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]]]],[11,"le","","",5,[[["metadatabuilder",3]]]],[11,"gt","","",5,[[["metadatabuilder",3]]]],[11,"ge","","",5,[[["metadatabuilder",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[],[["level",4],["result",4]]]],[11,"from_str","","",1,[[],[["result",4],["levelfilter",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"memchr":{"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],["memchr",3]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr2",3]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr3",3]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],[["memchr",3],["rev",3]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["memchr2",3],["rev",3]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["rev",3],["memchr3",3]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[],["option",4]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[],["memchr2",3]]],[11,"new","","Create a new `Memchr3` that\'s initialized to zero with a…",2,[[],["memchr3",3]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system functions.","i":[[0,"dir","nix","",null,null],[3,"Dir","nix::dir","An open directory.",null,null],[11,"open","","Opens the given path as with `fcntl::open`.",0,[[["mode",3],["oflag",3]],["result",6]]],[11,"openat","","Opens the given path as with `fcntl::openat`.",0,[[["rawfd",6],["mode",3],["oflag",3]],["result",6]]],[11,"from","","Converts from a descriptor-based object, closing the…",0,[[["intorawfd",8]],["result",6]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or…",0,[[["rawfd",6]],["result",6]]],[11,"iter","","Returns an iterator of `Result<Entry>` which rewinds when…",0,[[],["iter",3]]],[3,"Iter","","",null,null],[3,"Entry","","A directory entry, similar to `std::fs::DirEntry`.",null,null],[4,"Type","","",null,null],[13,"Fifo","","",1,null],[13,"CharacterDevice","","",1,null],[13,"Directory","","",1,null],[13,"BlockDevice","","",1,null],[13,"File","","",1,null],[13,"Symlink","","",1,null],[13,"Socket","","",1,null],[11,"ino","","Returns the inode number (`d_ino`) of the underlying…",2,[[]]],[11,"file_name","","Returns the bare file name of this directory entry without…",2,[[],["cstr",3]]],[11,"file_type","","Returns the type of this directory entry, if known.",2,[[],[["option",4],["type",4]]]],[0,"env","nix","",null,null],[5,"clearenv","nix::env","Clear the environment of all name-value pairs.",null,[[],["result",6]]],[0,"errno","nix","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",3,null],[13,"EPERM","","",3,null],[13,"ENOENT","","",3,null],[13,"ESRCH","","",3,null],[13,"EINTR","","",3,null],[13,"EIO","","",3,null],[13,"ENXIO","","",3,null],[13,"E2BIG","","",3,null],[13,"ENOEXEC","","",3,null],[13,"EBADF","","",3,null],[13,"ECHILD","","",3,null],[13,"EAGAIN","","",3,null],[13,"ENOMEM","","",3,null],[13,"EACCES","","",3,null],[13,"EFAULT","","",3,null],[13,"ENOTBLK","","",3,null],[13,"EBUSY","","",3,null],[13,"EEXIST","","",3,null],[13,"EXDEV","","",3,null],[13,"ENODEV","","",3,null],[13,"ENOTDIR","","",3,null],[13,"EISDIR","","",3,null],[13,"EINVAL","","",3,null],[13,"ENFILE","","",3,null],[13,"EMFILE","","",3,null],[13,"ENOTTY","","",3,null],[13,"ETXTBSY","","",3,null],[13,"EFBIG","","",3,null],[13,"ENOSPC","","",3,null],[13,"ESPIPE","","",3,null],[13,"EROFS","","",3,null],[13,"EMLINK","","",3,null],[13,"EPIPE","","",3,null],[13,"EDOM","","",3,null],[13,"ERANGE","","",3,null],[13,"EDEADLK","","",3,null],[13,"ENAMETOOLONG","","",3,null],[13,"ENOLCK","","",3,null],[13,"ENOSYS","","",3,null],[13,"ENOTEMPTY","","",3,null],[13,"ELOOP","","",3,null],[13,"ENOMSG","","",3,null],[13,"EIDRM","","",3,null],[13,"ECHRNG","","",3,null],[13,"EL2NSYNC","","",3,null],[13,"EL3HLT","","",3,null],[13,"EL3RST","","",3,null],[13,"ELNRNG","","",3,null],[13,"EUNATCH","","",3,null],[13,"ENOCSI","","",3,null],[13,"EL2HLT","","",3,null],[13,"EBADE","","",3,null],[13,"EBADR","","",3,null],[13,"EXFULL","","",3,null],[13,"ENOANO","","",3,null],[13,"EBADRQC","","",3,null],[13,"EBADSLT","","",3,null],[13,"EBFONT","","",3,null],[13,"ENOSTR","","",3,null],[13,"ENODATA","","",3,null],[13,"ETIME","","",3,null],[13,"ENOSR","","",3,null],[13,"ENONET","","",3,null],[13,"ENOPKG","","",3,null],[13,"EREMOTE","","",3,null],[13,"ENOLINK","","",3,null],[13,"EADV","","",3,null],[13,"ESRMNT","","",3,null],[13,"ECOMM","","",3,null],[13,"EPROTO","","",3,null],[13,"EMULTIHOP","","",3,null],[13,"EDOTDOT","","",3,null],[13,"EBADMSG","","",3,null],[13,"EOVERFLOW","","",3,null],[13,"ENOTUNIQ","","",3,null],[13,"EBADFD","","",3,null],[13,"EREMCHG","","",3,null],[13,"ELIBACC","","",3,null],[13,"ELIBBAD","","",3,null],[13,"ELIBSCN","","",3,null],[13,"ELIBMAX","","",3,null],[13,"ELIBEXEC","","",3,null],[13,"EILSEQ","","",3,null],[13,"ERESTART","","",3,null],[13,"ESTRPIPE","","",3,null],[13,"EUSERS","","",3,null],[13,"ENOTSOCK","","",3,null],[13,"EDESTADDRREQ","","",3,null],[13,"EMSGSIZE","","",3,null],[13,"EPROTOTYPE","","",3,null],[13,"ENOPROTOOPT","","",3,null],[13,"EPROTONOSUPPORT","","",3,null],[13,"ESOCKTNOSUPPORT","","",3,null],[13,"EOPNOTSUPP","","",3,null],[13,"EPFNOSUPPORT","","",3,null],[13,"EAFNOSUPPORT","","",3,null],[13,"EADDRINUSE","","",3,null],[13,"EADDRNOTAVAIL","","",3,null],[13,"ENETDOWN","","",3,null],[13,"ENETUNREACH","","",3,null],[13,"ENETRESET","","",3,null],[13,"ECONNABORTED","","",3,null],[13,"ECONNRESET","","",3,null],[13,"ENOBUFS","","",3,null],[13,"EISCONN","","",3,null],[13,"ENOTCONN","","",3,null],[13,"ESHUTDOWN","","",3,null],[13,"ETOOMANYREFS","","",3,null],[13,"ETIMEDOUT","","",3,null],[13,"ECONNREFUSED","","",3,null],[13,"EHOSTDOWN","","",3,null],[13,"EHOSTUNREACH","","",3,null],[13,"EALREADY","","",3,null],[13,"EINPROGRESS","","",3,null],[13,"ESTALE","","",3,null],[13,"EUCLEAN","","",3,null],[13,"ENOTNAM","","",3,null],[13,"ENAVAIL","","",3,null],[13,"EISNAM","","",3,null],[13,"EREMOTEIO","","",3,null],[13,"EDQUOT","","",3,null],[13,"ENOMEDIUM","","",3,null],[13,"EMEDIUMTYPE","","",3,null],[13,"ECANCELED","","",3,null],[13,"ENOKEY","","",3,null],[13,"EKEYEXPIRED","","",3,null],[13,"EKEYREVOKED","","",3,null],[13,"EKEYREJECTED","","",3,null],[13,"EOWNERDEAD","","",3,null],[13,"ENOTRECOVERABLE","","",3,null],[13,"ERFKILL","","",3,null],[13,"EHWPOISON","","",3,null],[17,"EWOULDBLOCK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"ENOTSUP","","",null,null],[5,"from_i32","","",null,[[],["errno",4]]],[5,"errno","","Returns the platform-specific value of errno",null,[[]]],[11,"last","","",3,[[]]],[11,"desc","","",3,[[]]],[11,"from_i32","","",3,[[],["errno",4]]],[11,"clear","","",3,[[]]],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel…",3,[[["partialeq",8],["errnosentinel",8]],[["partialeq",8],["errnosentinel",8],["result",6]]]],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and…",null,null],[10,"sentinel","","",4,[[]]],[0,"features","nix","Feature tests for OS functionality",null,null],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",null,[[]]],[0,"fcntl","nix","",null,null],[4,"PosixFadviseAdvice","nix::fcntl","",null,null],[13,"POSIX_FADV_NORMAL","","",5,null],[13,"POSIX_FADV_SEQUENTIAL","","",5,null],[13,"POSIX_FADV_RANDOM","","",5,null],[13,"POSIX_FADV_NOREUSE","","",5,null],[13,"POSIX_FADV_WILLNEED","","",5,null],[13,"POSIX_FADV_DONTNEED","","",5,null],[5,"posix_fadvise","","",null,[[["off_t",6],["rawfd",6],["posixfadviseadvice",4]],[["c_int",6],["result",6]]]],[3,"AtFlags","","",null,null],[18,"AT_REMOVEDIR","","",6,null],[18,"AT_SYMLINK_FOLLOW","","",6,null],[18,"AT_SYMLINK_NOFOLLOW","","",6,null],[18,"AT_NO_AUTOMOUNT","","",6,null],[18,"AT_EMPTY_PATH","","",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["atflags",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["atflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",6,[[["c_int",6]],[["atflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",6,[[["c_int",6]],["atflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[["c_int",6]],["atflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",6,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",6,[[["atflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",6,[[["atflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["atflags",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["atflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["atflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",6,[[["atflags",3]]]],[3,"OFlag","","Configuration options for opened files.",null,null],[18,"O_ACCMODE","","Mask for the access mode of the file.",7,null],[18,"O_APPEND","","Open the file in append-only mode.",7,null],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",7,null],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",7,null],[18,"O_CREAT","","Create the file if it does not exist.",7,null],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",7,null],[18,"O_DIRECTORY","","If the specified path isn\'t a directory, fail.",7,null],[18,"O_DSYNC","","Implicitly follow each `write()` with an `fdatasync()`.",7,null],[18,"O_EXCL","","Error out if a file was not created.",7,null],[18,"O_FSYNC","","Same as `O_SYNC`.",7,null],[18,"O_LARGEFILE","","Allow files whose sizes can\'t be represented in an `off_t`…",7,null],[18,"O_NOATIME","","Do not update the file last access time during `read(2)`s.",7,null],[18,"O_NOCTTY","","Don\'t attach the device as the process\' controlling…",7,null],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",7,null],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",7,null],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",7,null],[18,"O_PATH","","Obtain a file descriptor for low-level access.",7,null],[18,"O_RDONLY","","Only allow reading.",7,null],[18,"O_RDWR","","Allow both reading and writing.",7,null],[18,"O_RSYNC","","Similar to `O_DSYNC` but applies to `read`s instead.",7,null],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",7,null],[18,"O_TMPFILE","","Create an unnamed temporary file.",7,null],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows…",7,null],[18,"O_WRONLY","","Only allow writing.",7,null],[11,"empty","","Returns an empty set of flags",7,[[],["oflag",3]]],[11,"all","","Returns the set containing all flags.",7,[[],["oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",7,[[["c_int",6]],[["oflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",7,[[["c_int",6]],["oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",7,[[["c_int",6]],["oflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",7,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",7,[[["oflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",7,[[["oflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",7,[[["oflag",3]]]],[5,"open","","",null,[[["mode",3],["oflag",3]],[["result",6],["rawfd",6]]]],[5,"openat","","",null,[[["rawfd",6],["mode",3],["oflag",3]],[["result",6],["rawfd",6]]]],[5,"renameat","","",null,[[["option",4],["rawfd",6]],["result",6]]],[5,"readlink","","",null,[[],[["result",6],["osstring",3]]]],[5,"readlinkat","","",null,[[["rawfd",6]],[["result",6],["osstring",3]]]],[3,"SealFlag","","Additional flags for file sealing, which allows for…",null,null],[18,"F_SEAL_SEAL","","Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",8,null],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",8,null],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",8,null],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["sealflag",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["sealflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",8,[[["c_int",6]],[["sealflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",8,[[["c_int",6]],["sealflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["c_int",6]],["sealflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",8,[[["sealflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",8,[[["sealflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["sealflag",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["sealflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["sealflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",8,[[["sealflag",3]]]],[3,"FdFlag","","Additional configuration flags for `fcntl`\'s `F_SETFD`.",null,null],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a…",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["c_int",6]],[["fdflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["fdflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["fdflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["fdflag",3]]]],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",10,null],[13,"F_DUPFD_CLOEXEC","","",10,null],[13,"F_GETFD","","",10,null],[13,"F_SETFD","","",10,null],[13,"F_GETFL","","",10,null],[13,"F_SETFL","","",10,null],[13,"F_SETLK","","",10,null],[13,"F_SETLKW","","",10,null],[13,"F_GETLK","","",10,null],[13,"F_OFD_SETLK","","",10,null],[13,"F_OFD_SETLKW","","",10,null],[13,"F_OFD_GETLK","","",10,null],[13,"F_ADD_SEALS","","",10,null],[13,"F_GET_SEALS","","",10,null],[13,"F_GETPIPE_SZ","","",10,null],[13,"F_SETPIPE_SZ","","",10,null],[5,"fcntl","","",null,[[["rawfd",6],["fcntlarg",4]],[["result",6],["c_int",6]]]],[4,"FlockArg","","",null,null],[13,"LockShared","","",11,null],[13,"LockExclusive","","",11,null],[13,"Unlock","","",11,null],[13,"LockSharedNonblock","","",11,null],[13,"LockExclusiveNonblock","","",11,null],[13,"UnlockNonblock","","",11,null],[5,"flock","","",null,[[["flockarg",4],["rawfd",6]],["result",6]]],[3,"SpliceFFlags","","Additional flags to `splice` and friends.",null,null],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",12,null],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",12,null],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",12,null],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["splicefflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["splicefflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[["c_uint",6]],[["option",4],["splicefflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[["c_uint",6]],["splicefflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_uint",6]],["splicefflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["splicefflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["splicefflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["splicefflags",3]]]],[5,"copy_file_range","","Copy a range of data from one file to another",null,[[["rawfd",6],["loff_t",6],["option",4]],["result",6]]],[5,"splice","","",null,[[["rawfd",6],["loff_t",6],["splicefflags",3],["option",4]],["result",6]]],[5,"tee","","",null,[[["rawfd",6],["splicefflags",3]],["result",6]]],[5,"vmsplice","","",null,[[["rawfd",6],["splicefflags",3]],["result",6]]],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation…",null,null],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",13,null],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",13,null],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",13,null],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",13,null],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file…",13,null],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["fallocateflags",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["fallocateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[["c_int",6]],[["fallocateflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[["c_int",6]],["fallocateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["c_int",6]],["fallocateflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["fallocateflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["fallocateflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["fallocateflags",3]]]],[5,"fallocate","","Manipulates file space.",null,[[["rawfd",6],["fallocateflags",3],["off_t",6]],["result",6]]],[5,"posix_fallocate","","",null,[[["off_t",6],["rawfd",6]],["result",6]]],[0,"ifaddrs","nix","Query network interface addresses",null,null],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by…",null,null],[12,"interface_name","","Name of the network interface",14,null],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",14,null],[12,"address","","Network address of this interface",14,null],[12,"netmask","","Netmask of this interface",14,null],[12,"broadcast","","Broadcast address of this interface, if applicable",14,null],[12,"destination","","Point-to-point destination address",14,null],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",null,null],[5,"getifaddrs","","Get interface addresses using libc\'s `getifaddrs`",null,[[],[["result",6],["interfaceaddressiterator",3]]]],[0,"kmod","nix","Load and unload kernel modules.",null,null],[5,"init_module","nix::kmod","Loads a kernel module from a buffer.",null,[[["cstr",3]],["result",6]]],[3,"ModuleInitFlags","","Flags used by the `finit_module` function.",null,null],[18,"MODULE_INIT_IGNORE_MODVERSIONS","","Ignore symbol version hashes.",15,null],[18,"MODULE_INIT_IGNORE_VERMAGIC","","Ignore kernel version magic.",15,null],[11,"empty","","Returns an empty set of flags",15,[[],["moduleinitflags",3]]],[11,"all","","Returns the set containing all flags.",15,[[],["moduleinitflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",15,[[["c_uint",6]],[["moduleinitflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",15,[[["c_uint",6]],["moduleinitflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",15,[[["c_uint",6]],["moduleinitflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",15,[[["moduleinitflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",15,[[["moduleinitflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",15,[[["moduleinitflags",3]]]],[5,"finit_module","","Loads a kernel module from a given file descriptor.",null,[[["moduleinitflags",3],["cstr",3]],["result",6]]],[3,"DeleteModuleFlags","","Flags used by `delete_module`.",null,null],[18,"O_NONBLOCK","","",16,null],[18,"O_TRUNC","","",16,null],[11,"empty","","Returns an empty set of flags",16,[[],["deletemoduleflags",3]]],[11,"all","","Returns the set containing all flags.",16,[[],["deletemoduleflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",16,[[["c_int",6]],[["deletemoduleflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",16,[[["c_int",6]],["deletemoduleflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["c_int",6]],["deletemoduleflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",16,[[["deletemoduleflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",16,[[["deletemoduleflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",16,[[["deletemoduleflags",3]]]],[5,"delete_module","","Unloads the kernel module with the given name.",null,[[["cstr",3],["deletemoduleflags",3]],["result",6]]],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[18,"MS_RDONLY","","Mount read-only",17,null],[18,"MS_NOSUID","","Ignore suid and sgid bits",17,null],[18,"MS_NODEV","","Disallow access to device special files",17,null],[18,"MS_NOEXEC","","Disallow program execution",17,null],[18,"MS_SYNCHRONOUS","","Writes are synced at once",17,null],[18,"MS_REMOUNT","","Alter flags of a mounted FS",17,null],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",17,null],[18,"MS_DIRSYNC","","Directory modifications are synchronous",17,null],[18,"MS_NOATIME","","Do not update access times",17,null],[18,"MS_NODIRATIME","","Do not update directory access times",17,null],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",17,null],[18,"MS_MOVE","","",17,null],[18,"MS_REC","","",17,null],[18,"MS_SILENT","","",17,null],[18,"MS_POSIXACL","","",17,null],[18,"MS_UNBINDABLE","","",17,null],[18,"MS_PRIVATE","","",17,null],[18,"MS_SLAVE","","",17,null],[18,"MS_SHARED","","",17,null],[18,"MS_RELATIME","","",17,null],[18,"MS_KERNMOUNT","","",17,null],[18,"MS_I_VERSION","","",17,null],[18,"MS_STRICTATIME","","",17,null],[18,"MS_ACTIVE","","",17,null],[18,"MS_NOUSER","","",17,null],[18,"MS_RMT_MASK","","",17,null],[18,"MS_MGC_VAL","","",17,null],[18,"MS_MGC_MSK","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[["c_ulong",6]],[["msflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[["c_ulong",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["c_ulong",6]],["msflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["msflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["msflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["msflags",3]]]],[3,"MntFlags","","",null,null],[18,"MNT_FORCE","","",18,null],[18,"MNT_DETACH","","",18,null],[18,"MNT_EXPIRE","","",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["mntflags",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["mntflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[["c_int",6]],[["mntflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[["c_int",6]],["mntflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[["c_int",6]],["mntflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["mntflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["mntflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["mntflags",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["mntflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["mntflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["mntflags",3]]]],[5,"mount","","",null,[[["msflags",3],["option",4],["option",4],["option",4]],["result",6]]],[5,"umount","","",null,[[],["result",6]]],[5,"umount2","","",null,[[["mntflags",3]],["result",6]]],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[18,"O_RDONLY","","",19,null],[18,"O_WRONLY","","",19,null],[18,"O_RDWR","","",19,null],[18,"O_CREAT","","",19,null],[18,"O_EXCL","","",19,null],[18,"O_NONBLOCK","","",19,null],[18,"O_CLOEXEC","","",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["mq_oflag",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["mq_oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",19,[[["c_int",6]],[["option",4],["mq_oflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",19,[[["c_int",6]],["mq_oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["c_int",6]],["mq_oflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",19,[[["mq_oflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",19,[[["mq_oflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",19,[[["mq_oflag",3]]]],[3,"FdFlag","","",null,null],[18,"FD_CLOEXEC","","",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",20,[[["c_int",6]],[["option",4],["fdflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",20,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",20,[[["fdflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",20,[[["fdflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",20,[[["fdflag",3]]]],[3,"MqAttr","","",null,null],[11,"new","","",21,[[["c_long",6]],["mqattr",3]]],[11,"flags","","",21,[[],["c_long",6]]],[5,"mq_open","","Open a message queue",null,[[["option",4],["mqattr",3],["mode",3],["mq_oflag",3],["cstring",3]],[["result",6],["mqd_t",6]]]],[5,"mq_unlink","","Remove a message queue",null,[[["cstring",3]],["result",6]]],[5,"mq_close","","Close a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_receive","","Receive a message from a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_send","","Send a message to a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_getattr","","Get message queue attributes",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK`…",null,[[["mqattr",3],["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for…",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a…",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[0,"net","nix","Functionality involving network interfaces",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[5,"if_nametoindex","nix::net::if_","Resolve an interface into a interface number.",null,[[],[["c_uint",6],["result",6]]]],[3,"InterfaceFlags","","Standard interface flags, used by `getifaddrs`",null,null],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",22,null],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",22,null],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",22,null],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",22,null],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",22,null],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see `netdevice(7)`)",22,null],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",22,null],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see…",22,null],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",22,null],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",22,null],[18,"IFF_MASTER","","Master of a load balancing bundle. (see `netdevice(7)`)",22,null],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see `netdevice(7)`)",22,null],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",22,null],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see `netdevice(7)`)",22,null],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see `netdevice(7)`)",22,null],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see…",22,null],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",22,null],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",22,null],[18,"IFF_ECHO","","Echo sent packets. Volatile.",22,null],[18,"IFF_NO_PI","","Do not provide packet information",22,null],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",22,null],[18,"IFF_TAP","","TAP device",22,null],[11,"empty","","Returns an empty set of flags",22,[[],["interfaceflags",3]]],[11,"all","","Returns the set containing all flags.",22,[[],["interfaceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",22,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",22,[[["c_int",6]],[["option",4],["interfaceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",22,[[["c_int",6]],["interfaceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",22,[[["c_int",6]],["interfaceflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",22,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",22,[[["interfaceflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",22,[[["interfaceflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",22,[[["interfaceflags",3]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",null,null],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",null,null],[11,"new","","Creates a new `PollFd` specifying the events of interest…",23,[[["rawfd",6],["pollflags",3]],["pollfd",3]]],[11,"revents","","Returns the events that occured in the last call to `poll`…",23,[[],[["option",4],["pollflags",3]]]],[3,"PollFlags","","These flags define the different events that can be…",null,null],[18,"POLLIN","","There is data to read.",24,null],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",24,null],[18,"POLLOUT","","Writing is now possible, though a write larger that the…",24,null],[18,"POLLRDNORM","","Equivalent to `POLLIN`",24,null],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",24,null],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",24,null],[18,"POLLWRBAND","","Priority data may be written.",24,null],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`;…",24,null],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in…",24,null],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in…",24,null],[11,"empty","","Returns an empty set of flags",24,[[],["pollflags",3]]],[11,"all","","Returns the set containing all flags.",24,[[],["pollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[],["c_short",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",24,[[["c_short",6]],[["option",4],["pollflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",24,[[["c_short",6]],["pollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",24,[[["c_short",6]],["pollflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",24,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",24,[[["pollflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",24,[[["pollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["pollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["pollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["pollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",24,[[["pollflags",3]]]],[5,"poll","","`poll` waits for one of a set of file descriptors to…",null,[[["c_int",6]],[["c_int",6],["result",6]]]],[5,"ppoll","","`ppoll()` allows an application to safely wait until…",null,[[["timespec",3],["option",4],["sigset",3]],[["c_int",6],["result",6]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",null,null],[6,"SessionId","nix::pty","",null,null],[3,"Winsize","","",null,null],[12,"ws_row","","",25,null],[12,"ws_col","","",25,null],[12,"ws_xpixel","","",25,null],[12,"ws_ypixel","","",25,null],[3,"OpenptyResult","","Representation of a master/slave pty pair",null,null],[12,"master","","The master port in a virtual pty pair",26,null],[12,"slave","","The slave port in a virtual pty pair",26,null],[3,"ForkptyResult","","Representation of a master with a forked pty",null,null],[12,"master","","The master port in a virtual pty pair",27,null],[12,"fork_result","","Metadata about forked process",27,null],[3,"PtyMaster","","Representation of the Master device in a master/slave pty…",null,null],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",null,[[["ptymaster",3]],["result",6]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",null,[[["oflag",3]],[["result",6],["ptymaster",3]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",null,[[["ptymaster",3]],[["result",6],["string",3]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",null,[[["ptymaster",3]],[["result",6],["string",3]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair…",null,[[["ptymaster",3]],["result",6]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and…",null,[[["into",8],["option",4],["into",8],["option",4]],[["result",6],["openptyresult",3]]]],[5,"forkpty","","Create a new pseudoterminal, returning the master file…",null,[[["into",8],["option",4],["into",8],["option",4]],[["forkptyresult",3],["result",6]]]],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[6,"CloneCb","","",null,null],[3,"CpuSet","","CpuSet represent a bit-mask of CPUs. CpuSets are used by…",null,null],[5,"sched_setaffinity","","`sched_setaffinity` set a thread\'s CPU affinity mask…",null,[[["cpuset",3],["pid",3]],["result",6]]],[5,"sched_getaffinity","","`sched_getaffinity` get a thread\'s CPU affinity mask…",null,[[["pid",3]],[["result",6],["cpuset",3]]]],[5,"clone","","",null,[[["cloneflags",3],["c_int",6],["option",4],["clonecb",6]],[["result",6],["pid",3]]]],[5,"unshare","","",null,[[["cloneflags",3]],["result",6]]],[5,"setns","","",null,[[["rawfd",6],["cloneflags",3]],["result",6]]],[5,"sched_yield","","Explicitly yield the processor to other threads.",null,[[],["result",6]]],[0,"sys","nix","",null,null],[0,"aio","nix::sys","POSIX Asynchronous I/O",null,null],[4,"AioFsyncMode","nix::sys::aio","Mode for `AioCb::fsync`. Controls whether only data or…",null,null],[13,"O_SYNC","","do it like `fsync`",28,null],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",28,null],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given…",null,null],[13,"LIO_NOP","","",29,null],[13,"LIO_WRITE","","",29,null],[13,"LIO_READ","","",29,null],[4,"LioMode","","Mode for `lio_listio`",null,null],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested…",30,null],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",30,null],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",null,null],[13,"AioCanceled","","All outstanding requests were canceled",31,null],[13,"AioNotCanceled","","Some requests were not canceled. Their status should be…",31,null],[13,"AioAllDone","","All of the requests have already finished",31,null],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from…",null,null],[13,"None","","No buffer to own.",32,null],[13,"Phantom","","Keeps a reference to a slice",32,null],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",32,null],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",32,null],[3,"AioCb","","AIO Control Block.",null,null],[11,"buffer","","Remove the inner `Buffer` and return it",33,[[],["buffer",4]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",33,[[],[["option",4],["box",3]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",33,[[],[["box",3],["option",4]]]],[11,"fd","","Returns the underlying file descriptor associated with the…",33,[[],["rawfd",6]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",33,[[["c_int",6],["rawfd",6],["sigevnotify",4]],["aiocb",3]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",33,[[["off_t",6],["rawfd",6],["c_int",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",33,[[["off_t",6],["rawfd",6],["c_int",6],["sigevnotify",4],["lioopcode",4],["borrow",8],["box",3]],["aiocb",3]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for…",33,[[["off_t",6],["rawfd",6],["box",3],["borrowmut",8],["c_int",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",33,[[["off_t",6],["rawfd",6],["c_int",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",33,[[["off_t",6],["rawfd",6],["c_int",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather…",33,[[["off_t",6],["rawfd",6],["c_int",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",33,[[["sigevnotify",4]]]],[11,"cancel","","Cancels an outstanding AIO request.",33,[[],[["result",6],["aiocancelstat",4]]]],[11,"error","","Retrieve error status of an asynchronous operation.",33,[[],["result",6]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",33,[[["aiofsyncmode",4]],["result",6]]],[11,"lio_opcode","","Returns the `aiocb`\'s `LioOpcode` field",33,[[],[["lioopcode",4],["option",4]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",33,[[]]],[11,"offset","","Returns the file offset stored in the `AioCb`",33,[[],["off_t",6]]],[11,"priority","","Returns the priority of the `AioCb`",33,[[],["c_int",6]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",33,[[],["result",6]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",33,[[],["sigevent",3]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",33,[[],["result",6]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",33,[[],["result",6]]],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file…",null,[[["rawfd",6]],[["result",6],["aiocancelstat",4]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the…",null,[[["timespec",3],["option",4]],["result",6]]],[3,"LioCb","","LIO Control Block.",null,null],[12,"aiocbs","","A collection of `AioCb`s. All of these will be issued…",34,null],[11,"with_capacity","","Initialize an empty `LioCb`",34,[[],["liocb",3]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single…",34,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"listio_resubmit","","Resubmits any incomplete operations with `lio_listio`.",34,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"aio_return","","Collect final status for an individual `AioCb` submitted…",34,[[],["result",6]]],[11,"error","","Retrieve error status of an individual `AioCb` submitted…",34,[[],["result",6]]],[0,"epoll","nix::sys","",null,null],[3,"EpollFlags","nix::sys::epoll","",null,null],[18,"EPOLLIN","","",35,null],[18,"EPOLLPRI","","",35,null],[18,"EPOLLOUT","","",35,null],[18,"EPOLLRDNORM","","",35,null],[18,"EPOLLRDBAND","","",35,null],[18,"EPOLLWRNORM","","",35,null],[18,"EPOLLWRBAND","","",35,null],[18,"EPOLLMSG","","",35,null],[18,"EPOLLERR","","",35,null],[18,"EPOLLHUP","","",35,null],[18,"EPOLLRDHUP","","",35,null],[18,"EPOLLEXCLUSIVE","","",35,null],[18,"EPOLLWAKEUP","","",35,null],[18,"EPOLLONESHOT","","",35,null],[18,"EPOLLET","","",35,null],[11,"empty","","Returns an empty set of flags",35,[[],["epollflags",3]]],[11,"all","","Returns the set containing all flags.",35,[[],["epollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",35,[[["c_int",6]],[["option",4],["epollflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",35,[[["c_int",6]],["epollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",35,[[["c_int",6]],["epollflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",35,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",35,[[["epollflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",35,[[["epollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["epollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["epollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["epollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",35,[[["epollflags",3]]]],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",36,null],[13,"EpollCtlDel","","",36,null],[13,"EpollCtlMod","","",36,null],[3,"EpollCreateFlags","","",null,null],[18,"EPOLL_CLOEXEC","","",37,null],[11,"empty","","Returns an empty set of flags",37,[[],["epollcreateflags",3]]],[11,"all","","Returns the set containing all flags.",37,[[],["epollcreateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",37,[[["c_int",6]],[["option",4],["epollcreateflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",37,[[["c_int",6]],["epollcreateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",37,[[["c_int",6]],["epollcreateflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",37,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",37,[[["epollcreateflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",37,[[["epollcreateflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",37,[[["epollcreateflags",3]]]],[3,"EpollEvent","","",null,null],[11,"new","","",38,[[["epollflags",3]]]],[11,"empty","","",38,[[]]],[11,"events","","",38,[[],["epollflags",3]]],[11,"data","","",38,[[]]],[5,"epoll_create","","",null,[[],[["result",6],["rawfd",6]]]],[5,"epoll_create1","","",null,[[["epollcreateflags",3]],[["result",6],["rawfd",6]]]],[5,"epoll_ctl","","",null,[[["rawfd",6],["epollop",4]],["result",6]]],[5,"epoll_wait","","",null,[[["rawfd",6]],["result",6]]],[0,"eventfd","nix::sys","",null,null],[3,"EfdFlags","nix::sys::eventfd","",null,null],[18,"EFD_CLOEXEC","","",39,null],[18,"EFD_NONBLOCK","","",39,null],[18,"EFD_SEMAPHORE","","",39,null],[11,"empty","","Returns an empty set of flags",39,[[],["efdflags",3]]],[11,"all","","Returns the set containing all flags.",39,[[],["efdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",39,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",39,[[["c_int",6]],[["option",4],["efdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",39,[[["c_int",6]],["efdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",39,[[["c_int",6]],["efdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",39,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",39,[[["efdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",39,[[["efdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",39,[[["efdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",39,[[["efdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",39,[[["efdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",39,[[["efdflags",3]]]],[5,"eventfd","","",null,[[["c_uint",6],["efdflags",3]],[["result",6],["rawfd",6]]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",null,null],[0,"memfd","","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[18,"MFD_CLOEXEC","","",40,null],[18,"MFD_ALLOW_SEALING","","",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["memfdcreateflag",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["memfdcreateflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",40,[[["c_uint",6]],[["memfdcreateflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",40,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",40,[[["memfdcreateflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",40,[[["memfdcreateflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",40,[[["memfdcreateflag",3]]]],[5,"memfd_create","","",null,[[["cstr",3],["memfdcreateflag",3]],[["result",6],["rawfd",6]]]],[0,"mman","nix::sys","",null,null],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",null,null],[18,"PROT_NONE","","Pages cannot be accessed.",41,null],[18,"PROT_READ","","Pages can be read.",41,null],[18,"PROT_WRITE","","Pages can be written.",41,null],[18,"PROT_EXEC","","Pages can be executed",41,null],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows…",41,null],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that…",41,null],[11,"empty","","Returns an empty set of flags",41,[[],["protflags",3]]],[11,"all","","Returns the set containing all flags.",41,[[],["protflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",41,[[["c_int",6]],[["option",4],["protflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",41,[[["c_int",6]],["protflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",41,[[["c_int",6]],["protflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",41,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",41,[[["protflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",41,[[["protflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["protflags",3]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["protflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["protflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",41,[[["protflags",3]]]],[3,"MapFlags","","Additional parameters for `mmap()`.",null,null],[18,"MAP_FILE","","Compatibility flag. Ignored.",42,null],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",42,null],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive…",42,null],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in…",42,null],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",42,null],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",42,null],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address…",42,null],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping…",42,null],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",42,null],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",42,null],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as…",42,null],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",42,null],[18,"MAP_POPULATE","","Populate page tables for a mapping.",42,null],[18,"MAP_NONBLOCK","","Only meaningful when used with `MAP_POPULATE`. Don\'t…",42,null],[18,"MAP_HUGETLB","","Allocate the mapping using \\\"huge pages.\\\"",42,null],[18,"MAP_HUGE_64KB","","Make use of 64KB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_512KB","","Make use of 512KB huge page (must be supported by the…",42,null],[18,"MAP_HUGE_1MB","","Make use of 1MB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_2MB","","Make use of 2MB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_8MB","","Make use of 8MB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_16MB","","Make use of 16MB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_32MB","","Make use of 32MB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_256MB","","Make use of 256MB huge page (must be supported by the…",42,null],[18,"MAP_HUGE_512MB","","Make use of 512MB huge page (must be supported by the…",42,null],[18,"MAP_HUGE_1GB","","Make use of 1GB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_2GB","","Make use of 2GB huge page (must be supported by the system)",42,null],[18,"MAP_HUGE_16GB","","Make use of 16GB huge page (must be supported by the system)",42,null],[18,"MAP_STACK","","Region grows down, like a stack.",42,null],[11,"empty","","Returns an empty set of flags",42,[[],["mapflags",3]]],[11,"all","","Returns the set containing all flags.",42,[[],["mapflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",42,[[["c_int",6]],[["option",4],["mapflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",42,[[["c_int",6]],["mapflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",42,[[["c_int",6]],["mapflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",42,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",42,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",42,[[["mapflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",42,[[["mapflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["mapflags",3]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["mapflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["mapflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",42,[[["mapflags",3]]]],[4,"MmapAdvise","","Usage information for a range of memory to allow for…",null,null],[13,"MADV_NORMAL","","No further special treatment. This is the default.",43,null],[13,"MADV_RANDOM","","Expect random page references.",43,null],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",43,null],[13,"MADV_WILLNEED","","Expect access in the near future.",43,null],[13,"MADV_DONTNEED","","Do not expect access in the near future.",43,null],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing…",43,null],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child…",43,null],[13,"MADV_DOFORK","","Undo the effect of `MADV_DONTFORK`.",43,null],[13,"MADV_HWPOISON","","Poison the given pages.",43,null],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",43,null],[13,"MADV_UNMERGEABLE","","Undo the effect of `MADV_MERGEABLE`",43,null],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original…",43,null],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the given…",43,null],[13,"MADV_NOHUGEPAGE","","Undo the effect of `MADV_HUGEPAGE`.",43,null],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",43,null],[13,"MADV_DODUMP","","Undo the effect of an earlier `MADV_DONTDUMP`.",43,null],[13,"MADV_FREE","","Specify that the application no longer needs the pages in…",43,null],[3,"MsFlags","","Configuration flags for `msync`.",null,null],[18,"MS_ASYNC","","Schedule an update but return immediately.",44,null],[18,"MS_INVALIDATE","","Invalidate all cached data.",44,null],[18,"MS_SYNC","","Perform an update and wait for it to complete.",44,null],[11,"empty","","Returns an empty set of flags",44,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",44,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",44,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",44,[[["c_int",6]],[["option",4],["msflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",44,[[["c_int",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",44,[[["c_int",6]],["msflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",44,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",44,[[["msflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",44,[[["msflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",44,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",44,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",44,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",44,[[["msflags",3]]]],[3,"MlockAllFlags","","Flags for `mlockall`.",null,null],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address…",45,null],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space…",45,null],[11,"empty","","Returns an empty set of flags",45,[[],["mlockallflags",3]]],[11,"all","","Returns the set containing all flags.",45,[[],["mlockallflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",45,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",45,[[["c_int",6]],[["option",4],["mlockallflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",45,[[["c_int",6]],["mlockallflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",45,[[["c_int",6]],["mlockallflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",45,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",45,[[["mlockallflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",45,[[["mlockallflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",45,[[["mlockallflags",3]]]],[11,"remove","","Removes the specified flags in-place.",45,[[["mlockallflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",45,[[["mlockallflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",45,[[["mlockallflags",3]]]],[5,"mlock","","Locks all memory pages that contain part of the address…",null,[[["size_t",6]],["result",6]]],[5,"munlock","","Unlocks all memory pages that contain part of the address…",null,[[["size_t",6]],["result",6]]],[5,"mlockall","","Locks all memory pages mapped into this process\' address…",null,[[["mlockallflags",3]],["result",6]]],[5,"munlockall","","Unlocks all memory pages mapped into this process\' address…",null,[[],["result",6]]],[5,"mmap","","allocate memory, or map files or devices into memory",null,[[["mapflags",3],["rawfd",6],["off_t",6],["size_t",6],["protflags",3]],["result",6]]],[5,"munmap","","remove a mapping",null,[[["size_t",6]],["result",6]]],[5,"madvise","","give advice about use of memory",null,[[["mmapadvise",4],["size_t",6]],["result",6]]],[5,"mprotect","","Set protection of memory mapping.",null,[[["protflags",3],["size_t",6]],["result",6]]],[5,"msync","","synchronize a mapped region",null,[[["msflags",3],["size_t",6]],["result",6]]],[5,"shm_open","","",null,[[["mode",3],["oflag",3]],[["result",6],["rawfd",6]]]],[5,"shm_unlink","","",null,[[],["result",6]]],[0,"pthread","nix::sys","",null,null],[6,"Pthread","nix::sys::pthread","",null,null],[5,"pthread_self","","Obtain ID of the calling thread (see `pthread_self(3)`",null,[[],["pthread",6]]],[0,"ptrace","nix::sys","",null,null],[6,"AddressType","nix::sys::ptrace","",null,null],[4,"Request","","Ptrace Request enum defining the action to be taken.",null,null],[13,"PTRACE_TRACEME","","",46,null],[13,"PTRACE_PEEKTEXT","","",46,null],[13,"PTRACE_PEEKDATA","","",46,null],[13,"PTRACE_PEEKUSER","","",46,null],[13,"PTRACE_POKETEXT","","",46,null],[13,"PTRACE_POKEDATA","","",46,null],[13,"PTRACE_POKEUSER","","",46,null],[13,"PTRACE_CONT","","",46,null],[13,"PTRACE_KILL","","",46,null],[13,"PTRACE_SINGLESTEP","","",46,null],[13,"PTRACE_GETREGS","","",46,null],[13,"PTRACE_SETREGS","","",46,null],[13,"PTRACE_GETFPREGS","","",46,null],[13,"PTRACE_SETFPREGS","","",46,null],[13,"PTRACE_ATTACH","","",46,null],[13,"PTRACE_DETACH","","",46,null],[13,"PTRACE_GETFPXREGS","","",46,null],[13,"PTRACE_SETFPXREGS","","",46,null],[13,"PTRACE_SYSCALL","","",46,null],[13,"PTRACE_SETOPTIONS","","",46,null],[13,"PTRACE_GETEVENTMSG","","",46,null],[13,"PTRACE_GETSIGINFO","","",46,null],[13,"PTRACE_SETSIGINFO","","",46,null],[13,"PTRACE_GETREGSET","","",46,null],[13,"PTRACE_SETREGSET","","",46,null],[13,"PTRACE_SEIZE","","",46,null],[13,"PTRACE_INTERRUPT","","",46,null],[13,"PTRACE_LISTEN","","",46,null],[13,"PTRACE_PEEKSIGINFO","","",46,null],[4,"Event","","Using the ptrace options the tracer can configure the…",null,null],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",47,null],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",47,null],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",47,null],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",47,null],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",47,null],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit…",47,null],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",47,null],[3,"Options","","Ptrace options used in conjunction with the…",null,null],[5,"getregs","","Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`",null,[[["pid",3]],[["result",6],["user_regs_struct",3]]]],[5,"setregs","","Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`",null,[[["user_regs_struct",3],["pid",3]],["result",6]]],[5,"setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",null,[[["options",3],["pid",3]],["result",6]]],[5,"getevent","","Gets a ptrace event as described by…",null,[[["pid",3]],[["result",6],["c_long",6]]]],[5,"getsiginfo","","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",null,[[["pid",3]],[["result",6],["siginfo_t",3]]]],[5,"setsiginfo","","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",null,[[["siginfo_t",3],["pid",3]],["result",6]]],[5,"traceme","","Sets the process as traceable, as with…",null,[[],["result",6]]],[5,"syscall","","Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",null,[[["into",8],["option",4],["pid",3]],["result",6]]],[5,"attach","","Attach to a running process, as with…",null,[[["pid",3]],["result",6]]],[5,"seize","","Attach to a running process, as with `ptrace(PTRACE_SEIZE,…",null,[[["options",3],["pid",3]],["result",6]]],[5,"detach","","Detaches the current running process, as with…",null,[[["into",8],["option",4],["pid",3]],["result",6]]],[5,"cont","","Restart the stopped tracee process, as with…",null,[[["into",8],["option",4],["pid",3]],["result",6]]],[5,"kill","","Issues a kill request as with `ptrace(PTRACE_KILL, ...)`",null,[[["pid",3]],["result",6]]],[5,"step","","Move the stopped tracee process forward by a single step…",null,[[["into",8],["option",4],["pid",3]],["result",6]]],[5,"read","","Reads a word from a processes memory at the given address",null,[[["addresstype",6],["pid",3]],[["result",6],["c_long",6]]]],[5,"write","","Writes a word into the processes memory at the given address",null,[[["addresstype",6],["pid",3]],["result",6]]],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or…",null,null],[4,"QuotaType","nix::sys::quota","The scope of the quota.",null,null],[13,"USRQUOTA","","Specify a user quota",48,null],[13,"GRPQUOTA","","Specify a group quota",48,null],[4,"QuotaFmt","","The type of quota format to use.",null,null],[13,"QFMT_VFS_OLD","","Use the original quota format.",49,null],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",49,null],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",49,null],[3,"QuotaValidFlags","","Indicates the quota fields that are valid to read from.",null,null],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",50,null],[18,"QIF_SPACE","","The current space field.",50,null],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",50,null],[18,"QIF_INODES","","The current inodes field.",50,null],[18,"QIF_BTIME","","The disk use time limit field.",50,null],[18,"QIF_ITIME","","The file quote time limit field.",50,null],[18,"QIF_LIMITS","","All block & inode limits.",50,null],[18,"QIF_USAGE","","The space & inodes usage fields.",50,null],[18,"QIF_TIMES","","The time limit fields.",50,null],[18,"QIF_ALL","","All fields.",50,null],[11,"empty","","Returns an empty set of flags",50,[[],["quotavalidflags",3]]],[11,"all","","Returns the set containing all flags.",50,[[],["quotavalidflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",50,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",50,[[],[["option",4],["quotavalidflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",50,[[],["quotavalidflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",50,[[],["quotavalidflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",50,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",50,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",50,[[["quotavalidflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",50,[[["quotavalidflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",50,[[["quotavalidflags",3]]]],[11,"remove","","Removes the specified flags in-place.",50,[[["quotavalidflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",50,[[["quotavalidflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",50,[[["quotavalidflags",3]]]],[3,"Dqblk","","Wrapper type for `if_dqblk`",null,null],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",51,[[],["option",4]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",51,[[]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",51,[[],["option",4]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",51,[[]]],[11,"occupied_space","","Current occupied space (bytes).",51,[[],["option",4]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",51,[[],["option",4]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",51,[[]]],[11,"inodes_soft_limit","","Preferred inode limit",51,[[],["option",4]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",51,[[]]],[11,"allocated_inodes","","Current number of allocated inodes.",51,[[],["option",4]]],[11,"block_time_limit","","Time limit for excessive disk use.",51,[[],["option",4]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",51,[[]]],[11,"inode_time_limit","","Time limit for excessive files.",51,[[],["option",4]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",51,[[]]],[5,"quotactl_on","","Turn on disk quotas for a block device.",null,[[["quotafmt",4],["quotatype",4]],["result",6]]],[5,"quotactl_off","","Disable disk quotas for a block device.",null,[[["quotatype",4]],["result",6]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",null,[[["quotatype",4],["option",4]],["result",6]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given…",null,[[["quotatype",4],["c_int",6]],[["result",6],["dqblk",3]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a…",null,[[["quotavalidflags",3],["c_int",6],["dqblk",3],["quotatype",4]],["result",6]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",52,null],[13,"RB_KEXEC","","",52,null],[13,"RB_POWER_OFF","","",52,null],[13,"RB_AUTOBOOT","","",52,null],[13,"RB_SW_SUSPEND","","",52,null],[5,"reboot","","",null,[[["rebootmode",4]],[["infallible",4],["result",6]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,[[],["result",6]]],[0,"select","nix::sys","",null,null],[17,"FD_SETSIZE","nix::sys::select","",null,null],[3,"FdSet","","",null,null],[11,"new","","",53,[[],["fdset",3]]],[11,"insert","","",53,[[["rawfd",6]]]],[11,"remove","","",53,[[["rawfd",6]]]],[11,"contains","","",53,[[["rawfd",6]]]],[11,"clear","","",53,[[]]],[11,"highest","","Finds the highest file descriptor in the set.",53,[[],[["option",4],["rawfd",6]]]],[11,"fds","","Returns an iterator over the file descriptors in the set.",53,[[["option",4],["rawfd",6]],["fds",3]]],[3,"Fds","","Iterator over `FdSet`.",null,null],[5,"select","","Monitors file descriptors for readiness",null,[[],[["result",6],["c_int",6]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered…",null,[[],[["result",6],["c_int",6]]]],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting…",null,[[["option",4],["rawfd",6],["off_t",6]],["result",6]]],[0,"signal","nix::sys","",null,null],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the…",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",54,null],[13,"SIGINT","","",54,null],[13,"SIGQUIT","","",54,null],[13,"SIGILL","","",54,null],[13,"SIGTRAP","","",54,null],[13,"SIGABRT","","",54,null],[13,"SIGBUS","","",54,null],[13,"SIGFPE","","",54,null],[13,"SIGKILL","","",54,null],[13,"SIGUSR1","","",54,null],[13,"SIGSEGV","","",54,null],[13,"SIGUSR2","","",54,null],[13,"SIGPIPE","","",54,null],[13,"SIGALRM","","",54,null],[13,"SIGTERM","","",54,null],[13,"SIGSTKFLT","","",54,null],[13,"SIGCHLD","","",54,null],[13,"SIGCONT","","",54,null],[13,"SIGSTOP","","",54,null],[13,"SIGTSTP","","",54,null],[13,"SIGTTIN","","",54,null],[13,"SIGTTOU","","",54,null],[13,"SIGURG","","",54,null],[13,"SIGXCPU","","",54,null],[13,"SIGXFSZ","","",54,null],[13,"SIGVTALRM","","",54,null],[13,"SIGPROF","","",54,null],[13,"SIGWINCH","","",54,null],[13,"SIGIO","","",54,null],[13,"SIGPWR","","",54,null],[13,"SIGSYS","","",54,null],[11,"as_str","","Returns name of signal.",54,[[]]],[17,"NSIG","","",null,null],[3,"SignalIterator","","",null,null],[11,"iterator","","",54,[[],["signaliterator",3]]],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[3,"SaFlags","","",null,null],[18,"SA_NOCLDSTOP","","",55,null],[18,"SA_NOCLDWAIT","","",55,null],[18,"SA_NODEFER","","",55,null],[18,"SA_ONSTACK","","",55,null],[18,"SA_RESETHAND","","",55,null],[18,"SA_RESTART","","",55,null],[18,"SA_SIGINFO","","",55,null],[11,"empty","","Returns an empty set of flags",55,[[],["saflags",3]]],[11,"all","","Returns the set containing all flags.",55,[[],["saflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",55,[[["c_int",6]],[["saflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",55,[[["c_int",6]],["saflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",55,[[["c_int",6]],["saflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",55,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",55,[[["saflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",55,[[["saflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["saflags",3]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["saflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["saflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",55,[[["saflags",3]]]],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",56,null],[13,"SIG_UNBLOCK","","",56,null],[13,"SIG_SETMASK","","",56,null],[3,"SigSet","","",null,null],[11,"all","","",57,[[],["sigset",3]]],[11,"empty","","",57,[[],["sigset",3]]],[11,"add","","",57,[[["signal",4]]]],[11,"clear","","",57,[[]]],[11,"remove","","",57,[[["signal",4]]]],[11,"contains","","",57,[[["signal",4]]]],[11,"extend","","",57,[[["sigset",3]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the…",57,[[],[["result",6],["sigset",3]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling…",57,[[],["result",6]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling…",57,[[],["result",6]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the…",57,[[],["result",6]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns…",57,[[["sigmaskhow",4]],[["result",6],["sigset",3]]]],[11,"wait","","Suspends execution of the calling thread until one of the…",57,[[],[["signal",4],["result",6]]]],[4,"SigHandler","","A signal handler.",null,null],[13,"SigDfl","","Default signal handling.",58,null],[13,"SigIgn","","Request that the signal be ignored.",58,null],[13,"Handler","","Use the given signal-catching function, which takes in the…",58,null],[13,"SigAction","","Use the given signal-catching function, which takes in the…",58,null],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to…",null,null],[11,"new","","Creates a new action.",59,[[["sighandler",4],["saflags",3],["sigset",3]],["sigaction",3]]],[11,"flags","","Returns the flags set on the action.",59,[[],["saflags",3]]],[11,"mask","","Returns the set of signals that are blocked during…",59,[[],["sigset",3]]],[11,"handler","","Returns the action\'s handler.",59,[[],["sighandler",4]]],[5,"sigaction","","Changes the action taken by a process on receipt of a…",null,[[["sigaction",3],["signal",4]],[["sigaction",3],["result",6]]]],[5,"signal","","Signal management (see signal(3p))",null,[[["signal",4],["sighandler",4]],[["sighandler",4],["result",6]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the…",null,[[["sigmaskhow",4],["sigset",3],["option",4],["option",4],["sigset",3]],["result",6]]],[5,"sigprocmask","","Examine and change blocked signals.",null,[[["sigmaskhow",4],["sigset",3],["option",4],["option",4],["sigset",3]],["result",6]]],[5,"kill","","",null,[[["into",8],["option",4],["pid",3]],["result",6]]],[5,"killpg","","Send a signal to a process group (see killpg(3)).",null,[[["into",8],["option",4],["pid",3]],["result",6]]],[5,"raise","","",null,[[["signal",4]],["result",6]]],[6,"type_of_thread_id","","",null,null],[4,"SigevNotify","","Used to request asynchronous notification of certain…",null,null],[13,"SigevNone","","No notification will be delivered",60,null],[13,"SigevSignal","","The signal given by `signal` will be delivered to the…",60,null],[12,"signal","nix::sys::signal::SigevNotify","",61,null],[12,"si_value","","",61,null],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID…",60,null],[12,"signal","nix::sys::signal::SigevNotify","",62,null],[12,"thread_id","","",62,null],[12,"si_value","","",62,null],[0,"signalfd","nix::sys","Interface for the `signalfd` syscall.",null,null],[3,"siginfo","nix::sys::signalfd","",null,null],[12,"ssi_signo","","",63,null],[12,"ssi_errno","","",63,null],[12,"ssi_code","","",63,null],[12,"ssi_pid","","",63,null],[12,"ssi_uid","","",63,null],[12,"ssi_fd","","",63,null],[12,"ssi_tid","","",63,null],[12,"ssi_band","","",63,null],[12,"ssi_overrun","","",63,null],[12,"ssi_trapno","","",63,null],[12,"ssi_status","","",63,null],[12,"ssi_int","","",63,null],[12,"ssi_ptr","","",63,null],[12,"ssi_utime","","",63,null],[12,"ssi_stime","","",63,null],[12,"ssi_addr","","",63,null],[12,"ssi_addr_lsb","","",63,null],[12,"ssi_syscall","","",63,null],[12,"ssi_call_addr","","",63,null],[12,"ssi_arch","","",63,null],[3,"SfdFlags","","",null,null],[18,"SFD_NONBLOCK","","",64,null],[18,"SFD_CLOEXEC","","",64,null],[11,"empty","","Returns an empty set of flags",64,[[],["sfdflags",3]]],[11,"all","","Returns the set containing all flags.",64,[[],["sfdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",64,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",64,[[["c_int",6]],[["option",4],["sfdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",64,[[["c_int",6]],["sfdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",64,[[["c_int",6]],["sfdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",64,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",64,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",64,[[["sfdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",64,[[["sfdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",64,[[["sfdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",64,[[["sfdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",64,[[["sfdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",64,[[["sfdflags",3]]]],[17,"SIGNALFD_NEW","","",null,null],[17,"SIGNALFD_SIGINFO_SIZE","","",null,null],[5,"signalfd","","Creates a new file descriptor for reading signals.",null,[[["sfdflags",3],["rawfd",6],["sigset",3]],[["result",6],["rawfd",6]]]],[3,"SignalFd","","A helper struct for creating, reading and closing a…",null,null],[11,"new","","",65,[[["sigset",3]],[["result",6],["signalfd",3]]]],[11,"with_flags","","",65,[[["sfdflags",3],["sigset",3]],[["result",6],["signalfd",3]]]],[11,"set_mask","","",65,[[["sigset",3]],["result",6]]],[11,"read_signal","","",65,[[],[["option",4],["result",6]]]],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"cmsghdr","nix::sys::socket","",null,null],[12,"cmsg_len","","",66,null],[12,"cmsg_level","","",66,null],[12,"cmsg_type","","",66,null],[3,"msghdr","","",null,null],[12,"msg_name","","",67,null],[12,"msg_namelen","","",67,null],[12,"msg_iov","","",67,null],[12,"msg_iovlen","","",67,null],[12,"msg_control","","",67,null],[12,"msg_controllen","","",67,null],[12,"msg_flags","","",67,null],[6,"sa_family_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",68,null],[12,"sa_data","","",68,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",69,null],[12,"sin_port","","",69,null],[12,"sin_addr","","",69,null],[12,"sin_zero","","",69,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",70,null],[12,"sin6_port","","",70,null],[12,"sin6_flowinfo","","",70,null],[12,"sin6_addr","","",70,null],[12,"sin6_scope_id","","",70,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",71,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",72,null],[12,"sun_path","","",72,null],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"BindToDevice","","",null,null],[3,"OriginalDst","","",null,null],[3,"ReceiveTimestamp","","",null,null],[3,"IpTransparent","","",null,null],[3,"Mark","","",null,null],[3,"PassCred","","",null,null],[3,"TcpCongestion","","",null,null],[3,"Ipv4PacketInfo","","",null,null],[3,"Ipv6RecvPacketInfo","","",null,null],[3,"UdpGsoSegment","","",null,null],[3,"UdpGroSegment","","",null,null],[3,"AlgSetAeadAuthSize","","",null,null],[3,"AlgSetKey","","",null,null],[4,"AddressFamily","nix::sys::socket","These constants specify the protocol family to be used in…",null,null],[13,"Unix","","Local communication (see `unix(7)`)",73,null],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",73,null],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",73,null],[13,"Netlink","","Kernel user interface device (see `netlink(7)`)",73,null],[13,"Packet","","Low level packet interface (see `packet(7)`)",73,null],[13,"Ax25","","Amateur radio AX.25 protocol",73,null],[13,"Ipx","","IPX - Novell protocols",73,null],[13,"AppleTalk","","AppleTalk",73,null],[13,"NetRom","","",73,null],[13,"Bridge","","",73,null],[13,"AtmPvc","","Access to raw ATM PVCs",73,null],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",73,null],[13,"Rose","","",73,null],[13,"Decnet","","",73,null],[13,"NetBeui","","",73,null],[13,"Security","","",73,null],[13,"Key","","",73,null],[13,"Ash","","",73,null],[13,"Econet","","",73,null],[13,"AtmSvc","","",73,null],[13,"Rds","","",73,null],[13,"Sna","","",73,null],[13,"Irda","","",73,null],[13,"Pppox","","",73,null],[13,"Wanpipe","","",73,null],[13,"Llc","","",73,null],[13,"Ib","","",73,null],[13,"Mpls","","",73,null],[13,"Can","","",73,null],[13,"Tipc","","",73,null],[13,"Bluetooth","","",73,null],[13,"Iucv","","",73,null],[13,"RxRpc","","",73,null],[13,"Isdn","","",73,null],[13,"Phonet","","",73,null],[13,"Ieee802154","","",73,null],[13,"Caif","","",73,null],[13,"Alg","","Interface to kernel crypto API",73,null],[13,"Nfc","","",73,null],[13,"Vsock","","",73,null],[13,"Unspec","","Unspecified address family, (see `getaddrinfo(3)`)",73,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",74,null],[13,"Unix","","",74,null],[13,"Netlink","","",74,null],[13,"Alg","","",74,null],[13,"Link","","Datalink address (MAC)",74,null],[13,"Vsock","","",74,null],[4,"InetAddr","","",null,null],[13,"V4","","",75,null],[13,"V6","","",75,null],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",null,null],[12,"0","","",76,null],[12,"1","","",76,null],[4,"IpAddr","","",null,null],[13,"V4","","",77,null],[13,"V6","","",77,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",78,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",79,null],[3,"LinkAddr","","Hardware Address",null,null],[12,"0","","",80,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",81,null],[3,"AlgAddr","","",null,null],[12,"0","","",82,null],[3,"VsockAddr","","",null,null],[12,"0","","",83,null],[4,"SockType","","These constants are used to specify the communication…",null,null],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based…",84,null],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of…",84,null],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based…",84,null],[13,"Raw","","Provides raw network protocol access.",84,null],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee…",84,null],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the…",null,null],[13,"Tcp","","TCP protocol (ip(7))",85,null],[13,"Udp","","UDP protocol (ip(7))",85,null],[3,"SockFlag","","Additional socket options",null,null],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",86,null],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",86,null],[11,"empty","","Returns an empty set of flags",86,[[],["sockflag",3]]],[11,"all","","Returns the set containing all flags.",86,[[],["sockflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",86,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",86,[[["c_int",6]],[["option",4],["sockflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",86,[[["c_int",6]],["sockflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",86,[[["c_int",6]],["sockflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",86,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",86,[[["sockflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",86,[[["sockflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",86,[[["sockflag",3]]]],[11,"remove","","Removes the specified flags in-place.",86,[[["sockflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",86,[[["sockflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",86,[[["sockflag",3]]]],[3,"MsgFlags","","Flags for send/recv and their relatives",null,null],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support…",87,null],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as…",87,null],[18,"MSG_WAITALL","","Receive operation blocks until the full amount of data can…",87,null],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would…",87,null],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",87,null],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux…",87,null],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for…",87,null],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received…",87,null],[18,"MSG_CMSG_CLOEXEC","","Set the `close-on-exec` flag for the file descriptor…",87,null],[11,"empty","","Returns an empty set of flags",87,[[],["msgflags",3]]],[11,"all","","Returns the set containing all flags.",87,[[],["msgflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",87,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",87,[[["c_int",6]],[["option",4],["msgflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",87,[[["c_int",6]],["msgflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",87,[[["c_int",6]],["msgflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",87,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",87,[[["msgflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",87,[[["msgflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",87,[[["msgflags",3]]]],[11,"remove","","Removes the specified flags in-place.",87,[[["msgflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",87,[[["msgflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",87,[[["msgflags",3]]]],[3,"UnixCredentials","","Unix credentials of the sending process.",null,null],[11,"new","","Creates a new instance with the credentials of the current…",88,[[]]],[11,"pid","","Returns the process identifier",88,[[],["pid_t",6]]],[11,"uid","","Returns the user identifier",88,[[],["uid_t",6]]],[11,"gid","","Returns the group identifier",88,[[],["gid_t",6]]],[3,"IpMembershipRequest","","Request for multicast socket operations",null,null],[11,"new","","Instantiate a new `IpMembershipRequest`",89,[[["ipv4addr",3],["option",4]]]],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",null,null],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",90,[[["ipv6addr",3]]]],[3,"RecvMsg","","",null,null],[12,"bytes","","",91,null],[12,"address","","",91,null],[12,"flags","","",91,null],[11,"cmsgs","","Iterate over the valid control messages pointed to by this…",91,[[],["cmsgiterator",3]]],[3,"CmsgIterator","","",null,null],[4,"ControlMessageOwned","","A type-safe wrapper around a single control message, as…",null,null],[13,"ScmRights","","Received version of…",92,null],[13,"ScmCredentials","","Received version of…",92,null],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the…",92,null],[13,"Ipv4PacketInfo","","",92,null],[13,"Ipv6PacketInfo","","",92,null],[13,"UdpGroSegments","","UDP Generic Receive Offload (GRO) allows receiving…",92,null],[4,"ControlMessage","","A type-safe zero-copy wrapper around a single control…",null,null],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of…",93,null],[13,"ScmCredentials","","A message of type `SCM_CREDENTIALS`, containing the pid,…",93,null],[13,"AlgSetIv","","Set IV for `AF_ALG` crypto API.",93,null],[13,"AlgSetOp","","Set crypto operation for `AF_ALG` crypto API. It may be…",93,null],[13,"AlgSetAeadAssoclen","","Set the length of associated authentication data (AAD)…",93,null],[13,"UdpGsoSegments","","UDP GSO makes it possible for applications to generate…",93,null],[13,"Ipv4PacketInfo","","Configure the sending addressing and interface for v4",93,null],[13,"Ipv6PacketInfo","","Configure the sending addressing and interface for v6",93,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly…",null,[[["rawfd",6],["msgflags",3],["sockaddr",4],["option",4]],["result",6]]],[3,"SendMmsgData","","",null,null],[12,"iov","","",94,null],[12,"cmsgs","","",94,null],[12,"addr","","",94,null],[12,"_lt","","",94,null],[5,"sendmmsg","","An extension of `sendmsg` that allows the caller to…",null,[[["rawfd",6],["msgflags",3]],[["result",6],["vec",3]]]],[3,"RecvMmsgData","","",null,null],[12,"iov","","",95,null],[12,"cmsg_buffer","","",95,null],[5,"recvmmsg","","An extension of `recvmsg` that allows the caller to…",null,[[["rawfd",6],["msgflags",3],["option",4],["timespec",3]],[["result",6],["vec",3]]]],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket,…",null,[[["option",4],["rawfd",6],["vec",3],["msgflags",3]],[["recvmsg",3],["result",6]]]],[5,"socket","","Create an endpoint for communication",null,[[["sockflag",3],["socktype",4],["addressfamily",4],["option",4],["into",8]],[["result",6],["rawfd",6]]]],[5,"socketpair","","Create a pair of connected sockets",null,[[["sockflag",3],["socktype",4],["addressfamily",4],["option",4],["into",8]],["result",6]]],[5,"listen","","Listen for connections on a socket",null,[[["rawfd",6]],["result",6]]],[5,"bind","","Bind a name to a socket",null,[[["rawfd",6],["sockaddr",4]],["result",6]]],[5,"accept","","Accept a connection on a socket",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"accept4","","Accept a connection on a socket",null,[[["rawfd",6],["sockflag",3]],[["result",6],["rawfd",6]]]],[5,"connect","","Initiate a connection on a socket",null,[[["rawfd",6],["sockaddr",4]],["result",6]]],[5,"recv","","Receive data from a connection-oriented socket. Returns…",null,[[["rawfd",6],["msgflags",3]],["result",6]]],[5,"recvfrom","","Receive data from a connectionless or connection-oriented…",null,[[["rawfd",6]],["result",6]]],[5,"sendto","","Send a message to a socket",null,[[["rawfd",6],["sockaddr",4],["msgflags",3]],["result",6]]],[5,"send","","Send data to a connection-oriented socket. Returns the…",null,[[["rawfd",6],["msgflags",3]],["result",6]]],[4,"SockLevel","","The protocol level at which to get / set socket options.…",null,null],[13,"Socket","","",96,null],[13,"Tcp","","",96,null],[13,"Ip","","",96,null],[13,"Ipv6","","",96,null],[13,"Udp","","",96,null],[13,"Netlink","","",96,null],[13,"Alg","","",96,null],[8,"GetSockOpt","","Represents a socket option that can be accessed or set.…",null,null],[16,"Val","","",97,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set.…",null,null],[16,"Val","","",98,null],[5,"getsockopt","","Get the current value for the requested socket option",null,[[["rawfd",6],["getsockopt",8]],["result",6]]],[5,"setsockopt","","Sets the value for the requested socket option",null,[[["rawfd",6],["setsockopt",8]],["result",6]]],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",null,[[["rawfd",6]],[["result",6],["sockaddr",4]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",null,[[["rawfd",6]],[["result",6],["sockaddr",4]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a…",null,[[["sockaddr_storage",3]],[["result",6],["sockaddr",4]]]],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",99,null],[13,"Write","","Further  transmissions will be disallowed.",99,null],[13,"Both","","Further receptions and transmissions will be disallowed.",99,null],[5,"shutdown","","Shut down part of a full-duplex connection.",null,[[["rawfd",6],["shutdown",4]],["result",6]]],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[6,"mode_t","","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",100,null],[12,"st_ino","","",100,null],[12,"st_nlink","","",100,null],[12,"st_mode","","",100,null],[12,"st_uid","","",100,null],[12,"st_gid","","",100,null],[12,"st_rdev","","",100,null],[12,"st_size","","",100,null],[12,"st_blksize","","",100,null],[12,"st_blocks","","",100,null],[12,"st_atime","","",100,null],[12,"st_atime_nsec","","",100,null],[12,"st_mtime","","",100,null],[12,"st_mtime_nsec","","",100,null],[12,"st_ctime","","",100,null],[12,"st_ctime_nsec","","",100,null],[5,"FileStat","","",null,[[]]],[3,"SFlag","","",null,null],[18,"S_IFIFO","","",101,null],[18,"S_IFCHR","","",101,null],[18,"S_IFDIR","","",101,null],[18,"S_IFBLK","","",101,null],[18,"S_IFREG","","",101,null],[18,"S_IFLNK","","",101,null],[18,"S_IFSOCK","","",101,null],[18,"S_IFMT","","",101,null],[11,"empty","","Returns an empty set of flags",101,[[],["sflag",3]]],[11,"all","","Returns the set containing all flags.",101,[[],["sflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",101,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",101,[[["mode_t",6]],[["sflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",101,[[["mode_t",6]],["sflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",101,[[["mode_t",6]],["sflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",101,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",101,[[["sflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",101,[[["sflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",101,[[["sflag",3]]]],[11,"remove","","Removes the specified flags in-place.",101,[[["sflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",101,[[["sflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",101,[[["sflag",3]]]],[3,"Mode","","",null,null],[18,"S_IRWXU","","",102,null],[18,"S_IRUSR","","",102,null],[18,"S_IWUSR","","",102,null],[18,"S_IXUSR","","",102,null],[18,"S_IRWXG","","",102,null],[18,"S_IRGRP","","",102,null],[18,"S_IWGRP","","",102,null],[18,"S_IXGRP","","",102,null],[18,"S_IRWXO","","",102,null],[18,"S_IROTH","","",102,null],[18,"S_IWOTH","","",102,null],[18,"S_IXOTH","","",102,null],[18,"S_ISUID","","",102,null],[18,"S_ISGID","","",102,null],[18,"S_ISVTX","","",102,null],[11,"empty","","Returns an empty set of flags",102,[[],["mode",3]]],[11,"all","","Returns the set containing all flags.",102,[[],["mode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",102,[[["mode_t",6]],[["option",4],["mode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",102,[[["mode_t",6]],["mode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",102,[[["mode_t",6]],["mode",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",102,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",102,[[["mode",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",102,[[["mode",3]]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["mode",3]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["mode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["mode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",102,[[["mode",3]]]],[5,"mknod","","",null,[[["sflag",3],["dev_t",6],["mode",3]],["result",6]]],[5,"major","","",null,[[["dev_t",6]]]],[5,"minor","","",null,[[["dev_t",6]]]],[5,"makedev","","",null,[[],["dev_t",6]]],[5,"umask","","",null,[[["mode",3]],["mode",3]]],[5,"stat","","",null,[[],[["result",6],["filestat",3]]]],[5,"lstat","","",null,[[],[["result",6],["filestat",3]]]],[5,"fstat","","",null,[[["rawfd",6]],[["result",6],["filestat",3]]]],[5,"fstatat","","",null,[[["rawfd",6],["atflags",3]],[["result",6],["filestat",3]]]],[5,"fchmod","","Change the file permission bits of the file specified by a…",null,[[["rawfd",6],["mode",3]],["result",6]]],[4,"FchmodatFlags","","Flags for `fchmodat` function.",null,null],[13,"FollowSymlink","","",103,null],[13,"NoFollowSymlink","","",103,null],[5,"fchmodat","","Change the file permission bits.",null,[[["rawfd",6],["mode",3],["option",4],["fchmodatflags",4]],["result",6]]],[5,"utimes","","Change the access and modification times of a file.",null,[[["timeval",3]],["result",6]]],[5,"lutimes","","Change the access and modification times of a file without…",null,[[["timeval",3]],["result",6]]],[5,"futimens","","Change the access and modification times of the file…",null,[[["rawfd",6],["timespec",3]],["result",6]]],[4,"UtimensatFlags","","Flags for `utimensat` function.",null,null],[13,"FollowSymlink","","",104,null],[13,"NoFollowSymlink","","",104,null],[5,"utimensat","","Change the access and modification times of a file.",null,[[["rawfd",6],["option",4],["utimensatflags",4],["timespec",3]],["result",6]]],[5,"mkdirat","","",null,[[["rawfd",6],["mode",3]],["result",6]]],[0,"statfs","nix::sys","",null,null],[6,"fsid_t","nix::sys::statfs","",null,null],[3,"Statfs","","",null,null],[3,"FsType","","",null,null],[12,"0","","",105,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[11,"filesystem_type","","Magic code defining system type",106,[[],["fstype",3]]],[11,"optimal_transfer_size","","Optimal transfer block size",106,[[],["c_long",6]]],[11,"block_size","","Size of a block",106,[[],["c_long",6]]],[11,"maximum_name_length","","Maximum length of filenames",106,[[],["c_long",6]]],[11,"blocks","","Total data blocks in filesystem",106,[[],["c_ulong",6]]],[11,"blocks_free","","Free blocks in filesystem",106,[[],["c_ulong",6]]],[11,"blocks_available","","Free blocks available to unprivileged user",106,[[],["c_ulong",6]]],[11,"files","","Total file nodes in filesystem",106,[[],["c_ulong",6]]],[11,"files_free","","Free file nodes in filesystem",106,[[],["c_ulong",6]]],[11,"filesystem_id","","Filesystem ID",106,[[],["fsid_t",6]]],[5,"statfs","","",null,[[],[["result",6],["statfs",3]]]],[5,"fstatfs","","",null,[[],[["result",6],["statfs",3]]]],[0,"statvfs","nix::sys","Get filesystem statistics",null,null],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",null,null],[18,"ST_RDONLY","","Read Only",107,null],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",107,null],[18,"ST_NODEV","","Do not interpret character or block-special devices",107,null],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",107,null],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",107,null],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",107,null],[18,"ST_WRITE","","Write on file/directory/symlink",107,null],[18,"ST_APPEND","","Append-only file",107,null],[18,"ST_IMMUTABLE","","Immutable file",107,null],[18,"ST_NOATIME","","Do not update access times on files",107,null],[18,"ST_NODIRATIME","","Do not update access times on files",107,null],[18,"ST_RELATIME","","Update access time relative to modify/change time",107,null],[11,"empty","","Returns an empty set of flags",107,[[],["fsflags",3]]],[11,"all","","Returns the set containing all flags.",107,[[],["fsflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",107,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",107,[[["c_ulong",6]],[["option",4],["fsflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",107,[[["c_ulong",6]],["fsflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",107,[[["c_ulong",6]],["fsflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",107,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",107,[[["fsflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",107,[[["fsflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",107,[[["fsflags",3]]]],[11,"remove","","Removes the specified flags in-place.",107,[[["fsflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",107,[[["fsflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",107,[[["fsflags",3]]]],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",null,null],[11,"block_size","","get the file system block size",108,[[],["c_ulong",6]]],[11,"fragment_size","","Get the fundamental file system block size",108,[[],["c_ulong",6]]],[11,"blocks","","Get the number of blocks.",108,[[],["fsblkcnt_t",6]]],[11,"blocks_free","","Get the number of free blocks in the file system",108,[[],["fsblkcnt_t",6]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",108,[[],["fsblkcnt_t",6]]],[11,"files","","Get the total number of file inodes",108,[[],["fsfilcnt_t",6]]],[11,"files_free","","Get the number of free file inodes",108,[[],["fsfilcnt_t",6]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",108,[[],["fsfilcnt_t",6]]],[11,"filesystem_id","","Get the file system id",108,[[],["c_ulong",6]]],[11,"flags","","Get the mount flags",108,[[],["fsflags",3]]],[11,"name_max","","Get the maximum filename length",108,[[],["c_ulong",6]]],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",null,[[],[["result",6],["statvfs",3]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",null,[[],[["result",6],["statvfs",3]]]],[0,"sysinfo","nix::sys","",null,null],[3,"SysInfo","nix::sys::sysinfo","System info structure returned by `sysinfo`.",null,null],[11,"load_average","","Returns the load average tuple.",109,[[]]],[11,"uptime","","Returns the time since system boot.",109,[[],["duration",3]]],[11,"process_count","","Current number of processes.",109,[[]]],[11,"swap_total","","Returns the amount of swap memory in Bytes.",109,[[]]],[11,"swap_free","","Returns the amount of unused swap memory in Bytes.",109,[[]]],[11,"ram_total","","Returns the total amount of installed RAM in Bytes.",109,[[]]],[11,"ram_unused","","Returns the amount of completely unused RAM in Bytes.",109,[[]]],[5,"sysinfo","","Returns system information.",null,[[],[["sysinfo",3],["result",6]]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication…",null,null],[17,"NCCS","nix::sys::termios","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[3,"Termios","","Stores settings for the termios API",null,null],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",110,null],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",110,null],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",110,null],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",110,null],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",110,null],[4,"BaudRate","","Baud rates supported by the system.",null,null],[13,"B0","","",111,null],[13,"B50","","",111,null],[13,"B75","","",111,null],[13,"B110","","",111,null],[13,"B134","","",111,null],[13,"B150","","",111,null],[13,"B200","","",111,null],[13,"B300","","",111,null],[13,"B600","","",111,null],[13,"B1200","","",111,null],[13,"B1800","","",111,null],[13,"B2400","","",111,null],[13,"B4800","","",111,null],[13,"B9600","","",111,null],[13,"B19200","","",111,null],[13,"B38400","","",111,null],[13,"B57600","","",111,null],[13,"B115200","","",111,null],[13,"B230400","","",111,null],[13,"B460800","","",111,null],[13,"B500000","","",111,null],[13,"B576000","","",111,null],[13,"B921600","","",111,null],[13,"B1000000","","",111,null],[13,"B1152000","","",111,null],[13,"B1500000","","",111,null],[13,"B2000000","","",111,null],[13,"B2500000","","",111,null],[13,"B3000000","","",111,null],[13,"B3500000","","",111,null],[13,"B4000000","","",111,null],[4,"SetArg","","Specify when a port configuration change should occur.",null,null],[13,"TCSANOW","","The change will occur immediately",112,null],[13,"TCSADRAIN","","The change occurs after all output has been written",112,null],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",112,null],[4,"FlushArg","","Specify a combination of the input and output buffers to…",null,null],[13,"TCIFLUSH","","Flush data that was received but not read",113,null],[13,"TCOFLUSH","","Flush data written but not transmitted",113,null],[13,"TCIOFLUSH","","Flush both received data not read and written data not…",113,null],[4,"FlowArg","","Specify how transmission flow should be altered",null,null],[13,"TCOOFF","","Suspend transmission",114,null],[13,"TCOON","","Resume transmission",114,null],[13,"TCIOFF","","Transmit a STOP character, which should disable a…",114,null],[13,"TCION","","Transmit a START character, which should re-enable a…",114,null],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special…",null,null],[13,"VDISCARD","","",115,null],[13,"VEOF","","",115,null],[13,"VEOL","","",115,null],[13,"VEOL2","","",115,null],[13,"VERASE","","",115,null],[13,"VINTR","","",115,null],[13,"VKILL","","",115,null],[13,"VLNEXT","","",115,null],[13,"VMIN","","",115,null],[13,"VQUIT","","",115,null],[13,"VREPRINT","","",115,null],[13,"VSTART","","",115,null],[13,"VSTOP","","",115,null],[13,"VSUSP","","",115,null],[13,"VSWTC","","",115,null],[13,"VTIME","","",115,null],[13,"VWERASE","","",115,null],[3,"InputFlags","","Flags for configuring the input mode of a terminal",null,null],[18,"IGNBRK","","",116,null],[18,"BRKINT","","",116,null],[18,"IGNPAR","","",116,null],[18,"PARMRK","","",116,null],[18,"INPCK","","",116,null],[18,"ISTRIP","","",116,null],[18,"INLCR","","",116,null],[18,"IGNCR","","",116,null],[18,"ICRNL","","",116,null],[18,"IXON","","",116,null],[18,"IXOFF","","",116,null],[18,"IXANY","","",116,null],[18,"IMAXBEL","","",116,null],[18,"IUTF8","","",116,null],[11,"empty","","Returns an empty set of flags",116,[[],["inputflags",3]]],[11,"all","","Returns the set containing all flags.",116,[[],["inputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",116,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",116,[[["tcflag_t",6]],[["inputflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",116,[[["tcflag_t",6]],["inputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",116,[[["tcflag_t",6]],["inputflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",116,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",116,[[["inputflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",116,[[["inputflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",116,[[["inputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",116,[[["inputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",116,[[["inputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",116,[[["inputflags",3]]]],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",null,null],[18,"OPOST","","",117,null],[18,"OLCUC","","",117,null],[18,"ONLCR","","",117,null],[18,"OCRNL","","",117,null],[18,"ONOCR","","",117,null],[18,"ONLRET","","",117,null],[18,"OFILL","","",117,null],[18,"OFDEL","","",117,null],[18,"NL0","","",117,null],[18,"NL1","","",117,null],[18,"CR0","","",117,null],[18,"CR1","","",117,null],[18,"CR2","","",117,null],[18,"CR3","","",117,null],[18,"TAB0","","",117,null],[18,"TAB1","","",117,null],[18,"TAB2","","",117,null],[18,"TAB3","","",117,null],[18,"XTABS","","",117,null],[18,"BS0","","",117,null],[18,"BS1","","",117,null],[18,"VT0","","",117,null],[18,"VT1","","",117,null],[18,"FF0","","",117,null],[18,"FF1","","",117,null],[18,"NLDLY","","",117,null],[18,"CRDLY","","",117,null],[18,"TABDLY","","",117,null],[18,"BSDLY","","",117,null],[18,"VTDLY","","",117,null],[18,"FFDLY","","",117,null],[11,"empty","","Returns an empty set of flags",117,[[],["outputflags",3]]],[11,"all","","Returns the set containing all flags.",117,[[],["outputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",117,[[["tcflag_t",6]],[["option",4],["outputflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",117,[[["tcflag_t",6]],["outputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",117,[[["tcflag_t",6]],["outputflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",117,[[["outputflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",117,[[["outputflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["outputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["outputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["outputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",117,[[["outputflags",3]]]],[3,"ControlFlags","","Flags for setting the control mode of a terminal",null,null],[18,"CS5","","",118,null],[18,"CS6","","",118,null],[18,"CS7","","",118,null],[18,"CS8","","",118,null],[18,"CSTOPB","","",118,null],[18,"CREAD","","",118,null],[18,"PARENB","","",118,null],[18,"PARODD","","",118,null],[18,"HUPCL","","",118,null],[18,"CLOCAL","","",118,null],[18,"CRTSCTS","","",118,null],[18,"CBAUD","","",118,null],[18,"CMSPAR","","",118,null],[18,"CIBAUD","","",118,null],[18,"CBAUDEX","","",118,null],[18,"CSIZE","","",118,null],[11,"empty","","Returns an empty set of flags",118,[[],["controlflags",3]]],[11,"all","","Returns the set containing all flags.",118,[[],["controlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",118,[[["tcflag_t",6]],[["controlflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",118,[[["tcflag_t",6]],["controlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",118,[[["tcflag_t",6]],["controlflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",118,[[["controlflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",118,[[["controlflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["controlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["controlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["controlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",118,[[["controlflags",3]]]],[3,"LocalFlags","","Flags for setting any local modes",null,null],[18,"ECHOKE","","",119,null],[18,"ECHOE","","",119,null],[18,"ECHOK","","",119,null],[18,"ECHO","","",119,null],[18,"ECHONL","","",119,null],[18,"ECHOPRT","","",119,null],[18,"ECHOCTL","","",119,null],[18,"ISIG","","",119,null],[18,"ICANON","","",119,null],[18,"IEXTEN","","",119,null],[18,"EXTPROC","","",119,null],[18,"TOSTOP","","",119,null],[18,"FLUSHO","","",119,null],[18,"PENDIN","","",119,null],[18,"NOFLSH","","",119,null],[11,"empty","","Returns an empty set of flags",119,[[],["localflags",3]]],[11,"all","","Returns the set containing all flags.",119,[[],["localflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",119,[[["tcflag_t",6]],[["localflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",119,[[["tcflag_t",6]],["localflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",119,[[["tcflag_t",6]],["localflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",119,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",119,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",119,[[["localflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",119,[[["localflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["localflags",3]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["localflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["localflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",119,[[["localflags",3]]]],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfmakeraw","","Configures the port to something like the \\\"raw\\\" mode of…",null,[[["termios",3]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",null,[[["rawfd",6]],[["result",6],["termios",3]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",null,[[["termios",3],["rawfd",6],["setarg",4]],["result",6]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",null,[[["rawfd",6]],["result",6]]],[5,"tcflow","","Suspend or resume the transmission or reception of data…",null,[[["rawfd",6],["flowarg",4]],["result",6]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",null,[[["rawfd",6],["flusharg",4]],["result",6]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",null,[[["rawfd",6],["c_int",6]],["result",6]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see…",null,[[["rawfd",6]],[["result",6],["pid",3]]]],[0,"time","nix::sys","",null,null],[6,"time_t","nix::sys::time","",null,null],[6,"suseconds_t","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",120,[[]]],[11,"hours","","",120,[[]]],[11,"minutes","","",120,[[]]],[10,"seconds","","",120,[[]]],[10,"milliseconds","","",120,[[]]],[10,"microseconds","","",120,[[]]],[10,"nanoseconds","","",120,[[]]],[11,"num_hours","","",120,[[]]],[11,"num_minutes","","",120,[[]]],[10,"num_seconds","","",120,[[]]],[10,"num_milliseconds","","",120,[[]]],[10,"num_microseconds","","",120,[[]]],[10,"num_nanoseconds","","",120,[[]]],[3,"TimeSpec","","",null,null],[11,"tv_sec","","",121,[[],["time_t",6]]],[11,"tv_nsec","","",121,[[],["c_long",6]]],[3,"TimeVal","","",null,null],[11,"tv_sec","","",122,[[],["time_t",6]]],[11,"tv_usec","","",122,[[],["suseconds_t",6]]],[0,"uio","nix::sys","",null,null],[5,"writev","nix::sys::uio","",null,[[["rawfd",6]],["result",6]]],[5,"readv","","",null,[[["rawfd",6]],["result",6]]],[5,"pwritev","","Write to `fd` at `offset` from buffers in `iov`.",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"preadv","","Read from `fd` at `offset` filling buffers in `iov`.",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"pwrite","","",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"pread","","",null,[[["off_t",6],["rawfd",6]],["result",6]]],[3,"RemoteIoVec","","A slice of memory in a remote process, starting at address…",null,null],[12,"base","","The starting address of this slice (`iov_base`).",123,null],[12,"len","","The number of bytes in this slice (`iov_len`).",123,null],[5,"process_vm_writev","","Write data directly to another process\'s virtual memory…",null,[[["pid",3]],["result",6]]],[5,"process_vm_readv","","Read data directly from another process\'s virtual memory…",null,[[["pid",3]],["result",6]]],[3,"IoVec","","",null,null],[11,"as_slice","","",124,[[]]],[11,"from_slice","","",124,[[],["iovec",3]]],[11,"from_mut_slice","","",124,[[],["iovec",3]]],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[11,"sysname","","",125,[[]]],[11,"nodename","","",125,[[]]],[11,"release","","",125,[[]]],[11,"version","","",125,[[]]],[11,"machine","","",125,[[]]],[5,"uname","","",null,[[],["utsname",3]]],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[18,"WNOHANG","","",126,null],[18,"WUNTRACED","","",126,null],[18,"WEXITED","","",126,null],[18,"WCONTINUED","","",126,null],[18,"WSTOPPED","","",126,null],[18,"WNOWAIT","","Don\'t reap, just poll status.",126,null],[18,"__WNOTHREAD","","Don\'t wait on children of other threads in this group",126,null],[18,"__WALL","","Wait on all children, regardless of type",126,null],[18,"__WCLONE","","",126,null],[11,"empty","","Returns an empty set of flags",126,[[],["waitpidflag",3]]],[11,"all","","Returns the set containing all flags.",126,[[],["waitpidflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",126,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",126,[[["c_int",6]],[["option",4],["waitpidflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",126,[[["c_int",6]],["waitpidflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",126,[[["c_int",6]],["waitpidflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",126,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",126,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",126,[[["waitpidflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",126,[[["waitpidflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",126,[[["waitpidflag",3]]]],[11,"remove","","Removes the specified flags in-place.",126,[[["waitpidflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",126,[[["waitpidflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",126,[[["waitpidflag",3]]]],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",null,null],[13,"Exited","","The process exited normally (as with `exit()` or returning…",127,null],[13,"Signaled","","The process was killed by the given signal. The third…",127,null],[13,"Stopped","","The process is alive, but was stopped by the given signal.…",127,null],[13,"PtraceEvent","","The traced process was stopped by a `PTRACE_EVENT_*`…",127,null],[13,"PtraceSyscall","","The traced process was stopped by execution of a system…",127,null],[13,"Continued","","The process was previously stopped but has resumed…",127,null],[13,"StillAlive","","There are currently no state changes to report in any…",127,null],[11,"pid","","Extracts the PID from the WaitStatus unless it equals…",127,[[],[["pid",3],["option",4]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait`…",127,[[["pid",3]],[["waitstatus",4],["result",6]]]],[5,"waitpid","","",null,[[["option",4],["into",8],["waitpidflag",3],["option",4]],[["waitstatus",4],["result",6]]]],[5,"wait","","",null,[[],[["waitstatus",4],["result",6]]]],[0,"inotify","nix::sys","Monitoring API for filesystem events.",null,null],[3,"AddWatchFlags","nix::sys::inotify","Configuration options for `inotify_add_watch`.",null,null],[18,"IN_ACCESS","","",128,null],[18,"IN_MODIFY","","",128,null],[18,"IN_ATTRIB","","",128,null],[18,"IN_CLOSE_WRITE","","",128,null],[18,"IN_CLOSE_NOWRITE","","",128,null],[18,"IN_OPEN","","",128,null],[18,"IN_MOVED_FROM","","",128,null],[18,"IN_MOVED_TO","","",128,null],[18,"IN_CREATE","","",128,null],[18,"IN_DELETE","","",128,null],[18,"IN_DELETE_SELF","","",128,null],[18,"IN_MOVE_SELF","","",128,null],[18,"IN_UNMOUNT","","",128,null],[18,"IN_Q_OVERFLOW","","",128,null],[18,"IN_IGNORED","","",128,null],[18,"IN_CLOSE","","",128,null],[18,"IN_MOVE","","",128,null],[18,"IN_ONLYDIR","","",128,null],[18,"IN_DONT_FOLLOW","","",128,null],[18,"IN_ISDIR","","",128,null],[18,"IN_ONESHOT","","",128,null],[18,"IN_ALL_EVENTS","","",128,null],[11,"empty","","Returns an empty set of flags",128,[[],["addwatchflags",3]]],[11,"all","","Returns the set containing all flags.",128,[[],["addwatchflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",128,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",128,[[],[["option",4],["addwatchflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",128,[[],["addwatchflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",128,[[],["addwatchflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",128,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",128,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",128,[[["addwatchflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",128,[[["addwatchflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",128,[[["addwatchflags",3]]]],[11,"remove","","Removes the specified flags in-place.",128,[[["addwatchflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",128,[[["addwatchflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",128,[[["addwatchflags",3]]]],[3,"InitFlags","","Configuration options for `inotify_init1`.",null,null],[18,"IN_CLOEXEC","","",129,null],[18,"IN_NONBLOCK","","",129,null],[11,"empty","","Returns an empty set of flags",129,[[],["initflags",3]]],[11,"all","","Returns the set containing all flags.",129,[[],["initflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",129,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",129,[[["c_int",6]],[["option",4],["initflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",129,[[["c_int",6]],["initflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",129,[[["c_int",6]],["initflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",129,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",129,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",129,[[["initflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",129,[[["initflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",129,[[["initflags",3]]]],[11,"remove","","Removes the specified flags in-place.",129,[[["initflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",129,[[["initflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",129,[[["initflags",3]]]],[3,"Inotify","","An inotify instance. This is also a file descriptor, you…",null,null],[3,"WatchDescriptor","","This object is returned when you create a new watch on an…",null,null],[3,"InotifyEvent","","A single inotify event.",null,null],[12,"wd","","Watch descriptor. This field corresponds to the watch…",130,null],[12,"mask","","Event mask. This field is a bitfield describing the exact…",130,null],[12,"cookie","","This cookie is a number that allows you to connect related…",130,null],[12,"name","","Filename. This field exists only if the event was…",130,null],[11,"init","","Initialize a new inotify instance.",131,[[["initflags",3]],[["result",6],["inotify",3]]]],[11,"add_watch","","Adds a new watch on the target file or directory. ",131,[[["addwatchflags",3]],[["result",6],["watchdescriptor",3]]]],[11,"rm_watch","","Removes an existing watch using the watch descriptor…",131,[[["watchdescriptor",3]],["result",6]]],[11,"read_events","","Reads a collection of events from the inotify file…",131,[[],[["result",6],["vec",3]]]],[0,"timerfd","nix::sys","Timer API via file descriptors.",null,null],[3,"TimerFd","nix::sys::timerfd","A timerfd instance. This is also a file descriptor, you…",null,null],[4,"ClockId","","The type of the clock used to mark the progress of the…",null,null],[13,"CLOCK_REALTIME","","",132,null],[13,"CLOCK_MONOTONIC","","",132,null],[13,"CLOCK_BOOTTIME","","",132,null],[13,"CLOCK_REALTIME_ALARM","","",132,null],[13,"CLOCK_BOOTTIME_ALARM","","",132,null],[3,"TimerFlags","","Additional flags to change the behaviour of the file…",null,null],[18,"TFD_NONBLOCK","","",133,null],[18,"TFD_CLOEXEC","","",133,null],[11,"empty","","Returns an empty set of flags",133,[[],["timerflags",3]]],[11,"all","","Returns the set containing all flags.",133,[[],["timerflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",133,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",133,[[["c_int",6]],[["timerflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",133,[[["c_int",6]],["timerflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",133,[[["c_int",6]],["timerflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",133,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",133,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",133,[[["timerflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",133,[[["timerflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",133,[[["timerflags",3]]]],[11,"remove","","Removes the specified flags in-place.",133,[[["timerflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",133,[[["timerflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",133,[[["timerflags",3]]]],[3,"TimerSetTimeFlags","","Flags that are used for arming the timer.",null,null],[18,"TFD_TIMER_ABSTIME","","",134,null],[11,"empty","","Returns an empty set of flags",134,[[],["timersettimeflags",3]]],[11,"all","","Returns the set containing all flags.",134,[[],["timersettimeflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",134,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",134,[[["c_int",6]],[["timersettimeflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",134,[[["c_int",6]],["timersettimeflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",134,[[["c_int",6]],["timersettimeflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",134,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",134,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",134,[[["timersettimeflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",134,[[["timersettimeflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",134,[[["timersettimeflags",3]]]],[11,"remove","","Removes the specified flags in-place.",134,[[["timersettimeflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",134,[[["timersettimeflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",134,[[["timersettimeflags",3]]]],[4,"Expiration","","An enumeration allowing the definition of the expiration…",null,null],[13,"OneShot","","",135,null],[13,"IntervalDelayed","","",135,null],[13,"Interval","","",135,null],[11,"new","","Creates a new timer based on the clock defined by…",136,[[["timerflags",3],["clockid",4]],["result",6]]],[11,"set","","Sets a new alarm on the timer.",136,[[["expiration",4],["timersettimeflags",3]],["result",6]]],[11,"get","","Get the parameters for the alarm currently set, if any.",136,[[],[["result",6],["option",4]]]],[11,"unset","","Remove the alarm if any is set.",136,[[],["result",6]]],[11,"wait","","Wait for the configured alarm to expire.",136,[[],["result",6]]],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"get","","",137,[[],[["result",6],["ucontext",3]]]],[11,"set","","",137,[[],["result",6]]],[11,"sigmask_mut","","",137,[[],["sigset",3]]],[11,"sigmask","","",137,[[],["sigset",3]]],[0,"unistd","nix","Safe wrappers around functions found in libc \\\"unistd.h\\\"…",null,null],[0,"alarm","nix::unistd","Alarm signal scheduling.",null,null],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",null,[[["c_uint",6]],[["c_uint",6],["option",4]]]],[5,"cancel","","Cancel an previously set alarm signal.",null,[[],[["c_uint",6],["option",4]]]],[0,"acct","nix::unistd","",null,null],[5,"enable","nix::unistd::acct","Enable process accounting",null,[[],["result",6]]],[5,"disable","","Disable process accounting",null,[[],["result",6]]],[5,"pivot_root","nix::unistd","",null,[[],["result",6]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",null,[[["uid",3]],["result",6]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",null,[[["gid",3]],["result",6]]],[3,"Uid","","User identifier",null,null],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",138,[[["uid_t",6]]]],[11,"current","","Returns Uid of calling process. This is practically a more…",138,[[]]],[11,"effective","","Returns effective Uid of calling process. This is…",138,[[]]],[11,"is_root","","Returns true if the `Uid` represents privileged user -…",138,[[]]],[11,"as_raw","","Get the raw `uid_t` wrapped by `self`.",138,[[],["uid_t",6]]],[17,"ROOT","","Constant for UID = 0",null,null],[3,"Gid","","Group identifier",null,null],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",139,[[["gid_t",6]]]],[11,"current","","Returns Gid of calling process. This is practically a more…",139,[[]]],[11,"effective","","Returns effective Gid of calling process. This is…",139,[[]]],[11,"as_raw","","Get the raw `gid_t` wrapped by `self`.",139,[[],["gid_t",6]]],[3,"Pid","","Process identifier",null,null],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",140,[[["pid_t",6]]]],[11,"this","","Returns PID of calling process",140,[[]]],[11,"parent","","Returns PID of parent of calling process",140,[[]]],[11,"as_raw","","Get the raw `pid_t` wrapped by `self`.",140,[[],["pid_t",6]]],[4,"ForkResult","","Represents the successful result of calling `fork`",null,null],[13,"Parent","","",141,null],[12,"child","nix::unistd::ForkResult","",142,null],[13,"Child","nix::unistd","",141,null],[11,"is_child","","Return `true` if this is the child process of the `fork()`",141,[[]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",141,[[]]],[5,"fork","","Create a new child process duplicating the parent process…",null,[[],[["forkresult",4],["result",6]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,[[],["pid",3]]],[5,"getppid","","Get the pid of this processes\' parent (see getpid(2)).",null,[[],["pid",3]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,[[["pid",3]],["result",6]]],[5,"getpgid","","",null,[[["option",4],["pid",3]],[["result",6],["pid",3]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",null,[[],[["result",6],["pid",3]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",null,[[["option",4],["pid",3]],[["result",6],["pid",3]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see…",null,[[["c_int",6]],[["result",6],["pid",3]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see…",null,[[["c_int",6],["pid",3]],["result",6]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,[[],["pid",3]]],[5,"gettid","","Get the caller\'s thread ID (see gettid(2).",null,[[],["pid",3]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"dup2","","Create a copy of the specified file descriptor using the…",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"dup3","","Create a new copy of the specified file descriptor using…",null,[[["rawfd",6],["oflag",3]],[["result",6],["rawfd",6]]]],[5,"chdir","","Change the current working directory of the calling…",null,[[],["result",6]]],[5,"fchdir","","Change the current working directory of the process to the…",null,[[["rawfd",6]],["result",6]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.…",null,[[["mode",3]],["result",6]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path…",null,[[["mode",3]],["result",6]]],[5,"mkfifoat","","Creates new fifo special file (named pipe) with path…",null,[[["option",4],["rawfd",6],["mode",3]],["result",6]]],[5,"symlinkat","","Creates a symbolic link at `path2` which points to `path1`.",null,[[["option",4],["rawfd",6]],["result",6]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",null,[[],[["result",6],["pathbuf",3]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by…",null,[[["gid",3],["option",4],["option",4],["uid",3]],["result",6]]],[5,"fchown","","Change the ownership of the file referred to by the open…",null,[[["rawfd",6],["gid",3],["option",4],["option",4],["uid",3]],["result",6]]],[4,"FchownatFlags","","Flags for `fchownat` function.",null,null],[13,"FollowSymlink","","",143,null],[13,"NoFollowSymlink","","",143,null],[5,"fchownat","","Change the ownership of the file at `path` to be owned by…",null,[[["rawfd",6],["gid",3],["option",4],["option",4],["option",4],["fchownatflags",4],["uid",3]],["result",6]]],[5,"execv","","Replace the current process image with a new one (see…",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"execve","","Replace the current process image with a new one (see…",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"execvp","","Replace the current process image with a new one and…",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"execvpe","","Replace the current process image with a new one and…",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"fexecve","","Replace the current process image with a new one (see…",null,[[["rawfd",6]],[["infallible",4],["result",6]]]],[5,"execveat","","Execute program relative to a directory file descriptor…",null,[[["atflags",3],["rawfd",6],["cstr",3]],[["infallible",4],["result",6]]]],[5,"daemon","","Daemonize this process by detaching from the controlling…",null,[[],["result",6]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",null,[[["osstr",3],["asref",8]],["result",6]]],[5,"gethostname","","Get the host name and store it in the provided buffer,…",null,[[],[["cstr",3],["result",6]]]],[5,"close","","Close a raw file descriptor",null,[[["rawfd",6]],["result",6]]],[5,"read","","Read from a raw file descriptor.",null,[[["rawfd",6]],["result",6]]],[5,"write","","Write to a raw file descriptor.",null,[[["rawfd",6]],["result",6]]],[4,"Whence","","Directive that tells `lseek` and `lseek64` what the offset…",null,null],[13,"SeekSet","","Specify an offset relative to the start of the file.",144,null],[13,"SeekCur","","Specify an offset relative to the current file location.",144,null],[13,"SeekEnd","","Specify an offset relative to the end of the file.",144,null],[13,"SeekData","","Specify an offset relative to the next location in the…",144,null],[13,"SeekHole","","Specify an offset relative to the next hole in the file…",144,null],[5,"lseek","","Move the read/write file offset.",null,[[["off_t",6],["rawfd",6],["whence",4]],[["off_t",6],["result",6]]]],[5,"lseek64","","",null,[[["rawfd",6],["whence",4],["off64_t",6]],[["result",6],["off64_t",6]]]],[5,"pipe","","Create an interprocess channel.",null,[[],["result",6]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor…",null,[[["oflag",3]],["result",6]]],[5,"truncate","","Truncate a file to a specified length",null,[[["off_t",6]],["result",6]]],[5,"ftruncate","","Truncate a file to a specified length",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"isatty","","",null,[[["rawfd",6]],["result",6]]],[4,"LinkatFlags","","Flags for `linkat` function.",null,null],[13,"SymlinkFollow","","",145,null],[13,"NoSymlinkFollow","","",145,null],[5,"linkat","","Link one file to another file",null,[[["option",4],["rawfd",6],["linkatflags",4]],["result",6]]],[5,"unlink","","Remove a directory entry",null,[[],["result",6]]],[4,"UnlinkatFlags","","Flags for `unlinkat` function.",null,null],[13,"RemoveDir","","",146,null],[13,"NoRemoveDir","","",146,null],[5,"unlinkat","","Remove a directory entry",null,[[["option",4],["rawfd",6],["unlinkatflags",4]],["result",6]]],[5,"chroot","","",null,[[],["result",6]]],[5,"sync","","Commit filesystem caches to disk",null,[[]]],[5,"fsync","","Synchronize changes to a file",null,[[["rawfd",6]],["result",6]]],[5,"fdatasync","","Synchronize the data of a file",null,[[["rawfd",6]],["result",6]]],[5,"getuid","","Get a real user ID",null,[[],["uid",3]]],[5,"geteuid","","Get the effective user ID",null,[[],["uid",3]]],[5,"getgid","","Get the real group ID",null,[[],["gid",3]]],[5,"getegid","","Get the effective group ID",null,[[],["gid",3]]],[5,"seteuid","","Set the effective user ID",null,[[["uid",3]],["result",6]]],[5,"setegid","","Set the effective group ID",null,[[["gid",3]],["result",6]]],[5,"setuid","","Set the user ID",null,[[["uid",3]],["result",6]]],[5,"setgid","","Set the group ID",null,[[["gid",3]],["result",6]]],[5,"setfsuid","","Set the user identity used for filesystem checks…",null,[[["uid",3]],["uid",3]]],[5,"setfsgid","","Set the group identity used for filesystem checks…",null,[[["gid",3]],["gid",3]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling…",null,[[],[["result",6],["vec",3]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling…",null,[[],["result",6]]],[5,"getgrouplist","","Calculate the supplementary group access list.",null,[[["cstr",3],["gid",3]],[["result",6],["vec",3]]]],[5,"initgroups","","Initialize the supplementary group access list.",null,[[["cstr",3],["gid",3]],["result",6]]],[5,"pause","","Suspend the thread until a signal is received.",null,[[]]],[5,"sleep","","Suspend execution for an interval of time",null,[[["c_uint",6]],["c_uint",6]]],[5,"mkstemp","","Creates a regular file which persists even after process…",null,[[],["result",6]]],[4,"PathconfVar","","Variable names for `pathconf`",null,null],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed…",147,null],[13,"LINK_MAX","","Maximum number of links to a single file.",147,null],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",147,null],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a…",147,null],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the…",147,null],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a…",147,null],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic…",147,null],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",147,null],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for…",147,null],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the…",147,null],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",147,null],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",147,null],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",147,null],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",147,null],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process…",147,null],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an…",147,null],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a…",147,null],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed…",147,null],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed…",147,null],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed…",147,null],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead…",null,[[["rawfd",6],["pathconfvar",4]],[["option",4],["result",6]]]],[5,"pathconf","","Get path-dependent configurable system variables (see…",null,[[["pathconfvar",4]],[["option",4],["result",6]]]],[4,"SysconfVar","","Variable names for `sysconf`",null,null],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call…",148,null],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations…",148,null],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its…",148,null],[13,"ARG_MAX","","Maximum length of argument to the exec functions including…",148,null],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with…",148,null],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",148,null],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc…",148,null],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",148,null],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc…",148,null],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",148,null],[13,"CLK_TCK","","",148,null],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry…",148,null],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",148,null],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within…",148,null],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the…",148,null],[13,"IOV_MAX","","Maximum number of iovec structures that one process has…",148,null],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a…",148,null],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",148,null],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per…",148,null],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",148,null],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",148,null],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a…",148,null],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the…",148,null],[13,"OPEN_MAX","","A value one greater than the maximum value that the system…",148,null],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",148,null],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",148,null],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",148,null],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",148,null],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks…",148,null],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",148,null],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",148,null],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",148,null],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",148,null],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking…",148,null],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",148,null],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",148,null],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",148,null],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",148,null],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and…",148,null],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",148,null],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",148,null],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",148,null],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",148,null],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression…",148,null],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved…",148,null],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",148,null],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects…",148,null],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",148,null],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",148,null],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",148,null],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server…",148,null],[13,"_POSIX_SS_REPL_MAX","","",148,null],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and…",148,null],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address…",148,null],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size…",148,null],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks…",148,null],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority…",148,null],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority…",148,null],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution…",148,null],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared…",148,null],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority…",148,null],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority…",148,null],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",148,null],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server…",148,null],[13,"_POSIX_THREADS","","The implementation supports threads.",148,null],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",148,null],[13,"_POSIX_TIMERS","","The implementation supports timers.",148,null],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",148,null],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",148,null],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",148,null],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",148,null],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",148,null],[13,"_POSIX_TRACE_NAME_MAX","","",148,null],[13,"_POSIX_TRACE_SYS_MAX","","",148,null],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",148,null],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",148,null],[13,"_POSIX_VERSION","","Integer value indicating version of this standard…",148,null],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation…",148,null],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation…",148,null],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation…",148,null],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation…",148,null],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",148,null],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development…",148,null],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics…",148,null],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development…",148,null],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities…",148,null],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the…",148,null],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services…",148,null],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",148,null],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart…",148,null],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request…",148,null],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request…",148,null],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request…",148,null],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development…",148,null],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities…",148,null],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and…",148,null],[13,"PAGE_SIZE","","The size of a system page in bytes.",148,null],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",148,null],[13,"PTHREAD_KEYS_MAX","","",148,null],[13,"PTHREAD_STACK_MIN","","",148,null],[13,"PTHREAD_THREADS_MAX","","",148,null],[13,"RE_DUP_MAX","","",148,null],[13,"RTSIG_MAX","","",148,null],[13,"SEM_NSEMS_MAX","","",148,null],[13,"SEM_VALUE_MAX","","",148,null],[13,"SIGQUEUE_MAX","","",148,null],[13,"STREAM_MAX","","",148,null],[13,"SYMLOOP_MAX","","",148,null],[13,"TIMER_MAX","","",148,null],[13,"TTY_NAME_MAX","","",148,null],[13,"TZNAME_MAX","","",148,null],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option…",148,null],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2…",148,null],[13,"_XOPEN_LEGACY","","",148,null],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option…",148,null],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads…",148,null],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared…",148,null],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",148,null],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",148,null],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability…",148,null],[5,"sysconf","","Get configurable system variables (see sysconf(3))",null,[[["sysconfvar",4]],[["option",4],["result",6]]]],[3,"AccessFlags","","Options for access()",null,null],[18,"F_OK","","Test for existence of file.",149,null],[18,"R_OK","","Test for read permission.",149,null],[18,"W_OK","","Test for write permission.",149,null],[18,"X_OK","","Test for execute (search) permission.",149,null],[11,"empty","","Returns an empty set of flags",149,[[],["accessflags",3]]],[11,"all","","Returns the set containing all flags.",149,[[],["accessflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",149,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",149,[[["c_int",6]],[["accessflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",149,[[["c_int",6]],["accessflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",149,[[["c_int",6]],["accessflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",149,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",149,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",149,[[["accessflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",149,[[["accessflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",149,[[["accessflags",3]]]],[11,"remove","","Removes the specified flags in-place.",149,[[["accessflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",149,[[["accessflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",149,[[["accessflags",3]]]],[5,"access","","Checks the file named by `path` for accessibility…",null,[[["accessflags",3]],["result",6]]],[3,"User","","Representation of a User, based on `libc::passwd`",null,null],[12,"name","","Username",150,null],[12,"passwd","","User password (probably encrypted)",150,null],[12,"uid","","User ID",150,null],[12,"gid","","Group ID",150,null],[12,"gecos","","User information",150,null],[12,"dir","","Home directory",150,null],[12,"shell","","Path to shell",150,null],[11,"from_uid","","Get a user by UID.",150,[[["uid",3]],[["result",6],["option",4]]]],[11,"from_name","","Get a user by name.",150,[[],[["result",6],["option",4]]]],[3,"Group","","Representation of a Group, based on `libc::group`",null,null],[12,"name","","Group name",151,null],[12,"gid","","Group ID",151,null],[12,"mem","","List of Group members",151,null],[11,"from_gid","","Get a group by GID.",151,[[["gid",3]],[["result",6],["option",4]]]],[11,"from_name","","Get a group by name.",151,[[],[["result",6],["option",4]]]],[5,"ttyname","","Get the name of the terminal device that is open on file…",null,[[["rawfd",6]],[["result",6],["pathbuf",3]]]],[6,"Result","nix","Nix Result Type",null,null],[4,"Error","","Nix Error Type",null,null],[13,"Sys","","",152,null],[13,"InvalidPath","","",152,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust\'s native…",152,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance…",152,null],[11,"as_errno","","Convert this `Error` to an `Errno`.",152,[[],[["option",4],["errno",4]]]],[11,"from_errno","","Create a nix Error from a given errno",152,[[["errno",4]],["error",4]]],[11,"last","","Get the current errno and convert it to a nix Error",152,[[],["error",4]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",152,[[],["error",4]]],[8,"NixPath","","",null,null],[10,"is_empty","","",153,[[]]],[10,"len","","",153,[[]]],[10,"with_nix_path","","",153,[[],["result",6]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes…",null,null],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",null,null],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",null,null],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads…",null,null],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no…",null,null],[14,"ioctl_none_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that passes…",null,null],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data…",null,null],[14,"ioctl_read_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads…",null,null],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data…",null,null],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that writes…",null,null],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an…",null,null],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that writes…",null,null],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and…",null,null],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads…",null,null],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an…",null,null],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an…",null,null],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and…",null,null],[14,"cmsg_space","","Create a buffer large enough for storing some control…",null,null],[11,"from","nix::dir","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"into_iter","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","nix::errno","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","nix::fcntl","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","nix::ifaddrs","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"into_iter","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","nix::kmod","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","nix::mount","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","nix::mqueue","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","nix::net::if_","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","nix::poll","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","nix::pty","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","nix::sched","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","nix::sys::aio","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","nix::sys::epoll","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","nix::sys::eventfd","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","nix::sys::memfd","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","nix::sys::mman","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","nix::sys::ptrace","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","nix::sys::quota","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","nix::sys::reboot","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","nix::sys::select","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"into_iter","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","nix::sys::signal","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"into_iter","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","nix::sys::signalfd","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"into_iter","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","nix::sys::socket","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","nix::sys::socket::sockopt","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","nix::sys::socket","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"into_iter","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","nix::sys::stat","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","nix::sys::statfs","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","nix::sys::statvfs","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","nix::sys::sysinfo","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","nix::sys::termios","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","nix::sys::time","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","nix::sys::uio","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","nix::sys::utsname","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","nix::sys::wait","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","nix::sys::inotify","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","nix::sys::timerfd","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","nix::ucontext","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","nix::unistd","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"to_string","","",139,[[],["string",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"to_string","","",140,[[],["string",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","nix","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"to_string","","",152,[[],["string",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"fmt","nix::sys::socket","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::pty","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::socket","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::signalfd","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::socket","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::stat","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","nix::pty","",25,[[["winsize",3]]]],[11,"ne","","",25,[[["winsize",3]]]],[11,"eq","nix::sys::socket","",68,[[["sockaddr",3]]]],[11,"ne","","",68,[[["sockaddr",3]]]],[11,"eq","nix::sys::signalfd","",63,[[["signalfd_siginfo",3]]]],[11,"ne","","",63,[[["signalfd_siginfo",3]]]],[11,"eq","nix::sys::socket","",69,[[["sockaddr_in",3]]]],[11,"ne","","",69,[[["sockaddr_in",3]]]],[11,"eq","","",67,[[["msghdr",3]]]],[11,"ne","","",67,[[["msghdr",3]]]],[11,"eq","","",71,[[["sockaddr_storage",3]]]],[11,"eq","","",66,[[["cmsghdr",3]]]],[11,"ne","","",66,[[["cmsghdr",3]]]],[11,"eq","","",70,[[["sockaddr_in6",3]]]],[11,"ne","","",70,[[["sockaddr_in6",3]]]],[11,"eq","","",72,[[["sockaddr_un",3]]]],[11,"eq","nix::sys::stat","",100,[[["stat",3]]]],[11,"ne","","",100,[[["stat",3]]]],[11,"clone","nix::sys::signalfd","",63,[[],["signalfd_siginfo",3]]],[11,"clone","nix::sys::stat","",100,[[],["stat",3]]],[11,"clone","nix::sys::socket","",68,[[],["sockaddr",3]]],[11,"clone","","",72,[[],["sockaddr_un",3]]],[11,"clone","","",66,[[],["cmsghdr",3]]],[11,"clone","","",69,[[],["sockaddr_in",3]]],[11,"clone","nix::pty","",25,[[],["winsize",3]]],[11,"clone","nix::sys::socket","",71,[[],["sockaddr_storage",3]]],[11,"clone","","",70,[[],["sockaddr_in6",3]]],[11,"clone","","",67,[[],["msghdr",3]]],[11,"hash","","",67,[[]]],[11,"hash","nix::sys::stat","",100,[[]]],[11,"hash","nix::sys::socket","",70,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",66,[[]]],[11,"hash","nix::pty","",25,[[]]],[11,"hash","nix::sys::signalfd","",63,[[]]],[11,"hash","nix::sys::socket","",68,[[]]],[11,"get","nix::sys::socket::sockopt","",163,[[["rawfd",6]],["result",6]]],[11,"get","","",164,[[["rawfd",6]],["result",6]]],[11,"get","","",165,[[["rawfd",6]],["result",6]]],[11,"get","","",166,[[["rawfd",6]],[["result",6],["linger",3]]]],[11,"get","","",171,[[["rawfd",6]],["result",6]]],[11,"get","","",172,[[["rawfd",6]],["result",6]]],[11,"get","","",173,[[["rawfd",6]],[["timeval",3],["result",6]]]],[11,"get","","",174,[[["rawfd",6]],[["timeval",3],["result",6]]]],[11,"get","","",175,[[["rawfd",6]],["result",6]]],[11,"get","","",176,[[["rawfd",6]],["result",6]]],[11,"get","","",177,[[["rawfd",6]],["result",6]]],[11,"get","","",178,[[["rawfd",6]],["result",6]]],[11,"get","","",179,[[["rawfd",6]],[["result",6],["unixcredentials",3]]]],[11,"get","","",180,[[["rawfd",6]],["result",6]]],[11,"get","","",181,[[["rawfd",6]],["result",6]]],[11,"get","","",182,[[["rawfd",6]],["result",6]]],[11,"get","","",185,[[["rawfd",6]],[["result",6],["socktype",4]]]],[11,"get","","",186,[[["rawfd",6]],["result",6]]],[11,"get","","",187,[[["rawfd",6]],[["result",6],["osstring",3]]]],[11,"get","","",188,[[["rawfd",6]],[["sockaddr_in",3],["result",6]]]],[11,"get","","",189,[[["rawfd",6]],["result",6]]],[11,"get","","",190,[[["rawfd",6]],["result",6]]],[11,"get","","",191,[[["rawfd",6]],["result",6]]],[11,"get","","",192,[[["rawfd",6]],["result",6]]],[11,"get","","",193,[[["rawfd",6]],[["result",6],["osstring",3]]]],[11,"get","","",194,[[["rawfd",6]],["result",6]]],[11,"get","","",195,[[["rawfd",6]],["result",6]]],[11,"get","","",196,[[["rawfd",6]],[["c_int",6],["result",6]]]],[11,"get","","",197,[[["rawfd",6]],["result",6]]],[11,"set","","",163,[[["rawfd",6]],["result",6]]],[11,"set","","",164,[[["rawfd",6]],["result",6]]],[11,"set","","",165,[[["rawfd",6]],["result",6]]],[11,"set","","",166,[[["rawfd",6],["linger",3]],["result",6]]],[11,"set","","",167,[[["rawfd",6],["ipmembershiprequest",3]],["result",6]]],[11,"set","","",168,[[["rawfd",6],["ipmembershiprequest",3]],["result",6]]],[11,"set","","",169,[[["rawfd",6],["ipv6membershiprequest",3]],["result",6]]],[11,"set","","",170,[[["rawfd",6],["ipv6membershiprequest",3]],["result",6]]],[11,"set","","",171,[[["rawfd",6]],["result",6]]],[11,"set","","",172,[[["rawfd",6]],["result",6]]],[11,"set","","",173,[[["rawfd",6],["timeval",3]],["result",6]]],[11,"set","","",174,[[["rawfd",6],["timeval",3]],["result",6]]],[11,"set","","",175,[[["rawfd",6]],["result",6]]],[11,"set","","",176,[[["rawfd",6]],["result",6]]],[11,"set","","",178,[[["rawfd",6]],["result",6]]],[11,"set","","",180,[[["rawfd",6]],["result",6]]],[11,"set","","",181,[[["rawfd",6]],["result",6]]],[11,"set","","",182,[[["rawfd",6]],["result",6]]],[11,"set","","",183,[[["rawfd",6]],["result",6]]],[11,"set","","",184,[[["rawfd",6]],["result",6]]],[11,"set","","",187,[[["rawfd",6],["osstring",3]],["result",6]]],[11,"set","","",189,[[["rawfd",6]],["result",6]]],[11,"set","","",190,[[["rawfd",6]],["result",6]]],[11,"set","","",191,[[["rawfd",6]],["result",6]]],[11,"set","","",192,[[["rawfd",6]],["result",6]]],[11,"set","","",193,[[["rawfd",6],["osstring",3]],["result",6]]],[11,"set","","",194,[[["rawfd",6]],["result",6]]],[11,"set","","",195,[[["rawfd",6]],["result",6]]],[11,"set","","",196,[[["rawfd",6],["c_int",6]],["result",6]]],[11,"set","","",197,[[["rawfd",6]],["result",6]]],[11,"set","","",198,[[["rawfd",6]],["result",6]]],[11,"set","","",199,[[["rawfd",6]],["result",6]]],[11,"seconds","nix::sys::time","",121,[[],["timespec",3]]],[11,"milliseconds","","",121,[[],["timespec",3]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",121,[[],["timespec",3]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",121,[[],["timespec",3]]],[11,"num_seconds","","",121,[[]]],[11,"num_milliseconds","","",121,[[]]],[11,"num_microseconds","","",121,[[]]],[11,"num_nanoseconds","","",121,[[]]],[11,"seconds","","",122,[[],["timeval",3]]],[11,"milliseconds","","",122,[[],["timeval",3]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",122,[[],["timeval",3]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.…",122,[[],["timeval",3]]],[11,"num_seconds","","",122,[[]]],[11,"num_milliseconds","","",122,[[]]],[11,"num_microseconds","","",122,[[]]],[11,"num_nanoseconds","","",122,[[]]],[11,"drop","nix::dir","",0,[[]]],[11,"drop","","",154,[[]]],[11,"drop","nix::ifaddrs","",155,[[]]],[11,"drop","nix::pty","",156,[[]]],[11,"drop","nix::sys::aio","If the `AioCb` has no remaining state in the kernel, just…",33,[[]]],[11,"drop","nix::sys::signalfd","",65,[[]]],[11,"as_mut","nix::sys::time","",121,[[],["timespec",3]]],[11,"as_mut","","",122,[[],["timeval",3]]],[11,"as_ref","nix::sys::signal","",54,[[]]],[11,"as_ref","","",57,[[],["sigset_t",3]]],[11,"as_ref","nix::sys::time","",121,[[],["timespec",3]]],[11,"as_ref","","",122,[[],["timeval",3]]],[11,"from","nix::sys::aio","",34,[[["vec",3],["aiocb",3]],["liocb",3]]],[11,"from","nix::sys::signal","",161,[[["sigevent",3]]]],[11,"from","nix::sys::socket","",88,[[["ucred",3]]]],[11,"from","nix::sys::termios","",110,[[["termios",3]]]],[11,"from","nix::sys::time","",121,[[["timespec",3]]]],[11,"from","","",122,[[["timeval",3]]]],[11,"from","nix","",202,[[["pid",3]]]],[11,"from","nix::unistd","",150,[[["passwd",3]],["user",3]]],[11,"from","","",151,[[["group",3]],["group",3]]],[11,"from","nix","",152,[[["errno",4]],["error",4]]],[11,"from","","",152,[[["fromutf8error",3]],["error",4]]],[11,"into","nix::sys::socket","",88,[[],["ucred",3]]],[11,"next_back","nix::sys::select","",160,[[],[["option",4],["rawfd",6]]]],[11,"extend","nix::fcntl","",6,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","nix::kmod","",15,[[["intoiterator",8]]]],[11,"extend","","",16,[[["intoiterator",8]]]],[11,"extend","nix::mount","",17,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"extend","nix::mqueue","",19,[[["intoiterator",8]]]],[11,"extend","","",20,[[["intoiterator",8]]]],[11,"extend","nix::net::if_","",22,[[["intoiterator",8]]]],[11,"extend","nix::poll","",24,[[["intoiterator",8]]]],[11,"extend","nix::sched","",157,[[["intoiterator",8]]]],[11,"extend","nix::sys::epoll","",35,[[["intoiterator",8]]]],[11,"extend","","",37,[[["intoiterator",8]]]],[11,"extend","nix::sys::eventfd","",39,[[["intoiterator",8]]]],[11,"extend","nix::sys::memfd","",40,[[["intoiterator",8]]]],[11,"extend","nix::sys::mman","",41,[[["intoiterator",8]]]],[11,"extend","","",42,[[["intoiterator",8]]]],[11,"extend","","",44,[[["intoiterator",8]]]],[11,"extend","","",45,[[["intoiterator",8]]]],[11,"extend","nix::sys::ptrace","",159,[[["intoiterator",8]]]],[11,"extend","nix::sys::quota","",50,[[["intoiterator",8]]]],[11,"extend","nix::sys::signal","",55,[[["intoiterator",8]]]],[11,"extend","nix::sys::signalfd","",64,[[["intoiterator",8]]]],[11,"extend","nix::sys::socket","",86,[[["intoiterator",8]]]],[11,"extend","","",87,[[["intoiterator",8]]]],[11,"extend","nix::sys::stat","",101,[[["intoiterator",8]]]],[11,"extend","","",102,[[["intoiterator",8]]]],[11,"extend","nix::sys::statvfs","",107,[[["intoiterator",8]]]],[11,"extend","nix::sys::termios","",116,[[["intoiterator",8]]]],[11,"extend","","",117,[[["intoiterator",8]]]],[11,"extend","","",118,[[["intoiterator",8]]]],[11,"extend","","",119,[[["intoiterator",8]]]],[11,"extend","nix::sys::wait","",126,[[["intoiterator",8]]]],[11,"extend","nix::sys::inotify","",128,[[["intoiterator",8]]]],[11,"extend","","",129,[[["intoiterator",8]]]],[11,"extend","nix::sys::timerfd","",133,[[["intoiterator",8]]]],[11,"extend","","",134,[[["intoiterator",8]]]],[11,"extend","nix::unistd","",149,[[["intoiterator",8]]]],[11,"next","nix::dir","",154,[[],["option",4]]],[11,"next","nix::ifaddrs","",155,[[],[["interfaceaddress",3],["option",4]]]],[11,"next","nix::sys::select","",160,[[],[["option",4],["rawfd",6]]]],[11,"size_hint","","",160,[[]]],[11,"next","nix::sys::signal","",162,[[],[["option",4],["signal",4]]]],[11,"next","nix::sys::signalfd","",65,[[],["option",4]]],[11,"next","nix::sys::socket","",200,[[],[["controlmessageowned",4],["option",4]]]],[11,"clone","nix::dir","",0,[[],["dir",3]]],[11,"clone","","",2,[[],["entry",3]]],[11,"clone","","",1,[[],["type",4]]],[11,"clone","nix::errno","",3,[[],["errno",4]]],[11,"clone","nix::fcntl","",6,[[],["atflags",3]]],[11,"clone","","",7,[[],["oflag",3]]],[11,"clone","","",8,[[],["sealflag",3]]],[11,"clone","","",9,[[],["fdflag",3]]],[11,"clone","","",11,[[],["flockarg",4]]],[11,"clone","","",12,[[],["splicefflags",3]]],[11,"clone","","",13,[[],["fallocateflags",3]]],[11,"clone","","",5,[[],["posixfadviseadvice",4]]],[11,"clone","nix::ifaddrs","",14,[[],["interfaceaddress",3]]],[11,"clone","nix::kmod","",15,[[],["moduleinitflags",3]]],[11,"clone","","",16,[[],["deletemoduleflags",3]]],[11,"clone","nix::mount","",17,[[],["msflags",3]]],[11,"clone","","",18,[[],["mntflags",3]]],[11,"clone","nix::mqueue","",19,[[],["mq_oflag",3]]],[11,"clone","","",20,[[],["fdflag",3]]],[11,"clone","","",21,[[],["mqattr",3]]],[11,"clone","nix::net::if_","",22,[[],["interfaceflags",3]]],[11,"clone","nix::poll","",23,[[],["pollfd",3]]],[11,"clone","","",24,[[],["pollflags",3]]],[11,"clone","nix::pty","",26,[[],["openptyresult",3]]],[11,"clone","","",27,[[],["forkptyresult",3]]],[11,"clone","","",156,[[],["ptymaster",3]]],[11,"clone","nix::sched","",157,[[],["cloneflags",3]]],[11,"clone","","",158,[[],["cpuset",3]]],[11,"clone","nix::sys::aio","",28,[[],["aiofsyncmode",4]]],[11,"clone","","",29,[[],["lioopcode",4]]],[11,"clone","","",30,[[],["liomode",4]]],[11,"clone","","",31,[[],["aiocancelstat",4]]],[11,"clone","nix::sys::epoll","",35,[[],["epollflags",3]]],[11,"clone","","",36,[[],["epollop",4]]],[11,"clone","","",37,[[],["epollcreateflags",3]]],[11,"clone","","",38,[[],["epollevent",3]]],[11,"clone","nix::sys::eventfd","",39,[[],["efdflags",3]]],[11,"clone","nix::sys::memfd","",40,[[],["memfdcreateflag",3]]],[11,"clone","nix::sys::mman","",41,[[],["protflags",3]]],[11,"clone","","",42,[[],["mapflags",3]]],[11,"clone","","",43,[[],["mmapadvise",4]]],[11,"clone","","",44,[[],["msflags",3]]],[11,"clone","","",45,[[],["mlockallflags",3]]],[11,"clone","nix::sys::ptrace","",46,[[],["request",4]]],[11,"clone","","",47,[[],["event",4]]],[11,"clone","","",159,[[],["options",3]]],[11,"clone","nix::sys::quota","",48,[[],["quotatype",4]]],[11,"clone","","",49,[[],["quotafmt",4]]],[11,"clone","","",50,[[],["quotavalidflags",3]]],[11,"clone","","",51,[[],["dqblk",3]]],[11,"clone","nix::sys::reboot","",52,[[],["rebootmode",4]]],[11,"clone","nix::sys::select","",53,[[],["fdset",3]]],[11,"clone","nix::sys::signal","",54,[[],["signal",4]]],[11,"clone","","",162,[[],["signaliterator",3]]],[11,"clone","","",55,[[],["saflags",3]]],[11,"clone","","",56,[[],["sigmaskhow",4]]],[11,"clone","","",57,[[],["sigset",3]]],[11,"clone","","",58,[[],["sighandler",4]]],[11,"clone","","",59,[[],["sigaction",3]]],[11,"clone","","",60,[[],["sigevnotify",4]]],[11,"clone","","",161,[[],["sigevent",3]]],[11,"clone","nix::sys::signalfd","",64,[[],["sfdflags",3]]],[11,"clone","","",65,[[],["signalfd",3]]],[11,"clone","nix::sys::socket","",73,[[],["addressfamily",4]]],[11,"clone","","",75,[[],["inetaddr",4]]],[11,"clone","","",77,[[],["ipaddr",4]]],[11,"clone","","",78,[[],["ipv4addr",3]]],[11,"clone","","",79,[[],["ipv6addr",3]]],[11,"clone","","",76,[[],["unixaddr",3]]],[11,"clone","","",74,[[],["sockaddr",4]]],[11,"clone","","",81,[[],["netlinkaddr",3]]],[11,"clone","","",82,[[],["algaddr",3]]],[11,"clone","","",80,[[],["linkaddr",3]]],[11,"clone","","",83,[[],["vsockaddr",3]]],[11,"clone","nix::sys::socket::sockopt","",163,[[],["reuseaddr",3]]],[11,"clone","","",164,[[],["reuseport",3]]],[11,"clone","","",165,[[],["tcpnodelay",3]]],[11,"clone","","",166,[[],["linger",3]]],[11,"clone","","",167,[[],["ipaddmembership",3]]],[11,"clone","","",168,[[],["ipdropmembership",3]]],[11,"clone","","",169,[[],["ipv6addmembership",3]]],[11,"clone","","",170,[[],["ipv6dropmembership",3]]],[11,"clone","","",171,[[],["ipmulticastttl",3]]],[11,"clone","","",172,[[],["ipmulticastloop",3]]],[11,"clone","","",173,[[],["receivetimeout",3]]],[11,"clone","","",174,[[],["sendtimeout",3]]],[11,"clone","","",175,[[],["broadcast",3]]],[11,"clone","","",176,[[],["oobinline",3]]],[11,"clone","","",177,[[],["socketerror",3]]],[11,"clone","","",178,[[],["keepalive",3]]],[11,"clone","","",179,[[],["peercredentials",3]]],[11,"clone","","",180,[[],["tcpkeepidle",3]]],[11,"clone","","",181,[[],["rcvbuf",3]]],[11,"clone","","",182,[[],["sndbuf",3]]],[11,"clone","","",183,[[],["rcvbufforce",3]]],[11,"clone","","",184,[[],["sndbufforce",3]]],[11,"clone","","",185,[[],["socktype",3]]],[11,"clone","","",186,[[],["acceptconn",3]]],[11,"clone","","",187,[[],["bindtodevice",3]]],[11,"clone","","",188,[[],["originaldst",3]]],[11,"clone","","",189,[[],["receivetimestamp",3]]],[11,"clone","","",190,[[],["iptransparent",3]]],[11,"clone","","",191,[[],["mark",3]]],[11,"clone","","",192,[[],["passcred",3]]],[11,"clone","","",193,[[],["tcpcongestion",3]]],[11,"clone","","",194,[[],["ipv4packetinfo",3]]],[11,"clone","","",195,[[],["ipv6recvpacketinfo",3]]],[11,"clone","","",196,[[],["udpgsosegment",3]]],[11,"clone","","",197,[[],["udpgrosegment",3]]],[11,"clone","","",198,[[],["algsetaeadauthsize",3]]],[11,"clone","","",199,[[],["algsetkey",3]]],[11,"clone","nix::sys::socket","",84,[[],["socktype",4]]],[11,"clone","","",85,[[],["sockprotocol",4]]],[11,"clone","","",86,[[],["sockflag",3]]],[11,"clone","","",87,[[],["msgflags",3]]],[11,"clone","","",88,[[],["unixcredentials",3]]],[11,"clone","","",89,[[],["ipmembershiprequest",3]]],[11,"clone","","",90,[[],["ipv6membershiprequest",3]]],[11,"clone","","",91,[[],["recvmsg",3]]],[11,"clone","","",200,[[],["cmsgiterator",3]]],[11,"clone","","",92,[[],["controlmessageowned",4]]],[11,"clone","","",93,[[],["controlmessage",4]]],[11,"clone","","",96,[[],["socklevel",4]]],[11,"clone","","",99,[[],["shutdown",4]]],[11,"clone","nix::sys::stat","",101,[[],["sflag",3]]],[11,"clone","","",102,[[],["mode",3]]],[11,"clone","","",103,[[],["fchmodatflags",4]]],[11,"clone","","",104,[[],["utimensatflags",4]]],[11,"clone","nix::sys::statfs","",106,[[],["statfs",3]]],[11,"clone","","",105,[[],["fstype",3]]],[11,"clone","nix::sys::statvfs","",107,[[],["fsflags",3]]],[11,"clone","","",108,[[],["statvfs",3]]],[11,"clone","nix::sys::sysinfo","",109,[[],["sysinfo",3]]],[11,"clone","nix::sys::termios","",110,[[],["termios",3]]],[11,"clone","","",111,[[],["baudrate",4]]],[11,"clone","","",112,[[],["setarg",4]]],[11,"clone","","",113,[[],["flusharg",4]]],[11,"clone","","",114,[[],["flowarg",4]]],[11,"clone","","",115,[[],["specialcharacterindices",4]]],[11,"clone","","",116,[[],["inputflags",3]]],[11,"clone","","",117,[[],["outputflags",3]]],[11,"clone","","",118,[[],["controlflags",3]]],[11,"clone","","",119,[[],["localflags",3]]],[11,"clone","nix::sys::time","",121,[[],["timespec",3]]],[11,"clone","","",122,[[],["timeval",3]]],[11,"clone","nix::sys::uio","",123,[[],["remoteiovec",3]]],[11,"clone","","",124,[[],["iovec",3]]],[11,"clone","nix::sys::utsname","",125,[[],["utsname",3]]],[11,"clone","nix::sys::wait","",126,[[],["waitpidflag",3]]],[11,"clone","","",127,[[],["waitstatus",4]]],[11,"clone","nix::sys::inotify","",128,[[],["addwatchflags",3]]],[11,"clone","","",129,[[],["initflags",3]]],[11,"clone","","",131,[[],["inotify",3]]],[11,"clone","","",201,[[],["watchdescriptor",3]]],[11,"clone","nix::sys::timerfd","",136,[[],["timerfd",3]]],[11,"clone","","",132,[[],["clockid",4]]],[11,"clone","","",133,[[],["timerflags",3]]],[11,"clone","","",134,[[],["timersettimeflags",3]]],[11,"clone","","",135,[[],["expiration",4]]],[11,"clone","nix::ucontext","",137,[[],["ucontext",3]]],[11,"clone","nix::unistd","",138,[[],["uid",3]]],[11,"clone","","",139,[[],["gid",3]]],[11,"clone","","",140,[[],["pid",3]]],[11,"clone","","",141,[[],["forkresult",4]]],[11,"clone","","",143,[[],["fchownatflags",4]]],[11,"clone","","",144,[[],["whence",4]]],[11,"clone","","",145,[[],["linkatflags",4]]],[11,"clone","","",146,[[],["unlinkatflags",4]]],[11,"clone","","",147,[[],["pathconfvar",4]]],[11,"clone","","",148,[[],["sysconfvar",4]]],[11,"clone","","",149,[[],["accessflags",3]]],[11,"clone","","",150,[[],["user",3]]],[11,"clone","","",151,[[],["group",3]]],[11,"clone","nix","",152,[[],["error",4]]],[11,"default","nix::sched","",158,[[]]],[11,"default","nix::sys::quota","",50,[[],["quotavalidflags",3]]],[11,"default","","",51,[[],["dqblk",3]]],[11,"default","nix::sys::select","",53,[[]]],[11,"default","nix::sys::socket::sockopt","",199,[[]]],[11,"default","nix::sys::socket","",88,[[]]],[11,"default","nix::sys::statvfs","",107,[[],["fsflags",3]]],[11,"cmp","nix::fcntl","",6,[[["atflags",3]],["ordering",4]]],[11,"cmp","","",7,[[["oflag",3]],["ordering",4]]],[11,"cmp","","",8,[[["sealflag",3]],["ordering",4]]],[11,"cmp","","",9,[[["fdflag",3]],["ordering",4]]],[11,"cmp","","",12,[[["splicefflags",3]],["ordering",4]]],[11,"cmp","","",13,[[["fallocateflags",3]],["ordering",4]]],[11,"cmp","","",5,[[["posixfadviseadvice",4]],["ordering",4]]],[11,"cmp","nix::kmod","",15,[[["moduleinitflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["deletemoduleflags",3]],["ordering",4]]],[11,"cmp","nix::mount","",17,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",18,[[["mntflags",3]],["ordering",4]]],[11,"cmp","nix::mqueue","",19,[[["mq_oflag",3]],["ordering",4]]],[11,"cmp","","",20,[[["fdflag",3]],["ordering",4]]],[11,"cmp","nix::net::if_","",22,[[["interfaceflags",3]],["ordering",4]]],[11,"cmp","nix::poll","",24,[[["pollflags",3]],["ordering",4]]],[11,"cmp","nix::sched","",157,[[["cloneflags",3]],["ordering",4]]],[11,"cmp","nix::sys::aio","",28,[[["aiofsyncmode",4]],["ordering",4]]],[11,"cmp","","",29,[[["lioopcode",4]],["ordering",4]]],[11,"cmp","","",30,[[["liomode",4]],["ordering",4]]],[11,"cmp","nix::sys::epoll","",35,[[["epollflags",3]],["ordering",4]]],[11,"cmp","","",37,[[["epollcreateflags",3]],["ordering",4]]],[11,"cmp","nix::sys::eventfd","",39,[[["efdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::memfd","",40,[[["memfdcreateflag",3]],["ordering",4]]],[11,"cmp","nix::sys::mman","",41,[[["protflags",3]],["ordering",4]]],[11,"cmp","","",42,[[["mapflags",3]],["ordering",4]]],[11,"cmp","","",43,[[["mmapadvise",4]],["ordering",4]]],[11,"cmp","","",44,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",45,[[["mlockallflags",3]],["ordering",4]]],[11,"cmp","nix::sys::ptrace","",46,[[["request",4]],["ordering",4]]],[11,"cmp","","",47,[[["event",4]],["ordering",4]]],[11,"cmp","","",159,[[["options",3]],["ordering",4]]],[11,"cmp","nix::sys::quota","",48,[[["quotatype",4]],["ordering",4]]],[11,"cmp","","",49,[[["quotafmt",4]],["ordering",4]]],[11,"cmp","","",50,[[["quotavalidflags",3]],["ordering",4]]],[11,"cmp","nix::sys::reboot","",52,[[["rebootmode",4]],["ordering",4]]],[11,"cmp","nix::sys::signal","",54,[[["signal",4]],["ordering",4]]],[11,"cmp","","",55,[[["saflags",3]],["ordering",4]]],[11,"cmp","","",56,[[["sigmaskhow",4]],["ordering",4]]],[11,"cmp","nix::sys::signalfd","",64,[[["sfdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::socket","",86,[[["sockflag",3]],["ordering",4]]],[11,"cmp","","",87,[[["msgflags",3]],["ordering",4]]],[11,"cmp","nix::sys::stat","",101,[[["sflag",3]],["ordering",4]]],[11,"cmp","","",102,[[["mode",3]],["ordering",4]]],[11,"cmp","nix::sys::statvfs","",107,[[["fsflags",3]],["ordering",4]]],[11,"cmp","nix::sys::termios","",111,[[["baudrate",4]],["ordering",4]]],[11,"cmp","","",112,[[["setarg",4]],["ordering",4]]],[11,"cmp","","",113,[[["flusharg",4]],["ordering",4]]],[11,"cmp","","",114,[[["flowarg",4]],["ordering",4]]],[11,"cmp","","",115,[[["specialcharacterindices",4]],["ordering",4]]],[11,"cmp","","",116,[[["inputflags",3]],["ordering",4]]],[11,"cmp","","",117,[[["outputflags",3]],["ordering",4]]],[11,"cmp","","",118,[[["controlflags",3]],["ordering",4]]],[11,"cmp","","",119,[[["localflags",3]],["ordering",4]]],[11,"cmp","nix::sys::time","",121,[[["timespec",3]],["ordering",4]]],[11,"cmp","","",122,[[["timeval",3]],["ordering",4]]],[11,"cmp","nix::sys::wait","",126,[[["waitpidflag",3]],["ordering",4]]],[11,"cmp","nix::sys::inotify","",128,[[["addwatchflags",3]],["ordering",4]]],[11,"cmp","","",129,[[["initflags",3]],["ordering",4]]],[11,"cmp","","",201,[[["watchdescriptor",3]],["ordering",4]]],[11,"cmp","nix::sys::timerfd","",132,[[["clockid",4]],["ordering",4]]],[11,"cmp","","",133,[[["timerflags",3]],["ordering",4]]],[11,"cmp","","",134,[[["timersettimeflags",3]],["ordering",4]]],[11,"cmp","nix::unistd","",140,[[["pid",3]],["ordering",4]]],[11,"cmp","","",149,[[["accessflags",3]],["ordering",4]]],[11,"eq","nix::dir","",0,[[["dir",3]]]],[11,"ne","","",0,[[["dir",3]]]],[11,"eq","","",154,[[["iter",3]]]],[11,"ne","","",154,[[["iter",3]]]],[11,"eq","","",2,[[["entry",3]]]],[11,"ne","","",2,[[["entry",3]]]],[11,"eq","","",1,[[["type",4]]]],[11,"eq","nix::errno","",3,[[["errno",4]]]],[11,"eq","nix::fcntl","",6,[[["atflags",3]]]],[11,"ne","","",6,[[["atflags",3]]]],[11,"eq","","",7,[[["oflag",3]]]],[11,"ne","","",7,[[["oflag",3]]]],[11,"eq","","",8,[[["sealflag",3]]]],[11,"ne","","",8,[[["sealflag",3]]]],[11,"eq","","",9,[[["fdflag",3]]]],[11,"ne","","",9,[[["fdflag",3]]]],[11,"eq","","",10,[[["fcntlarg",4]]]],[11,"ne","","",10,[[["fcntlarg",4]]]],[11,"eq","","",11,[[["flockarg",4]]]],[11,"eq","","",12,[[["splicefflags",3]]]],[11,"ne","","",12,[[["splicefflags",3]]]],[11,"eq","","",13,[[["fallocateflags",3]]]],[11,"ne","","",13,[[["fallocateflags",3]]]],[11,"eq","","",5,[[["posixfadviseadvice",4]]]],[11,"eq","nix::ifaddrs","",14,[[["interfaceaddress",3]]]],[11,"ne","","",14,[[["interfaceaddress",3]]]],[11,"eq","","",155,[[["interfaceaddressiterator",3]]]],[11,"ne","","",155,[[["interfaceaddressiterator",3]]]],[11,"eq","nix::kmod","",15,[[["moduleinitflags",3]]]],[11,"ne","","",15,[[["moduleinitflags",3]]]],[11,"eq","","",16,[[["deletemoduleflags",3]]]],[11,"ne","","",16,[[["deletemoduleflags",3]]]],[11,"eq","nix::mount","",17,[[["msflags",3]]]],[11,"ne","","",17,[[["msflags",3]]]],[11,"eq","","",18,[[["mntflags",3]]]],[11,"ne","","",18,[[["mntflags",3]]]],[11,"eq","nix::mqueue","",19,[[["mq_oflag",3]]]],[11,"ne","","",19,[[["mq_oflag",3]]]],[11,"eq","","",20,[[["fdflag",3]]]],[11,"ne","","",20,[[["fdflag",3]]]],[11,"eq","","",21,[[["mqattr",3]]]],[11,"ne","","",21,[[["mqattr",3]]]],[11,"eq","nix::net::if_","",22,[[["interfaceflags",3]]]],[11,"ne","","",22,[[["interfaceflags",3]]]],[11,"eq","nix::poll","",23,[[["pollfd",3]]]],[11,"ne","","",23,[[["pollfd",3]]]],[11,"eq","","",24,[[["pollflags",3]]]],[11,"ne","","",24,[[["pollflags",3]]]],[11,"eq","nix::pty","",26,[[["openptyresult",3]]]],[11,"ne","","",26,[[["openptyresult",3]]]],[11,"eq","","",156,[[["ptymaster",3]]]],[11,"ne","","",156,[[["ptymaster",3]]]],[11,"eq","nix::sched","",157,[[["cloneflags",3]]]],[11,"ne","","",157,[[["cloneflags",3]]]],[11,"eq","","",158,[[["cpuset",3]]]],[11,"ne","","",158,[[["cpuset",3]]]],[11,"eq","nix::sys::aio","",28,[[["aiofsyncmode",4]]]],[11,"eq","","",29,[[["lioopcode",4]]]],[11,"eq","","",30,[[["liomode",4]]]],[11,"eq","","",31,[[["aiocancelstat",4]]]],[11,"eq","nix::sys::epoll","",35,[[["epollflags",3]]]],[11,"ne","","",35,[[["epollflags",3]]]],[11,"eq","","",36,[[["epollop",4]]]],[11,"eq","","",37,[[["epollcreateflags",3]]]],[11,"ne","","",37,[[["epollcreateflags",3]]]],[11,"eq","","",38,[[["epollevent",3]]]],[11,"ne","","",38,[[["epollevent",3]]]],[11,"eq","nix::sys::eventfd","",39,[[["efdflags",3]]]],[11,"ne","","",39,[[["efdflags",3]]]],[11,"eq","nix::sys::memfd","",40,[[["memfdcreateflag",3]]]],[11,"ne","","",40,[[["memfdcreateflag",3]]]],[11,"eq","nix::sys::mman","",41,[[["protflags",3]]]],[11,"ne","","",41,[[["protflags",3]]]],[11,"eq","","",42,[[["mapflags",3]]]],[11,"ne","","",42,[[["mapflags",3]]]],[11,"eq","","",43,[[["mmapadvise",4]]]],[11,"eq","","",44,[[["msflags",3]]]],[11,"ne","","",44,[[["msflags",3]]]],[11,"eq","","",45,[[["mlockallflags",3]]]],[11,"ne","","",45,[[["mlockallflags",3]]]],[11,"eq","nix::sys::ptrace","",46,[[["request",4]]]],[11,"eq","","",47,[[["event",4]]]],[11,"eq","","",159,[[["options",3]]]],[11,"ne","","",159,[[["options",3]]]],[11,"eq","nix::sys::quota","",48,[[["quotatype",4]]]],[11,"eq","","",49,[[["quotafmt",4]]]],[11,"eq","","",50,[[["quotavalidflags",3]]]],[11,"ne","","",50,[[["quotavalidflags",3]]]],[11,"eq","","",51,[[["dqblk",3]]]],[11,"ne","","",51,[[["dqblk",3]]]],[11,"eq","nix::sys::reboot","",52,[[["rebootmode",4]]]],[11,"eq","nix::sys::select","",53,[[["fdset",3]]]],[11,"ne","","",53,[[["fdset",3]]]],[11,"eq","nix::sys::signal","",54,[[["signal",4]]]],[11,"eq","","",162,[[["signaliterator",3]]]],[11,"ne","","",162,[[["signaliterator",3]]]],[11,"eq","","",55,[[["saflags",3]]]],[11,"ne","","",55,[[["saflags",3]]]],[11,"eq","","",56,[[["sigmaskhow",4]]]],[11,"eq","","",57,[[["sigset",3]]]],[11,"ne","","",57,[[["sigset",3]]]],[11,"eq","","",58,[[["sighandler",4]]]],[11,"ne","","",58,[[["sighandler",4]]]],[11,"eq","","",59,[[["sigaction",3]]]],[11,"ne","","",59,[[["sigaction",3]]]],[11,"eq","","",60,[[["sigevnotify",4]]]],[11,"ne","","",60,[[["sigevnotify",4]]]],[11,"eq","","",161,[[["sigevent",3]]]],[11,"ne","","",161,[[["sigevent",3]]]],[11,"eq","nix::sys::signalfd","",64,[[["sfdflags",3]]]],[11,"ne","","",64,[[["sfdflags",3]]]],[11,"eq","","",65,[[["signalfd",3]]]],[11,"ne","","",65,[[["signalfd",3]]]],[11,"eq","nix::sys::socket","",73,[[["addressfamily",4]]]],[11,"eq","","",75,[[["inetaddr",4]]]],[11,"ne","","",75,[[["inetaddr",4]]]],[11,"eq","","",77,[[["ipaddr",4]]]],[11,"ne","","",77,[[["ipaddr",4]]]],[11,"eq","","",78,[[["ipv4addr",3]]]],[11,"ne","","",78,[[["ipv4addr",3]]]],[11,"eq","","",79,[[["ipv6addr",3]]]],[11,"ne","","",79,[[["ipv6addr",3]]]],[11,"eq","","",76,[[["unixaddr",3]]]],[11,"eq","","",74,[[["sockaddr",4]]]],[11,"ne","","",74,[[["sockaddr",4]]]],[11,"eq","","",81,[[["netlinkaddr",3]]]],[11,"ne","","",81,[[["netlinkaddr",3]]]],[11,"eq","","",82,[[]]],[11,"eq","","",80,[[["linkaddr",3]]]],[11,"ne","","",80,[[["linkaddr",3]]]],[11,"eq","","",83,[[]]],[11,"eq","nix::sys::socket::sockopt","",163,[[["reuseaddr",3]]]],[11,"eq","","",164,[[["reuseport",3]]]],[11,"eq","","",165,[[["tcpnodelay",3]]]],[11,"eq","","",166,[[["linger",3]]]],[11,"eq","","",167,[[["ipaddmembership",3]]]],[11,"eq","","",168,[[["ipdropmembership",3]]]],[11,"eq","","",169,[[["ipv6addmembership",3]]]],[11,"eq","","",170,[[["ipv6dropmembership",3]]]],[11,"eq","","",171,[[["ipmulticastttl",3]]]],[11,"eq","","",172,[[["ipmulticastloop",3]]]],[11,"eq","","",173,[[["receivetimeout",3]]]],[11,"eq","","",174,[[["sendtimeout",3]]]],[11,"eq","","",175,[[["broadcast",3]]]],[11,"eq","","",176,[[["oobinline",3]]]],[11,"eq","","",177,[[["socketerror",3]]]],[11,"eq","","",178,[[["keepalive",3]]]],[11,"eq","","",179,[[["peercredentials",3]]]],[11,"eq","","",180,[[["tcpkeepidle",3]]]],[11,"eq","","",181,[[["rcvbuf",3]]]],[11,"eq","","",182,[[["sndbuf",3]]]],[11,"eq","","",183,[[["rcvbufforce",3]]]],[11,"eq","","",184,[[["sndbufforce",3]]]],[11,"eq","","",185,[[["socktype",3]]]],[11,"eq","","",186,[[["acceptconn",3]]]],[11,"eq","","",187,[[["bindtodevice",3]]]],[11,"eq","","",188,[[["originaldst",3]]]],[11,"eq","","",189,[[["receivetimestamp",3]]]],[11,"eq","","",190,[[["iptransparent",3]]]],[11,"eq","","",191,[[["mark",3]]]],[11,"eq","","",192,[[["passcred",3]]]],[11,"eq","","",193,[[["tcpcongestion",3]]]],[11,"eq","","",194,[[["ipv4packetinfo",3]]]],[11,"eq","","",195,[[["ipv6recvpacketinfo",3]]]],[11,"eq","","",196,[[["udpgsosegment",3]]]],[11,"eq","","",197,[[["udpgrosegment",3]]]],[11,"eq","nix::sys::socket","",84,[[["socktype",4]]]],[11,"eq","","",85,[[["sockprotocol",4]]]],[11,"eq","","",86,[[["sockflag",3]]]],[11,"ne","","",86,[[["sockflag",3]]]],[11,"eq","","",87,[[["msgflags",3]]]],[11,"ne","","",87,[[["msgflags",3]]]],[11,"eq","","",88,[[["unixcredentials",3]]]],[11,"ne","","",88,[[["unixcredentials",3]]]],[11,"eq","","",89,[[["ipmembershiprequest",3]]]],[11,"ne","","",89,[[["ipmembershiprequest",3]]]],[11,"eq","","",90,[[["ipv6membershiprequest",3]]]],[11,"ne","","",90,[[["ipv6membershiprequest",3]]]],[11,"eq","","",91,[[["recvmsg",3]]]],[11,"ne","","",91,[[["recvmsg",3]]]],[11,"eq","","",200,[[["cmsgiterator",3]]]],[11,"ne","","",200,[[["cmsgiterator",3]]]],[11,"eq","","",92,[[["controlmessageowned",4]]]],[11,"ne","","",92,[[["controlmessageowned",4]]]],[11,"eq","","",93,[[["controlmessage",4]]]],[11,"ne","","",93,[[["controlmessage",4]]]],[11,"eq","","",96,[[["socklevel",4]]]],[11,"eq","","",99,[[["shutdown",4]]]],[11,"eq","nix::sys::stat","",101,[[["sflag",3]]]],[11,"ne","","",101,[[["sflag",3]]]],[11,"eq","","",102,[[["mode",3]]]],[11,"ne","","",102,[[["mode",3]]]],[11,"eq","nix::sys::statfs","",105,[[["fstype",3]]]],[11,"ne","","",105,[[["fstype",3]]]],[11,"eq","nix::sys::statvfs","",107,[[["fsflags",3]]]],[11,"ne","","",107,[[["fsflags",3]]]],[11,"eq","","",108,[[["statvfs",3]]]],[11,"ne","","",108,[[["statvfs",3]]]],[11,"eq","nix::sys::sysinfo","",109,[[["sysinfo",3]]]],[11,"ne","","",109,[[["sysinfo",3]]]],[11,"eq","nix::sys::termios","",110,[[["termios",3]]]],[11,"ne","","",110,[[["termios",3]]]],[11,"eq","","",111,[[["baudrate",4]]]],[11,"eq","","",112,[[["setarg",4]]]],[11,"eq","","",113,[[["flusharg",4]]]],[11,"eq","","",114,[[["flowarg",4]]]],[11,"eq","","",115,[[["specialcharacterindices",4]]]],[11,"eq","","",116,[[["inputflags",3]]]],[11,"ne","","",116,[[["inputflags",3]]]],[11,"eq","","",117,[[["outputflags",3]]]],[11,"ne","","",117,[[["outputflags",3]]]],[11,"eq","","",118,[[["controlflags",3]]]],[11,"ne","","",118,[[["controlflags",3]]]],[11,"eq","","",119,[[["localflags",3]]]],[11,"ne","","",119,[[["localflags",3]]]],[11,"eq","nix::sys::time","",121,[[["timespec",3]]]],[11,"ne","","",121,[[["timespec",3]]]],[11,"eq","","",122,[[["timeval",3]]]],[11,"ne","","",122,[[["timeval",3]]]],[11,"eq","nix::sys::uio","",123,[[["remoteiovec",3]]]],[11,"ne","","",123,[[["remoteiovec",3]]]],[11,"eq","","",124,[[["iovec",3]]]],[11,"ne","","",124,[[["iovec",3]]]],[11,"eq","nix::sys::utsname","",125,[[["utsname",3]]]],[11,"ne","","",125,[[["utsname",3]]]],[11,"eq","nix::sys::wait","",126,[[["waitpidflag",3]]]],[11,"ne","","",126,[[["waitpidflag",3]]]],[11,"eq","","",127,[[["waitstatus",4]]]],[11,"ne","","",127,[[["waitstatus",4]]]],[11,"eq","nix::sys::inotify","",128,[[["addwatchflags",3]]]],[11,"ne","","",128,[[["addwatchflags",3]]]],[11,"eq","","",129,[[["initflags",3]]]],[11,"ne","","",129,[[["initflags",3]]]],[11,"eq","","",201,[[["watchdescriptor",3]]]],[11,"ne","","",201,[[["watchdescriptor",3]]]],[11,"eq","nix::sys::timerfd","",132,[[["clockid",4]]]],[11,"eq","","",133,[[["timerflags",3]]]],[11,"ne","","",133,[[["timerflags",3]]]],[11,"eq","","",134,[[["timersettimeflags",3]]]],[11,"ne","","",134,[[["timersettimeflags",3]]]],[11,"eq","","",135,[[["expiration",4]]]],[11,"ne","","",135,[[["expiration",4]]]],[11,"eq","nix::ucontext","",137,[[["ucontext",3]]]],[11,"ne","","",137,[[["ucontext",3]]]],[11,"eq","nix::unistd","",138,[[["uid",3]]]],[11,"ne","","",138,[[["uid",3]]]],[11,"eq","","",139,[[["gid",3]]]],[11,"ne","","",139,[[["gid",3]]]],[11,"eq","","",140,[[["pid",3]]]],[11,"ne","","",140,[[["pid",3]]]],[11,"eq","","",147,[[["pathconfvar",4]]]],[11,"eq","","",148,[[["sysconfvar",4]]]],[11,"eq","","",149,[[["accessflags",3]]]],[11,"ne","","",149,[[["accessflags",3]]]],[11,"eq","","",150,[[["user",3]]]],[11,"ne","","",150,[[["user",3]]]],[11,"eq","","",151,[[["group",3]]]],[11,"ne","","",151,[[["group",3]]]],[11,"eq","nix","",152,[[["error",4]]]],[11,"ne","","",152,[[["error",4]]]],[11,"partial_cmp","nix::fcntl","",6,[[["atflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["atflags",3]]]],[11,"le","","",6,[[["atflags",3]]]],[11,"gt","","",6,[[["atflags",3]]]],[11,"ge","","",6,[[["atflags",3]]]],[11,"partial_cmp","","",7,[[["oflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["oflag",3]]]],[11,"le","","",7,[[["oflag",3]]]],[11,"gt","","",7,[[["oflag",3]]]],[11,"ge","","",7,[[["oflag",3]]]],[11,"partial_cmp","","",8,[[["sealflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["sealflag",3]]]],[11,"le","","",8,[[["sealflag",3]]]],[11,"gt","","",8,[[["sealflag",3]]]],[11,"ge","","",8,[[["sealflag",3]]]],[11,"partial_cmp","","",9,[[["fdflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["fdflag",3]]]],[11,"le","","",9,[[["fdflag",3]]]],[11,"gt","","",9,[[["fdflag",3]]]],[11,"ge","","",9,[[["fdflag",3]]]],[11,"partial_cmp","","",12,[[["splicefflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["splicefflags",3]]]],[11,"le","","",12,[[["splicefflags",3]]]],[11,"gt","","",12,[[["splicefflags",3]]]],[11,"ge","","",12,[[["splicefflags",3]]]],[11,"partial_cmp","","",13,[[["fallocateflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["fallocateflags",3]]]],[11,"le","","",13,[[["fallocateflags",3]]]],[11,"gt","","",13,[[["fallocateflags",3]]]],[11,"ge","","",13,[[["fallocateflags",3]]]],[11,"partial_cmp","","",5,[[["posixfadviseadvice",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","nix::kmod","",15,[[["moduleinitflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["moduleinitflags",3]]]],[11,"le","","",15,[[["moduleinitflags",3]]]],[11,"gt","","",15,[[["moduleinitflags",3]]]],[11,"ge","","",15,[[["moduleinitflags",3]]]],[11,"partial_cmp","","",16,[[["deletemoduleflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["deletemoduleflags",3]]]],[11,"le","","",16,[[["deletemoduleflags",3]]]],[11,"gt","","",16,[[["deletemoduleflags",3]]]],[11,"ge","","",16,[[["deletemoduleflags",3]]]],[11,"partial_cmp","nix::mount","",17,[[["msflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["msflags",3]]]],[11,"le","","",17,[[["msflags",3]]]],[11,"gt","","",17,[[["msflags",3]]]],[11,"ge","","",17,[[["msflags",3]]]],[11,"partial_cmp","","",18,[[["mntflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["mntflags",3]]]],[11,"le","","",18,[[["mntflags",3]]]],[11,"gt","","",18,[[["mntflags",3]]]],[11,"ge","","",18,[[["mntflags",3]]]],[11,"partial_cmp","nix::mqueue","",19,[[["mq_oflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["mq_oflag",3]]]],[11,"le","","",19,[[["mq_oflag",3]]]],[11,"gt","","",19,[[["mq_oflag",3]]]],[11,"ge","","",19,[[["mq_oflag",3]]]],[11,"partial_cmp","","",20,[[["fdflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["fdflag",3]]]],[11,"le","","",20,[[["fdflag",3]]]],[11,"gt","","",20,[[["fdflag",3]]]],[11,"ge","","",20,[[["fdflag",3]]]],[11,"partial_cmp","nix::net::if_","",22,[[["interfaceflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["interfaceflags",3]]]],[11,"le","","",22,[[["interfaceflags",3]]]],[11,"gt","","",22,[[["interfaceflags",3]]]],[11,"ge","","",22,[[["interfaceflags",3]]]],[11,"partial_cmp","nix::poll","",24,[[["pollflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["pollflags",3]]]],[11,"le","","",24,[[["pollflags",3]]]],[11,"gt","","",24,[[["pollflags",3]]]],[11,"ge","","",24,[[["pollflags",3]]]],[11,"partial_cmp","nix::sched","",157,[[["cloneflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",157,[[["cloneflags",3]]]],[11,"le","","",157,[[["cloneflags",3]]]],[11,"gt","","",157,[[["cloneflags",3]]]],[11,"ge","","",157,[[["cloneflags",3]]]],[11,"partial_cmp","nix::sys::aio","",28,[[["aiofsyncmode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",29,[[["lioopcode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",30,[[["liomode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","nix::sys::epoll","",35,[[["epollflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["epollflags",3]]]],[11,"le","","",35,[[["epollflags",3]]]],[11,"gt","","",35,[[["epollflags",3]]]],[11,"ge","","",35,[[["epollflags",3]]]],[11,"partial_cmp","","",37,[[["epollcreateflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["epollcreateflags",3]]]],[11,"le","","",37,[[["epollcreateflags",3]]]],[11,"gt","","",37,[[["epollcreateflags",3]]]],[11,"ge","","",37,[[["epollcreateflags",3]]]],[11,"partial_cmp","nix::sys::eventfd","",39,[[["efdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["efdflags",3]]]],[11,"le","","",39,[[["efdflags",3]]]],[11,"gt","","",39,[[["efdflags",3]]]],[11,"ge","","",39,[[["efdflags",3]]]],[11,"partial_cmp","nix::sys::memfd","",40,[[["memfdcreateflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["memfdcreateflag",3]]]],[11,"le","","",40,[[["memfdcreateflag",3]]]],[11,"gt","","",40,[[["memfdcreateflag",3]]]],[11,"ge","","",40,[[["memfdcreateflag",3]]]],[11,"partial_cmp","nix::sys::mman","",41,[[["protflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["protflags",3]]]],[11,"le","","",41,[[["protflags",3]]]],[11,"gt","","",41,[[["protflags",3]]]],[11,"ge","","",41,[[["protflags",3]]]],[11,"partial_cmp","","",42,[[["mapflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["mapflags",3]]]],[11,"le","","",42,[[["mapflags",3]]]],[11,"gt","","",42,[[["mapflags",3]]]],[11,"ge","","",42,[[["mapflags",3]]]],[11,"partial_cmp","","",43,[[["mmapadvise",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",44,[[["msflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["msflags",3]]]],[11,"le","","",44,[[["msflags",3]]]],[11,"gt","","",44,[[["msflags",3]]]],[11,"ge","","",44,[[["msflags",3]]]],[11,"partial_cmp","","",45,[[["mlockallflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",45,[[["mlockallflags",3]]]],[11,"le","","",45,[[["mlockallflags",3]]]],[11,"gt","","",45,[[["mlockallflags",3]]]],[11,"ge","","",45,[[["mlockallflags",3]]]],[11,"partial_cmp","nix::sys::ptrace","",46,[[["request",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",47,[[["event",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",159,[[["options",3]],[["ordering",4],["option",4]]]],[11,"lt","","",159,[[["options",3]]]],[11,"le","","",159,[[["options",3]]]],[11,"gt","","",159,[[["options",3]]]],[11,"ge","","",159,[[["options",3]]]],[11,"partial_cmp","nix::sys::quota","",48,[[["quotatype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",49,[[["quotafmt",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",50,[[["quotavalidflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",50,[[["quotavalidflags",3]]]],[11,"le","","",50,[[["quotavalidflags",3]]]],[11,"gt","","",50,[[["quotavalidflags",3]]]],[11,"ge","","",50,[[["quotavalidflags",3]]]],[11,"partial_cmp","nix::sys::reboot","",52,[[["rebootmode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","nix::sys::signal","",54,[[["signal",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",55,[[["saflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",55,[[["saflags",3]]]],[11,"le","","",55,[[["saflags",3]]]],[11,"gt","","",55,[[["saflags",3]]]],[11,"ge","","",55,[[["saflags",3]]]],[11,"partial_cmp","","",56,[[["sigmaskhow",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","nix::sys::signalfd","",64,[[["sfdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",64,[[["sfdflags",3]]]],[11,"le","","",64,[[["sfdflags",3]]]],[11,"gt","","",64,[[["sfdflags",3]]]],[11,"ge","","",64,[[["sfdflags",3]]]],[11,"partial_cmp","nix::sys::socket","",86,[[["sockflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",86,[[["sockflag",3]]]],[11,"le","","",86,[[["sockflag",3]]]],[11,"gt","","",86,[[["sockflag",3]]]],[11,"ge","","",86,[[["sockflag",3]]]],[11,"partial_cmp","","",87,[[["msgflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",87,[[["msgflags",3]]]],[11,"le","","",87,[[["msgflags",3]]]],[11,"gt","","",87,[[["msgflags",3]]]],[11,"ge","","",87,[[["msgflags",3]]]],[11,"partial_cmp","nix::sys::stat","",101,[[["sflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",101,[[["sflag",3]]]],[11,"le","","",101,[[["sflag",3]]]],[11,"gt","","",101,[[["sflag",3]]]],[11,"ge","","",101,[[["sflag",3]]]],[11,"partial_cmp","","",102,[[["mode",3]],[["ordering",4],["option",4]]]],[11,"lt","","",102,[[["mode",3]]]],[11,"le","","",102,[[["mode",3]]]],[11,"gt","","",102,[[["mode",3]]]],[11,"ge","","",102,[[["mode",3]]]],[11,"partial_cmp","nix::sys::statvfs","",107,[[["fsflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",107,[[["fsflags",3]]]],[11,"le","","",107,[[["fsflags",3]]]],[11,"gt","","",107,[[["fsflags",3]]]],[11,"ge","","",107,[[["fsflags",3]]]],[11,"partial_cmp","nix::sys::termios","",111,[[["baudrate",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",112,[[["setarg",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",113,[[["flusharg",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",114,[[["flowarg",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",115,[[["specialcharacterindices",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",116,[[["inputflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",116,[[["inputflags",3]]]],[11,"le","","",116,[[["inputflags",3]]]],[11,"gt","","",116,[[["inputflags",3]]]],[11,"ge","","",116,[[["inputflags",3]]]],[11,"partial_cmp","","",117,[[["outputflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",117,[[["outputflags",3]]]],[11,"le","","",117,[[["outputflags",3]]]],[11,"gt","","",117,[[["outputflags",3]]]],[11,"ge","","",117,[[["outputflags",3]]]],[11,"partial_cmp","","",118,[[["controlflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",118,[[["controlflags",3]]]],[11,"le","","",118,[[["controlflags",3]]]],[11,"gt","","",118,[[["controlflags",3]]]],[11,"ge","","",118,[[["controlflags",3]]]],[11,"partial_cmp","","",119,[[["localflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",119,[[["localflags",3]]]],[11,"le","","",119,[[["localflags",3]]]],[11,"gt","","",119,[[["localflags",3]]]],[11,"ge","","",119,[[["localflags",3]]]],[11,"partial_cmp","nix::sys::time","",121,[[["timespec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",122,[[["timeval",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::wait","",126,[[["waitpidflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",126,[[["waitpidflag",3]]]],[11,"le","","",126,[[["waitpidflag",3]]]],[11,"gt","","",126,[[["waitpidflag",3]]]],[11,"ge","","",126,[[["waitpidflag",3]]]],[11,"partial_cmp","nix::sys::inotify","",128,[[["addwatchflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",128,[[["addwatchflags",3]]]],[11,"le","","",128,[[["addwatchflags",3]]]],[11,"gt","","",128,[[["addwatchflags",3]]]],[11,"ge","","",128,[[["addwatchflags",3]]]],[11,"partial_cmp","","",129,[[["initflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",129,[[["initflags",3]]]],[11,"le","","",129,[[["initflags",3]]]],[11,"gt","","",129,[[["initflags",3]]]],[11,"ge","","",129,[[["initflags",3]]]],[11,"partial_cmp","","",201,[[["watchdescriptor",3]],[["ordering",4],["option",4]]]],[11,"lt","","",201,[[["watchdescriptor",3]]]],[11,"le","","",201,[[["watchdescriptor",3]]]],[11,"gt","","",201,[[["watchdescriptor",3]]]],[11,"ge","","",201,[[["watchdescriptor",3]]]],[11,"partial_cmp","nix::sys::timerfd","",132,[[["clockid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",133,[[["timerflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",133,[[["timerflags",3]]]],[11,"le","","",133,[[["timerflags",3]]]],[11,"gt","","",133,[[["timerflags",3]]]],[11,"ge","","",133,[[["timerflags",3]]]],[11,"partial_cmp","","",134,[[["timersettimeflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",134,[[["timersettimeflags",3]]]],[11,"le","","",134,[[["timersettimeflags",3]]]],[11,"gt","","",134,[[["timersettimeflags",3]]]],[11,"ge","","",134,[[["timersettimeflags",3]]]],[11,"partial_cmp","nix::unistd","",140,[[["pid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",140,[[["pid",3]]]],[11,"le","","",140,[[["pid",3]]]],[11,"gt","","",140,[[["pid",3]]]],[11,"ge","","",140,[[["pid",3]]]],[11,"partial_cmp","","",149,[[["accessflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",149,[[["accessflags",3]]]],[11,"le","","",149,[[["accessflags",3]]]],[11,"gt","","",149,[[["accessflags",3]]]],[11,"ge","","",149,[[["accessflags",3]]]],[11,"fmt","nix::dir","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ifaddrs","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::pty","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::aio","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::reboot","",52,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::select","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket::sockopt","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statfs","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::sysinfo","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::uio","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::utsname","",125,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ucontext","",137,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",152,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",152,[[["formatter",3]],["result",6]]],[11,"div","nix::sys::time","",121,[[],["timespec",3]]],[11,"div","","",122,[[],["timeval",3]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"sub","nix::kmod","Returns the set difference of the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"sub","nix::mount","Returns the set difference of the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"sub","nix::mqueue","Returns the set difference of the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"sub","nix::sched","Returns the set difference of the two sets of flags.",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"sub","nix::sys::epoll","Returns the set difference of the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"sub","nix::sys::eventfd","Returns the set difference of the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"sub","nix::sys::memfd","Returns the set difference of the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",44,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"sub","nix::sys::ptrace","Returns the set difference of the two sets of flags.",159,[[["options",3]],["options",3]]],[11,"sub","nix::sys::quota","Returns the set difference of the two sets of flags.",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",55,[[["saflags",3]],["saflags",3]]],[11,"sub","nix::sys::signalfd","Returns the set difference of the two sets of flags.",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",86,[[["sockflag",3]],["sockflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",87,[[["msgflags",3]],["msgflags",3]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",101,[[["sflag",3]],["sflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",102,[[["mode",3]],["mode",3]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",107,[[["fsflags",3]],["fsflags",3]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",116,[[["inputflags",3]],["inputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["outputflags",3]],["outputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["controlflags",3]],["controlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",119,[[["localflags",3]],["localflags",3]]],[11,"sub","nix::sys::time","",121,[[["timespec",3]],["timespec",3]]],[11,"sub","","",122,[[["timeval",3]],["timeval",3]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"sub","nix::sys::inotify","Returns the set difference of the two sets of flags.",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",129,[[["initflags",3]],["initflags",3]]],[11,"sub","nix::sys::timerfd","Returns the set difference of the two sets of flags.",133,[[["timerflags",3]],["timerflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"sub","nix::unistd","Returns the set difference of the two sets of flags.",149,[[["accessflags",3]],["accessflags",3]]],[11,"add","nix::sys::time","",121,[[["timespec",3]],["timespec",3]]],[11,"add","","",122,[[["timeval",3]],["timeval",3]]],[11,"mul","","",121,[[],["timespec",3]]],[11,"mul","","",122,[[],["timeval",3]]],[11,"neg","","",121,[[],["timespec",3]]],[11,"neg","","",122,[[],["timeval",3]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",6,[[["atflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["sealflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["fdflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["splicefflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["fallocateflags",3]]]],[11,"sub_assign","nix::kmod","Disables all flags enabled in the set.",15,[[["moduleinitflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["deletemoduleflags",3]]]],[11,"sub_assign","nix::mount","Disables all flags enabled in the set.",17,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["mntflags",3]]]],[11,"sub_assign","nix::mqueue","Disables all flags enabled in the set.",19,[[["mq_oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["fdflag",3]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",22,[[["interfaceflags",3]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",24,[[["pollflags",3]]]],[11,"sub_assign","nix::sched","Disables all flags enabled in the set.",157,[[["cloneflags",3]]]],[11,"sub_assign","nix::sys::epoll","Disables all flags enabled in the set.",35,[[["epollflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["epollcreateflags",3]]]],[11,"sub_assign","nix::sys::eventfd","Disables all flags enabled in the set.",39,[[["efdflags",3]]]],[11,"sub_assign","nix::sys::memfd","Disables all flags enabled in the set.",40,[[["memfdcreateflag",3]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",41,[[["protflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["mapflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",44,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",45,[[["mlockallflags",3]]]],[11,"sub_assign","nix::sys::ptrace","Disables all flags enabled in the set.",159,[[["options",3]]]],[11,"sub_assign","nix::sys::quota","Disables all flags enabled in the set.",50,[[["quotavalidflags",3]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",55,[[["saflags",3]]]],[11,"sub_assign","nix::sys::signalfd","Disables all flags enabled in the set.",64,[[["sfdflags",3]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",86,[[["sockflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",87,[[["msgflags",3]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",101,[[["sflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",102,[[["mode",3]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",107,[[["fsflags",3]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",116,[[["inputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["outputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["controlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",119,[[["localflags",3]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",126,[[["waitpidflag",3]]]],[11,"sub_assign","nix::sys::inotify","Disables all flags enabled in the set.",128,[[["addwatchflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",129,[[["initflags",3]]]],[11,"sub_assign","nix::sys::timerfd","Disables all flags enabled in the set.",133,[[["timerflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",134,[[["timersettimeflags",3]]]],[11,"sub_assign","nix::unistd","Disables all flags enabled in the set.",149,[[["accessflags",3]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",6,[[],["atflags",3]]],[11,"not","","Returns the complement of this set of flags.",7,[[],["oflag",3]]],[11,"not","","Returns the complement of this set of flags.",8,[[],["sealflag",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["fdflag",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["splicefflags",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["fallocateflags",3]]],[11,"not","nix::kmod","Returns the complement of this set of flags.",15,[[],["moduleinitflags",3]]],[11,"not","","Returns the complement of this set of flags.",16,[[],["deletemoduleflags",3]]],[11,"not","nix::mount","Returns the complement of this set of flags.",17,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["mntflags",3]]],[11,"not","nix::mqueue","Returns the complement of this set of flags.",19,[[],["mq_oflag",3]]],[11,"not","","Returns the complement of this set of flags.",20,[[],["fdflag",3]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",22,[[],["interfaceflags",3]]],[11,"not","nix::poll","Returns the complement of this set of flags.",24,[[],["pollflags",3]]],[11,"not","nix::sched","Returns the complement of this set of flags.",157,[[],["cloneflags",3]]],[11,"not","nix::sys::epoll","Returns the complement of this set of flags.",35,[[],["epollflags",3]]],[11,"not","","Returns the complement of this set of flags.",37,[[],["epollcreateflags",3]]],[11,"not","nix::sys::eventfd","Returns the complement of this set of flags.",39,[[],["efdflags",3]]],[11,"not","nix::sys::memfd","Returns the complement of this set of flags.",40,[[],["memfdcreateflag",3]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",41,[[],["protflags",3]]],[11,"not","","Returns the complement of this set of flags.",42,[[],["mapflags",3]]],[11,"not","","Returns the complement of this set of flags.",44,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",45,[[],["mlockallflags",3]]],[11,"not","nix::sys::ptrace","Returns the complement of this set of flags.",159,[[],["options",3]]],[11,"not","nix::sys::quota","Returns the complement of this set of flags.",50,[[],["quotavalidflags",3]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",55,[[],["saflags",3]]],[11,"not","nix::sys::signalfd","Returns the complement of this set of flags.",64,[[],["sfdflags",3]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",86,[[],["sockflag",3]]],[11,"not","","Returns the complement of this set of flags.",87,[[],["msgflags",3]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",101,[[],["sflag",3]]],[11,"not","","Returns the complement of this set of flags.",102,[[],["mode",3]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",107,[[],["fsflags",3]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",116,[[],["inputflags",3]]],[11,"not","","Returns the complement of this set of flags.",117,[[],["outputflags",3]]],[11,"not","","Returns the complement of this set of flags.",118,[[],["controlflags",3]]],[11,"not","","Returns the complement of this set of flags.",119,[[],["localflags",3]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",126,[[],["waitpidflag",3]]],[11,"not","nix::sys::inotify","Returns the complement of this set of flags.",128,[[],["addwatchflags",3]]],[11,"not","","Returns the complement of this set of flags.",129,[[],["initflags",3]]],[11,"not","nix::sys::timerfd","Returns the complement of this set of flags.",133,[[],["timerflags",3]]],[11,"not","","Returns the complement of this set of flags.",134,[[],["timersettimeflags",3]]],[11,"not","nix::unistd","Returns the complement of this set of flags.",149,[[],["accessflags",3]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitand","nix::kmod","Returns the intersection between the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitand","nix::mount","Returns the intersection between the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitand","nix::mqueue","Returns the intersection between the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitand","nix::sched","Returns the intersection between the two sets of flags.",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitand","nix::sys::epoll","Returns the intersection between the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitand","nix::sys::eventfd","Returns the intersection between the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitand","nix::sys::memfd","Returns the intersection between the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",44,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitand","nix::sys::ptrace","Returns the intersection between the two sets of flags.",159,[[["options",3]],["options",3]]],[11,"bitand","nix::sys::quota","Returns the intersection between the two sets of flags.",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",55,[[["saflags",3]],["saflags",3]]],[11,"bitand","nix::sys::signalfd","Returns the intersection between the two sets of flags.",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",86,[[["sockflag",3]],["sockflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",87,[[["msgflags",3]],["msgflags",3]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",101,[[["sflag",3]],["sflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",102,[[["mode",3]],["mode",3]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",107,[[["fsflags",3]],["fsflags",3]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",116,[[["inputflags",3]],["inputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["outputflags",3]],["outputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["controlflags",3]],["controlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",119,[[["localflags",3]],["localflags",3]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitand","nix::sys::inotify","Returns the intersection between the two sets of flags.",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",129,[[["initflags",3]],["initflags",3]]],[11,"bitand","nix::sys::timerfd","Returns the intersection between the two sets of flags.",133,[[["timerflags",3]],["timerflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitand","nix::unistd","Returns the intersection between the two sets of flags.",149,[[["accessflags",3]],["accessflags",3]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitor","nix::kmod","Returns the union of the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitor","nix::mount","Returns the union of the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitor","nix::mqueue","Returns the union of the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitor","nix::sched","Returns the union of the two sets of flags.",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitor","nix::sys::epoll","Returns the union of the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitor","nix::sys::eventfd","Returns the union of the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitor","nix::sys::memfd","Returns the union of the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",44,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitor","nix::sys::ptrace","Returns the union of the two sets of flags.",159,[[["options",3]],["options",3]]],[11,"bitor","nix::sys::quota","Returns the union of the two sets of flags.",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",55,[[["saflags",3]],["saflags",3]]],[11,"bitor","nix::sys::signalfd","Returns the union of the two sets of flags.",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",86,[[["sockflag",3]],["sockflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",87,[[["msgflags",3]],["msgflags",3]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",101,[[["sflag",3]],["sflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",102,[[["mode",3]],["mode",3]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",107,[[["fsflags",3]],["fsflags",3]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",116,[[["inputflags",3]],["inputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["outputflags",3]],["outputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["controlflags",3]],["controlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",119,[[["localflags",3]],["localflags",3]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitor","nix::sys::inotify","Returns the union of the two sets of flags.",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",129,[[["initflags",3]],["initflags",3]]],[11,"bitor","nix::sys::timerfd","Returns the union of the two sets of flags.",133,[[["timerflags",3]],["timerflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitor","nix::unistd","Returns the union of the two sets of flags.",149,[[["accessflags",3]],["accessflags",3]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags…",6,[[["atflags",3]],["atflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",7,[[["oflag",3]],["oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitxor","nix::kmod","Returns the left flags, but with all the right flags…",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitxor","nix::mount","Returns the left flags, but with all the right flags…",17,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitxor","nix::mqueue","Returns the left flags, but with all the right flags…",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags…",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags…",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitxor","nix::sched","Returns the left flags, but with all the right flags…",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitxor","nix::sys::epoll","Returns the left flags, but with all the right flags…",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitxor","nix::sys::eventfd","Returns the left flags, but with all the right flags…",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitxor","nix::sys::memfd","Returns the left flags, but with all the right flags…",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags…",41,[[["protflags",3]],["protflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",44,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitxor","nix::sys::ptrace","Returns the left flags, but with all the right flags…",159,[[["options",3]],["options",3]]],[11,"bitxor","nix::sys::quota","Returns the left flags, but with all the right flags…",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags…",55,[[["saflags",3]],["saflags",3]]],[11,"bitxor","nix::sys::signalfd","Returns the left flags, but with all the right flags…",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags…",86,[[["sockflag",3]],["sockflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",87,[[["msgflags",3]],["msgflags",3]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags…",101,[[["sflag",3]],["sflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",102,[[["mode",3]],["mode",3]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags…",107,[[["fsflags",3]],["fsflags",3]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags…",116,[[["inputflags",3]],["inputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",117,[[["outputflags",3]],["outputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",118,[[["controlflags",3]],["controlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",119,[[["localflags",3]],["localflags",3]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags…",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitxor","nix::sys::inotify","Returns the left flags, but with all the right flags…",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",129,[[["initflags",3]],["initflags",3]]],[11,"bitxor","nix::sys::timerfd","Returns the left flags, but with all the right flags…",133,[[["timerflags",3]],["timerflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitxor","nix::unistd","Returns the left flags, but with all the right flags…",149,[[["accessflags",3]],["accessflags",3]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",6,[[["atflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["sealflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["fdflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["splicefflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["fallocateflags",3]]]],[11,"bitand_assign","nix::kmod","Disables all flags disabled in the set.",15,[[["moduleinitflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["deletemoduleflags",3]]]],[11,"bitand_assign","nix::mount","Disables all flags disabled in the set.",17,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["mntflags",3]]]],[11,"bitand_assign","nix::mqueue","Disables all flags disabled in the set.",19,[[["mq_oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["fdflag",3]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",22,[[["interfaceflags",3]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",24,[[["pollflags",3]]]],[11,"bitand_assign","nix::sched","Disables all flags disabled in the set.",157,[[["cloneflags",3]]]],[11,"bitand_assign","nix::sys::epoll","Disables all flags disabled in the set.",35,[[["epollflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["epollcreateflags",3]]]],[11,"bitand_assign","nix::sys::eventfd","Disables all flags disabled in the set.",39,[[["efdflags",3]]]],[11,"bitand_assign","nix::sys::memfd","Disables all flags disabled in the set.",40,[[["memfdcreateflag",3]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",41,[[["protflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["mapflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",44,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",45,[[["mlockallflags",3]]]],[11,"bitand_assign","nix::sys::ptrace","Disables all flags disabled in the set.",159,[[["options",3]]]],[11,"bitand_assign","nix::sys::quota","Disables all flags disabled in the set.",50,[[["quotavalidflags",3]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",55,[[["saflags",3]]]],[11,"bitand_assign","nix::sys::signalfd","Disables all flags disabled in the set.",64,[[["sfdflags",3]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",86,[[["sockflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",87,[[["msgflags",3]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",101,[[["sflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",102,[[["mode",3]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",107,[[["fsflags",3]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",116,[[["inputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["outputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["controlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",119,[[["localflags",3]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",126,[[["waitpidflag",3]]]],[11,"bitand_assign","nix::sys::inotify","Disables all flags disabled in the set.",128,[[["addwatchflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",129,[[["initflags",3]]]],[11,"bitand_assign","nix::sys::timerfd","Disables all flags disabled in the set.",133,[[["timerflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",134,[[["timersettimeflags",3]]]],[11,"bitand_assign","nix::unistd","Disables all flags disabled in the set.",149,[[["accessflags",3]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",6,[[["atflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["sealflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["fdflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["splicefflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["fallocateflags",3]]]],[11,"bitor_assign","nix::kmod","Adds the set of flags.",15,[[["moduleinitflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["deletemoduleflags",3]]]],[11,"bitor_assign","nix::mount","Adds the set of flags.",17,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["mntflags",3]]]],[11,"bitor_assign","nix::mqueue","Adds the set of flags.",19,[[["mq_oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["fdflag",3]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",22,[[["interfaceflags",3]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",24,[[["pollflags",3]]]],[11,"bitor_assign","nix::sched","Adds the set of flags.",157,[[["cloneflags",3]]]],[11,"bitor_assign","nix::sys::epoll","Adds the set of flags.",35,[[["epollflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["epollcreateflags",3]]]],[11,"bitor_assign","nix::sys::eventfd","Adds the set of flags.",39,[[["efdflags",3]]]],[11,"bitor_assign","nix::sys::memfd","Adds the set of flags.",40,[[["memfdcreateflag",3]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",41,[[["protflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["mapflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",44,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",45,[[["mlockallflags",3]]]],[11,"bitor_assign","nix::sys::ptrace","Adds the set of flags.",159,[[["options",3]]]],[11,"bitor_assign","nix::sys::quota","Adds the set of flags.",50,[[["quotavalidflags",3]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",55,[[["saflags",3]]]],[11,"bitor_assign","nix::sys::signalfd","Adds the set of flags.",64,[[["sfdflags",3]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",86,[[["sockflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",87,[[["msgflags",3]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",101,[[["sflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",102,[[["mode",3]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",107,[[["fsflags",3]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",116,[[["inputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["outputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["controlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",119,[[["localflags",3]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",126,[[["waitpidflag",3]]]],[11,"bitor_assign","nix::sys::inotify","Adds the set of flags.",128,[[["addwatchflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",129,[[["initflags",3]]]],[11,"bitor_assign","nix::sys::timerfd","Adds the set of flags.",133,[[["timerflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",134,[[["timersettimeflags",3]]]],[11,"bitor_assign","nix::unistd","Adds the set of flags.",149,[[["accessflags",3]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",6,[[["atflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["sealflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["fdflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["splicefflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["fallocateflags",3]]]],[11,"bitxor_assign","nix::kmod","Toggles the set of flags.",15,[[["moduleinitflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["deletemoduleflags",3]]]],[11,"bitxor_assign","nix::mount","Toggles the set of flags.",17,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["mntflags",3]]]],[11,"bitxor_assign","nix::mqueue","Toggles the set of flags.",19,[[["mq_oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["fdflag",3]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",22,[[["interfaceflags",3]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",24,[[["pollflags",3]]]],[11,"bitxor_assign","nix::sched","Toggles the set of flags.",157,[[["cloneflags",3]]]],[11,"bitxor_assign","nix::sys::epoll","Toggles the set of flags.",35,[[["epollflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["epollcreateflags",3]]]],[11,"bitxor_assign","nix::sys::eventfd","Toggles the set of flags.",39,[[["efdflags",3]]]],[11,"bitxor_assign","nix::sys::memfd","Toggles the set of flags.",40,[[["memfdcreateflag",3]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",41,[[["protflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["mapflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",44,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",45,[[["mlockallflags",3]]]],[11,"bitxor_assign","nix::sys::ptrace","Toggles the set of flags.",159,[[["options",3]]]],[11,"bitxor_assign","nix::sys::quota","Toggles the set of flags.",50,[[["quotavalidflags",3]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",55,[[["saflags",3]]]],[11,"bitxor_assign","nix::sys::signalfd","Toggles the set of flags.",64,[[["sfdflags",3]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",86,[[["sockflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",87,[[["msgflags",3]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",101,[[["sflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",102,[[["mode",3]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",107,[[["fsflags",3]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",116,[[["inputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["outputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["controlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",119,[[["localflags",3]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",126,[[["waitpidflag",3]]]],[11,"bitxor_assign","nix::sys::inotify","Toggles the set of flags.",128,[[["addwatchflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",129,[[["initflags",3]]]],[11,"bitxor_assign","nix::sys::timerfd","Toggles the set of flags.",133,[[["timerflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",134,[[["timersettimeflags",3]]]],[11,"bitxor_assign","nix::unistd","Toggles the set of flags.",149,[[["accessflags",3]]]],[11,"hash","nix::dir","",0,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","nix::fcntl","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",5,[[]]],[11,"hash","nix::ifaddrs","",14,[[]]],[11,"hash","","",155,[[]]],[11,"hash","nix::kmod","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","nix::mount","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","nix::mqueue","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","nix::net::if_","",22,[[]]],[11,"hash","nix::poll","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","nix::pty","",26,[[]]],[11,"hash","","",156,[[]]],[11,"hash","nix::sched","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","nix::sys::aio","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","nix::sys::epoll","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","nix::sys::eventfd","",39,[[]]],[11,"hash","nix::sys::memfd","",40,[[]]],[11,"hash","nix::sys::mman","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","nix::sys::ptrace","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",159,[[]]],[11,"hash","nix::sys::quota","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","nix::sys::reboot","",52,[[]]],[11,"hash","nix::sys::select","",53,[[]]],[11,"hash","nix::sys::signal","",54,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",161,[[]]],[11,"hash","nix::sys::signalfd","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","nix::sys::socket","",73,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",83,[[]]],[11,"hash","nix::sys::socket::sockopt","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",193,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","nix::sys::socket","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",99,[[]]],[11,"hash","nix::sys::stat","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","nix::sys::statvfs","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","nix::sys::sysinfo","",109,[[]]],[11,"hash","nix::sys::termios","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","nix::sys::time","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","nix::sys::uio","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","nix::sys::utsname","",125,[[]]],[11,"hash","nix::sys::wait","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","nix::sys::inotify","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",201,[[]]],[11,"hash","nix::sys::timerfd","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","nix::ucontext","",137,[[]]],[11,"hash","nix::unistd","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"try_from","nix::sys::signal","",54,[[["c_int",6]],[["signal",4],["result",6]]]],[11,"try_from","nix::sys::termios","",111,[[["speed_t",6]],[["baudrate",4],["result",6]]]],[11,"from_str","nix::sys::signal","",54,[[],[["signal",4],["result",6]]]],[11,"from_iter","nix::fcntl","",6,[[["intoiterator",8]],["atflags",3]]],[11,"from_iter","","",7,[[["intoiterator",8]],["oflag",3]]],[11,"from_iter","","",8,[[["intoiterator",8]],["sealflag",3]]],[11,"from_iter","","",9,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","","",12,[[["intoiterator",8]],["splicefflags",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["fallocateflags",3]]],[11,"from_iter","nix::kmod","",15,[[["intoiterator",8]],["moduleinitflags",3]]],[11,"from_iter","","",16,[[["intoiterator",8]],["deletemoduleflags",3]]],[11,"from_iter","nix::mount","",17,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["mntflags",3]]],[11,"from_iter","nix::mqueue","",19,[[["intoiterator",8]],["mq_oflag",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","nix::net::if_","",22,[[["intoiterator",8]],["interfaceflags",3]]],[11,"from_iter","nix::poll","",24,[[["intoiterator",8]],["pollflags",3]]],[11,"from_iter","nix::sched","",157,[[["intoiterator",8]],["cloneflags",3]]],[11,"from_iter","nix::sys::epoll","",35,[[["intoiterator",8]],["epollflags",3]]],[11,"from_iter","","",37,[[["intoiterator",8]],["epollcreateflags",3]]],[11,"from_iter","nix::sys::eventfd","",39,[[["intoiterator",8]],["efdflags",3]]],[11,"from_iter","nix::sys::memfd","",40,[[["intoiterator",8]],["memfdcreateflag",3]]],[11,"from_iter","nix::sys::mman","",41,[[["intoiterator",8]],["protflags",3]]],[11,"from_iter","","",42,[[["intoiterator",8]],["mapflags",3]]],[11,"from_iter","","",44,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",45,[[["intoiterator",8]],["mlockallflags",3]]],[11,"from_iter","nix::sys::ptrace","",159,[[["intoiterator",8]],["options",3]]],[11,"from_iter","nix::sys::quota","",50,[[["intoiterator",8]],["quotavalidflags",3]]],[11,"from_iter","nix::sys::signal","",55,[[["intoiterator",8]],["saflags",3]]],[11,"from_iter","nix::sys::signalfd","",64,[[["intoiterator",8]],["sfdflags",3]]],[11,"from_iter","nix::sys::socket","",86,[[["intoiterator",8]],["sockflag",3]]],[11,"from_iter","","",87,[[["intoiterator",8]],["msgflags",3]]],[11,"from_iter","nix::sys::stat","",101,[[["intoiterator",8]],["sflag",3]]],[11,"from_iter","","",102,[[["intoiterator",8]],["mode",3]]],[11,"from_iter","nix::sys::statvfs","",107,[[["intoiterator",8]],["fsflags",3]]],[11,"from_iter","nix::sys::termios","",116,[[["intoiterator",8]],["inputflags",3]]],[11,"from_iter","","",117,[[["intoiterator",8]],["outputflags",3]]],[11,"from_iter","","",118,[[["intoiterator",8]],["controlflags",3]]],[11,"from_iter","","",119,[[["intoiterator",8]],["localflags",3]]],[11,"from_iter","nix::sys::wait","",126,[[["intoiterator",8]],["waitpidflag",3]]],[11,"from_iter","nix::sys::inotify","",128,[[["intoiterator",8]],["addwatchflags",3]]],[11,"from_iter","","",129,[[["intoiterator",8]],["initflags",3]]],[11,"from_iter","nix::sys::timerfd","",133,[[["intoiterator",8]],["timerflags",3]]],[11,"from_iter","","",134,[[["intoiterator",8]],["timersettimeflags",3]]],[11,"from_iter","nix::unistd","",149,[[["intoiterator",8]],["accessflags",3]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"read","nix::pty","",156,[[],["result",6]]],[11,"write","","",156,[[],["result",6]]],[11,"flush","","",156,[[],["result",6]]],[11,"as_raw_fd","nix::dir","",0,[[],["rawfd",6]]],[11,"as_raw_fd","nix::pty","",156,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::signalfd","",65,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::inotify","",131,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::timerfd","",136,[[],["rawfd",6]]],[11,"from_raw_fd","nix::sys::inotify","",131,[[["rawfd",6]]]],[11,"from_raw_fd","nix::sys::timerfd","",136,[[["rawfd",6]]]],[11,"into_raw_fd","nix::pty","",156,[[],["rawfd",6]]],[18,"CLONE_VM","nix::sched","",157,null],[18,"CLONE_FS","","",157,null],[18,"CLONE_FILES","","",157,null],[18,"CLONE_SIGHAND","","",157,null],[18,"CLONE_PTRACE","","",157,null],[18,"CLONE_VFORK","","",157,null],[18,"CLONE_PARENT","","",157,null],[18,"CLONE_THREAD","","",157,null],[18,"CLONE_NEWNS","","",157,null],[18,"CLONE_SYSVSEM","","",157,null],[18,"CLONE_SETTLS","","",157,null],[18,"CLONE_PARENT_SETTID","","",157,null],[18,"CLONE_CHILD_CLEARTID","","",157,null],[18,"CLONE_DETACHED","","",157,null],[18,"CLONE_UNTRACED","","",157,null],[18,"CLONE_CHILD_SETTID","","",157,null],[18,"CLONE_NEWCGROUP","","",157,null],[18,"CLONE_NEWUTS","","",157,null],[18,"CLONE_NEWIPC","","",157,null],[18,"CLONE_NEWUSER","","",157,null],[18,"CLONE_NEWPID","","",157,null],[18,"CLONE_NEWNET","","",157,null],[18,"CLONE_IO","","",157,null],[11,"empty","","Returns an empty set of flags",157,[[],["cloneflags",3]]],[11,"all","","Returns the set containing all flags.",157,[[],["cloneflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",157,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",157,[[["c_int",6]],[["cloneflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",157,[[["c_int",6]],["cloneflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",157,[[["c_int",6]],["cloneflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",157,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",157,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",157,[[["cloneflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",157,[[["cloneflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",157,[[["cloneflags",3]]]],[11,"remove","","Removes the specified flags in-place.",157,[[["cloneflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",157,[[["cloneflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",157,[[["cloneflags",3]]]],[11,"new","","Create a new and empty CpuSet.",158,[[],["cpuset",3]]],[11,"is_set","","Test to see if a CPU is in the CpuSet. `field` is the CPU…",158,[[],["result",6]]],[11,"set","","Add a CPU to CpuSet. `field` is the CPU id to add",158,[[],["result",6]]],[11,"unset","","Remove a CPU from CpuSet. `field` is the CPU id to remove",158,[[],["result",6]]],[11,"count","","Return the maximum number of CPU in CpuSet",158,[[]]],[18,"PTRACE_O_TRACESYSGOOD","nix::sys::ptrace","When delivering system call traps set a bit to allow…",159,null],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked…",159,null],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked…",159,null],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned process.",159,null],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",159,null],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",159,null],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit commences…",159,null],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered.…",159,null],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits. This is…",159,null],[11,"empty","","Returns an empty set of flags",159,[[],["options",3]]],[11,"all","","Returns the set containing all flags.",159,[[],["options",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",159,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",159,[[["c_int",6]],[["options",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",159,[[["c_int",6]],["options",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",159,[[["c_int",6]],["options",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",159,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",159,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",159,[[["options",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",159,[[["options",3]]]],[11,"insert","","Inserts the specified flags in-place.",159,[[["options",3]]]],[11,"remove","","Removes the specified flags in-place.",159,[[["options",3]]]],[11,"toggle","","Toggles the specified flags in-place.",159,[[["options",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",159,[[["options",3]]]],[11,"new","nix::sys::signal","Note: this constructor does not allow the user to set the…",161,[[["sigevnotify",4]],["sigevent",3]]],[11,"sigevent","","",161,[[],["sigevent",3]]],[11,"new","nix::sys::socket","",81,[[],["netlinkaddr",3]]],[11,"pid","","",81,[[]]],[11,"groups","","",81,[[]]],[11,"new","","",82,[[],["algaddr",3]]],[11,"alg_type","","",82,[[],["cstr",3]]],[11,"alg_name","","",82,[[],["cstr",3]]],[11,"family","","Always AF_PACKET",80,[[],["addressfamily",4]]],[11,"protocol","","Physical-layer protocol",80,[[]]],[11,"ifindex","","Interface number",80,[[]]],[11,"hatype","","ARP hardware type",80,[[]]],[11,"pkttype","","Packet type",80,[[]]],[11,"halen","","Length of MAC address",80,[[]]],[11,"addr","","Physical-layer address (MAC)",80,[[]]],[11,"new","","",83,[[],["vsockaddr",3]]],[11,"cid","","Context Identifier (CID)",83,[[]]],[11,"port","","Port number",83,[[]]],[11,"from_i32","","Create a new `AddressFamily` from an integer value…",73,[[],[["option",4],["addressfamily",4]]]],[11,"from_std","","",75,[[["socketaddr",4]],["inetaddr",4]]],[11,"new","","",75,[[["ipaddr",4]],["inetaddr",4]]],[11,"ip","","Gets the IP address associated with this socket address.",75,[[],["ipaddr",4]]],[11,"port","","Gets the port number associated with this socket address",75,[[]]],[11,"to_std","","",75,[[],["socketaddr",4]]],[11,"to_str","","",75,[[],["string",3]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",77,[[],["ipaddr",4]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",77,[[],["ipaddr",4]]],[11,"from_std","","",77,[[["ipaddr",4]],["ipaddr",4]]],[11,"to_std","","",77,[[],["ipaddr",4]]],[11,"new","","",78,[[],["ipv4addr",3]]],[11,"from_std","","",78,[[["ipv4addr",3]],["ipv4addr",3]]],[11,"any","","",78,[[],["ipv4addr",3]]],[11,"octets","","",78,[[]]],[11,"to_std","","",78,[[],["ipv4addr",3]]],[11,"new","","",79,[[],["ipv6addr",3]]],[11,"from_std","","",79,[[["ipv6addr",3]],["ipv6addr",3]]],[11,"segments","","Return the eight 16-bit segments that make up this address",79,[[]]],[11,"to_std","","",79,[[],["ipv6addr",3]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",76,[[],[["unixaddr",3],["result",6]]]],[11,"new_abstract","","Create a new `sockaddr_un` representing an address in the…",76,[[],[["unixaddr",3],["result",6]]]],[11,"path","","If this address represents a filesystem path, return that…",76,[[],[["option",4],["path",3]]]],[11,"as_abstract","","If this address represents an abstract socket, return its…",76,[[],["option",4]]],[11,"new_inet","","",74,[[["inetaddr",4]],["sockaddr",4]]],[11,"new_unix","","",74,[[],[["result",6],["sockaddr",4]]]],[11,"new_netlink","","",74,[[],["sockaddr",4]]],[11,"new_alg","","",74,[[],["sockaddr",4]]],[11,"new_vsock","","",74,[[],["sockaddr",4]]],[11,"family","","",74,[[],["addressfamily",4]]],[11,"to_str","","",74,[[],["string",3]]],[11,"as_ffi_pair","","Conversion from nix\'s SockAddr type to the underlying libc…",74,[[]]]],"p":[[3,"Dir"],[4,"Type"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"PosixFadviseAdvice"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[3,"LioCb"],[3,"EpollFlags"],[4,"EpollOp"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[3,"ProtFlags"],[3,"MapFlags"],[4,"MmapAdvise"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[4,"Event"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[3,"SaFlags"],[4,"SigmaskHow"],[3,"SigSet"],[4,"SigHandler"],[3,"SigAction"],[4,"SigevNotify"],[13,"SigevSignal"],[13,"SigevThreadId"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[3,"UnixAddr"],[4,"IpAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"AlgAddr"],[3,"VsockAddr"],[4,"SockType"],[4,"SockProtocol"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"RecvMsg"],[4,"ControlMessageOwned"],[4,"ControlMessage"],[3,"SendMmsgData"],[3,"RecvMmsgData"],[4,"SockLevel"],[8,"GetSockOpt"],[8,"SetSockOpt"],[4,"Shutdown"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"FsType"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[3,"WaitPidFlag"],[4,"WaitStatus"],[3,"AddWatchFlags"],[3,"InitFlags"],[3,"InotifyEvent"],[3,"Inotify"],[4,"ClockId"],[3,"TimerFlags"],[3,"TimerSetTimeFlags"],[4,"Expiration"],[3,"TimerFd"],[3,"UContext"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[4,"ForkResult"],[13,"Parent"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"AccessFlags"],[3,"User"],[3,"Group"],[4,"Error"],[8,"NixPath"],[3,"Iter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"CloneFlags"],[3,"CpuSet"],[3,"Options"],[3,"Fds"],[3,"SigEvent"],[3,"SignalIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"UdpGsoSegment"],[3,"UdpGroSegment"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"CmsgIterator"],[3,"WatchDescriptor"],[6,"SessionId"]]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[8,"Roots","num_integer","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",0,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots",8]],["roots",8]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",1,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",1,[[]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[]]],[11,"div_ceil","","Ceiled integer division.",2,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[]]],[10,"is_even","","Returns `true` if the number is even.",2,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",3,null],[12,"x","","",3,null],[12,"y","","",3,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer",8]]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[11,"new","","For a given n, iterate over all binomial coefficients…",4,[[],["iterbinomial",3]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"eq","","",3,[[["extendedgcd",3]]]],[11,"ne","","",3,[[["extendedgcd",3]]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",3,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]]],"p":[[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"ExtendedGcd"],[3,"IterBinomial"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"cast","num_traits","",null,null],[8,"ToPrimitive","num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",1,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",1,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",1,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",1,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",1,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",1,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",1,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",1,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",1,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",1,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",1,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",1,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",1,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",1,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",2,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",2,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",2,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",2,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",2,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",2,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",2,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",2,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",2,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",2,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",2,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",2,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",2,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",2,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",3,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",4,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",5,[[]]],[10,"neg_infinity","","Returns negative infinity.",5,[[]]],[10,"nan","","Returns NaN.",5,[[]]],[10,"neg_zero","","Returns `-0.0`.",5,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",5,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",5,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",5,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",5,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",5,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",5,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",5,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",5,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",5,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",5,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",5,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",5,[[]]],[11,"trunc","","Return the integer part of a number.",5,[[]]],[11,"fract","","Returns the fractional part of a number.",5,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",5,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",5,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",5,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",5,[[]]],[11,"min","","Returns the minimum of the two numbers.",5,[[]]],[11,"max","","Returns the maximum of the two numbers.",5,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",5,[[]]],[11,"powi","","Raise a number to an integer power.",5,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",5,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",5,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",5,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",6,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",6,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",6,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",6,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",6,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",6,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",6,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",6,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",6,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",6,[[]]],[10,"LN_10","","Return `ln(10.0)`.",6,[[]]],[10,"LN_2","","Return `ln(2.0)`.",6,[[]]],[10,"LOG10_E","","Return `log10(e)`.",6,[[]]],[10,"LOG2_E","","Return `log2(e)`.",6,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",6,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",6,[[]]],[11,"TAU","","Return the full circle constant `τ`.",6,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",6,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",6,[[]]],[0,"identities","num_traits","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",7,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",7,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",7,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",8,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",8,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",8,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",9,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",9,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",9,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",9,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",9,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",9,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",9,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",9,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",9,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",9,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",9,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",9,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",9,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",9,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",9,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",9,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",10,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",11,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",12,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",13,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",15,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",16,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",17,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",18,null],[10,"inv","","Returns the multiplicative inverse of `self`.",18,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",19,null],[10,"mul_add","","Performs the fused multiply-add operation.",19,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",20,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",21,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",21,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",22,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",23,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",24,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",28,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",29,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",30,[[]]],[0,"pow","num_traits","",null,null],[8,"Pow","num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"pow","","Returns `self` to the power `rhs`.",31,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[["mul",8],["clone",8],["one",8]],[["mul",8],["clone",8],["one",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one",8],["clone",8],["checkedmul",8]],[["one",8],["checkedmul",8],["clone",8],["option",4]]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[]]],[10,"signum","","Returns the sign of the number.",32,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[]]],[5,"abs","","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",34,null],[13,"Invalid","","",34,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",35,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"once_cell":{"doc":"Overview`once_cell` provides two new cell-like types,…","i":[[0,"unsync","once_cell","",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not thread…",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell",3]]],[11,"get","","Gets a reference to the underlying value.",0,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[],["option",4]]],[11,"set","","Sets the contents of this cell to `value`.",0,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",0,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",0,[[],["result",4]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",0,[[],["option",4]]],[11,"into_inner","","Consumes the `OnceCell`, returning the wrapped value.",0,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing…",1,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",1,[[["lazy",3]]]],[0,"sync","once_cell","",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",2,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[],["option",4]]],[11,"get_unchecked","","Get the reference to the underlying value, without…",2,[[]]],[11,"set","","Sets the contents of this cell to `value`.",2,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",2,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",2,[[],["result",4]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",2,[[],["option",4]]],[11,"into_inner","","Consumes the `OnceCell`, returning the wrapped value.…",2,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing…",3,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",3,[[["lazy",3]]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","once_cell::sync","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","once_cell::sync","",2,[[]]],[11,"clone","once_cell::unsync","",0,[[],["oncecell",3]]],[11,"clone","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","once_cell::unsync","",0,[[]]],[11,"default","","Creates a new lazy value using `Default` as the…",1,[[],["lazy",3]]],[11,"default","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","","Creates a new lazy value using `Default` as the…",3,[[],["lazy",3]]],[11,"eq","once_cell::unsync","",0,[[]]],[11,"eq","once_cell::sync","",2,[[["oncecell",3]]]],[11,"deref","once_cell::unsync","",1,[[]]],[11,"deref","once_cell::sync","",3,[[]]],[11,"deref_mut","once_cell::unsync","",1,[[]]],[11,"deref_mut","once_cell::sync","",3,[[]]],[11,"fmt","once_cell::unsync","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::sync","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]},\
"onig":{"doc":"This crate provides a safe wrapper around the Oniguruma…","i":[[3,"EncodedBytes","onig","Byte Buffer",null,null],[8,"EncodedChars","","Encoded String Buffer",null,null],[10,"start_ptr","","Pointer to the start of the pattern",0,[[]]],[10,"limit_ptr","","Pointer to the limit of the pattern buffer",0,[[]]],[11,"encoding","","The encoding of the contents of the buffer",0,[[],["onigencoding",6]]],[10,"len","","The length of this buffer",0,[[]]],[11,"is_empty","","Is the buffer empty?",0,[[]]],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a…",null,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression…",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of…",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular…",null,null],[3,"RegexOptions","","Regex parsing and compilation options.",null,null],[3,"SearchOptions","","Regex evaluation options.",null,null],[3,"SyntaxOperator","","Defines the different operators allowed within a regex…",null,null],[3,"SyntaxBehavior","","Defines the behaviour of regex operators.",null,null],[3,"TraverseCallbackAt","","The order in which traverse callbacks are invoked",null,null],[3,"MetaCharType","","Syntax meta character types",null,null],[3,"MatchParam","","Parameters for a Match or Search.",null,null],[3,"Region","","Represents a set of capture groups found in a search or…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace…",1,[[["captures",3]],["cow",4]]],[4,"MetaChar","","Meta Character State",null,null],[13,"Character","","The meta character is set to the chosen `char`",2,null],[13,"Ineffective","","The meta character is not enabled",2,null],[3,"Syntax","","Onig Syntax Wrapper",null,null],[3,"CaptureTreeNode","","Capture Tree Node",null,null],[3,"CaptureTreeNodeIter","","Captures iterator",null,null],[5,"copyright","","Get Copyright",null,[[],["string",3]]],[5,"define_user_property","","Create a User Defined Proeprty",null,[[]]],[5,"version","","Get Version",null,[[],["string",3]]],[3,"Error","","This struture represents an error from the underlying…",null,null],[3,"Regex","","This struct is a wrapper around an Oniguruma regular…",null,null],[11,"code","","Return Oniguruma engine error code.",3,[[]]],[11,"description","","Return error description provided by Oniguruma engine.",3,[[]]],[11,"new","","Create a Regex",4,[[],[["result",4],["error",3]]]],[11,"with_encoding","","Create a Regex, Specifying an Encoding",4,[[],[["error",3],["result",4],["regex",3]]]],[11,"with_options","","Create a new Regex",4,[[["syntax",3],["regexoptions",3]],[["error",3],["result",4],["regex",3]]]],[11,"with_options_and_encoding","","Create a new Regex, Specifying Options and Ecoding",4,[[["syntax",3],["regexoptions",3]],[["result",4],["error",3]]]],[11,"match_with_options","","Match String",4,[[["searchoptions",3],["region",3],["option",4]],["option",4]]],[11,"match_with_encoding","","Match String with Encoding",4,[[["searchoptions",3],["region",3],["option",4]],["option",4]]],[11,"match_with_param","","Match string with encoding and match param",4,[[["searchoptions",3],["region",3],["matchparam",3],["option",4]],[["result",4],["error",3],["option",4]]]],[11,"search_with_options","","Search pattern in string",4,[[["searchoptions",3],["region",3],["option",4]],["option",4]]],[11,"search_with_encoding","","Search for a Pattern in a String with an Encoding",4,[[["searchoptions",3],["region",3],["option",4]],["option",4]]],[11,"search_with_param","","Search pattern in string with encoding and match param",4,[[["searchoptions",3],["region",3],["matchparam",3],["option",4]],[["result",4],["error",3],["option",4]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",4,[[]]],[11,"find","","Find a Match in a Buffer, With Encoding",4,[[],["option",4]]],[11,"find_with_encoding","","Find a Match in a Buffer, With Encoding",4,[[],["option",4]]],[11,"encoding","","Get the Encoding of the Regex",4,[[],["onigencoding",6]]],[11,"captures_len","","Get the Number of Capture Groups in this Pattern",4,[[]]],[11,"capture_histories_len","","Get the Size of the Capture Histories for this Pattern",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"start_ptr","","",5,[[]]],[11,"limit_ptr","","",5,[[]]],[11,"encoding","","",5,[[],["onigencoding",6]]],[11,"len","","",5,[[]]],[11,"drop","","",19,[[]]],[11,"drop","","",20,[[]]],[11,"drop","","",4,[[]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","","",14,[[["intoiterator",8]]]],[11,"extend","","",15,[[["intoiterator",8]]]],[11,"extend","","",16,[[["intoiterator",8]]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"next","","",7,[[],[["option",4],["option",4]]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],[["option",4],["option",4]]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"next","","",10,[[],[["option",4],["captures",3]]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",23,[[],[["option",4],["capturetreenode",3]]]],[11,"size_hint","","",23,[[]]],[11,"clone","","",13,[[],["regexoptions",3]]],[11,"clone","","",14,[[],["searchoptions",3]]],[11,"clone","","",15,[[],["syntaxoperator",3]]],[11,"clone","","",16,[[],["syntaxbehavior",3]]],[11,"clone","","",17,[[],["traversecallbackat",3]]],[11,"clone","","",18,[[],["metachartype",3]]],[11,"clone","","",20,[[]]],[11,"clone","","",2,[[],["metachar",4]]],[11,"clone","","",21,[[],["syntax",3]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"cmp","","",13,[[["regexoptions",3]],["ordering",4]]],[11,"cmp","","",14,[[["searchoptions",3]],["ordering",4]]],[11,"cmp","","",15,[[["syntaxoperator",3]],["ordering",4]]],[11,"cmp","","",16,[[["syntaxbehavior",3]],["ordering",4]]],[11,"cmp","","",17,[[["traversecallbackat",3]],["ordering",4]]],[11,"cmp","","",18,[[["metachartype",3]],["ordering",4]]],[11,"eq","","",13,[[["regexoptions",3]]]],[11,"ne","","",13,[[["regexoptions",3]]]],[11,"eq","","",14,[[["searchoptions",3]]]],[11,"ne","","",14,[[["searchoptions",3]]]],[11,"eq","","",15,[[["syntaxoperator",3]]]],[11,"ne","","",15,[[["syntaxoperator",3]]]],[11,"eq","","",16,[[["syntaxbehavior",3]]]],[11,"ne","","",16,[[["syntaxbehavior",3]]]],[11,"eq","","",17,[[["traversecallbackat",3]]]],[11,"ne","","",17,[[["traversecallbackat",3]]]],[11,"eq","","",18,[[["metachartype",3]]]],[11,"ne","","",18,[[["metachartype",3]]]],[11,"eq","","",20,[[["region",3]]]],[11,"ne","","",20,[[["region",3]]]],[11,"eq","","",4,[[["regex",3]]]],[11,"ne","","",4,[[["regex",3]]]],[11,"partial_cmp","","",13,[[["regexoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["regexoptions",3]]]],[11,"le","","",13,[[["regexoptions",3]]]],[11,"gt","","",13,[[["regexoptions",3]]]],[11,"ge","","",13,[[["regexoptions",3]]]],[11,"partial_cmp","","",14,[[["searchoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["searchoptions",3]]]],[11,"le","","",14,[[["searchoptions",3]]]],[11,"gt","","",14,[[["searchoptions",3]]]],[11,"ge","","",14,[[["searchoptions",3]]]],[11,"partial_cmp","","",15,[[["syntaxoperator",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["syntaxoperator",3]]]],[11,"le","","",15,[[["syntaxoperator",3]]]],[11,"gt","","",15,[[["syntaxoperator",3]]]],[11,"ge","","",15,[[["syntaxoperator",3]]]],[11,"partial_cmp","","",16,[[["syntaxbehavior",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["syntaxbehavior",3]]]],[11,"le","","",16,[[["syntaxbehavior",3]]]],[11,"gt","","",16,[[["syntaxbehavior",3]]]],[11,"ge","","",16,[[["syntaxbehavior",3]]]],[11,"partial_cmp","","",17,[[["traversecallbackat",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["traversecallbackat",3]]]],[11,"le","","",17,[[["traversecallbackat",3]]]],[11,"gt","","",17,[[["traversecallbackat",3]]]],[11,"ge","","",17,[[["traversecallbackat",3]]]],[11,"partial_cmp","","",18,[[["metachartype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["metachartype",3]]]],[11,"le","","",18,[[["metachartype",3]]]],[11,"gt","","",18,[[["metachartype",3]]]],[11,"ge","","",18,[[["metachartype",3]]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["regexoptions",3]],["regexoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",14,[[["searchoptions",3]],["searchoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",15,[[["syntaxoperator",3]],["syntaxoperator",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["syntaxbehavior",3]],["syntaxbehavior",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["traversecallbackat",3]],["traversecallbackat",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["metachartype",3]],["metachartype",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["regexoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",14,[[["searchoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",15,[[["syntaxoperator",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["syntaxbehavior",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["traversecallbackat",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["metachartype",3]]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["regexoptions",3]]],[11,"not","","Returns the complement of this set of flags.",14,[[],["searchoptions",3]]],[11,"not","","Returns the complement of this set of flags.",15,[[],["syntaxoperator",3]]],[11,"not","","Returns the complement of this set of flags.",16,[[],["syntaxbehavior",3]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["traversecallbackat",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["metachartype",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["regexoptions",3]],["regexoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",14,[[["searchoptions",3]],["searchoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",15,[[["syntaxoperator",3]],["syntaxoperator",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["syntaxbehavior",3]],["syntaxbehavior",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["traversecallbackat",3]],["traversecallbackat",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["metachartype",3]],["metachartype",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["regexoptions",3]],["regexoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",14,[[["searchoptions",3]],["searchoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",15,[[["syntaxoperator",3]],["syntaxoperator",3]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["syntaxbehavior",3]],["syntaxbehavior",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["traversecallbackat",3]],["traversecallbackat",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["metachartype",3]],["metachartype",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["regexoptions",3]],["regexoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",14,[[["searchoptions",3]],["searchoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",15,[[["syntaxoperator",3]],["syntaxoperator",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",16,[[["syntaxbehavior",3]],["syntaxbehavior",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["traversecallbackat",3]],["traversecallbackat",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",18,[[["metachartype",3]],["metachartype",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["regexoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",14,[[["searchoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",15,[[["syntaxoperator",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["syntaxbehavior",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["traversecallbackat",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["metachartype",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["regexoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",14,[[["searchoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",15,[[["syntaxoperator",3]]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["syntaxbehavior",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["traversecallbackat",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["metachartype",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["regexoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",14,[[["searchoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",15,[[["syntaxoperator",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["syntaxbehavior",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["traversecallbackat",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["metachartype",3]]]],[11,"index","","",22,[[],["capturetreenode",3]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"from_iter","","",13,[[["intoiterator",8]],["regexoptions",3]]],[11,"from_iter","","",14,[[["intoiterator",8]],["searchoptions",3]]],[11,"from_iter","","",15,[[["intoiterator",8]],["syntaxoperator",3]]],[11,"from_iter","","",16,[[["intoiterator",8]],["syntaxbehavior",3]]],[11,"from_iter","","",17,[[["intoiterator",8]],["traversecallbackat",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["metachartype",3]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"description","","",3,[[]]],[11,"encoding","","The encoding of the contents of the buffer",0,[[],["onigencoding",6]]],[11,"is_empty","","Is the buffer empty?",0,[[]]],[11,"from_parts","","New Buffer from Parts",5,[[["onigencoding",6]],["encodedbytes",3]]],[11,"ascii","","New ASCII Buffer",5,[[],["encodedbytes",3]]],[11,"captures","","Returns the capture groups corresponding to the…",4,[[],[["option",4],["captures",3]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",4,[[],["findmatches",3]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",4,[[],["findcaptures",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",4,[[],["regexsplits",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",4,[[],["regexsplitsn",3]]],[11,"scan_with_region","","Scan the given slice, capturing into the given region and…",4,[[["searchoptions",3],["region",3]]]],[11,"scan","","Scan a Pattern and Observe Captures",4,[[]]],[11,"pos","","Returns the start and end positions of the Nth capture…",6,[[],["option",4]]],[11,"at","","Returns the matched string for the capture group `i`. If…",6,[[],["option",4]]],[11,"len","","Returns the number of captured groups.",6,[[]]],[11,"is_empty","","Returns true if and only if there are no captured groups.",6,[[]]],[11,"iter","","Creates an iterator of all the capture groups in order of…",6,[[],["subcaptures",3]]],[11,"iter_pos","","Creates an iterator of all the capture group positions in…",6,[[],["subcapturespos",3]]],[11,"offset","","Offset of the captures within the given string slice.",6,[[]]],[18,"REGEX_OPTION_NONE","","Default options.",13,null],[18,"REGEX_OPTION_IGNORECASE","","Ambiguity match on.",13,null],[18,"REGEX_OPTION_EXTEND","","Extended pattern form.",13,null],[18,"REGEX_OPTION_MULTILINE","","`\'.\'` match with newline.",13,null],[18,"REGEX_OPTION_SINGLELINE","","`\'^\'` -> `\'\\\\A\'`, `\'$\'` -> `\'\\\\Z\'`.",13,null],[18,"REGEX_OPTION_FIND_LONGEST","","Find longest match.",13,null],[18,"REGEX_OPTION_FIND_NOT_EMPTY","","Ignore empty match.",13,null],[18,"REGEX_OPTION_NEGATE_SINGLELINE","","Clear `OPTION_SINGLELINE` which is enabled on…",13,null],[18,"REGEX_OPTION_DONT_CAPTURE_GROUP","","Only named group captured.",13,null],[18,"REGEX_OPTION_CAPTURE_GROUP","","Named and no-named group captured.",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["regexoptions",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["regexoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["onigoptiontype",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[["onigoptiontype",6]],[["option",4],["regexoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[["onigoptiontype",6]],["regexoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["onigoptiontype",6]],["regexoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["regexoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["regexoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["regexoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["regexoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["regexoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["regexoptions",3]]]],[18,"SEARCH_OPTION_NONE","","Default options.",14,null],[18,"SEARCH_OPTION_NOTBOL","","String head isn\'t considered as begin of line.",14,null],[18,"SEARCH_OPTION_NOTEOL","","String end isn\'t considered as end of line.",14,null],[11,"empty","","Returns an empty set of flags",14,[[],["searchoptions",3]]],[11,"all","","Returns the set containing all flags.",14,[[],["searchoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[],["onigoptiontype",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",14,[[["onigoptiontype",6]],[["option",4],["searchoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",14,[[["onigoptiontype",6]],["searchoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[["onigoptiontype",6]],["searchoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",14,[[["searchoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",14,[[["searchoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["searchoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["searchoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["searchoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",14,[[["searchoptions",3]]]],[18,"SYNTAX_OPERATOR_DOT_ANYCHAR","","`.`",15,null],[18,"SYNTAX_OPERATOR_ASTERISK_ZERO_INF","","`*`",15,null],[18,"SYNTAX_OPERATOR_PLUS_ONE_INF","","`+`",15,null],[18,"SYNTAX_OPERATOR_QMARK_ZERO_ONE","","`?`",15,null],[18,"SYNTAX_OPERATOR_BRACE_INTERVAL","","`{lower,upper}`",15,null],[18,"SYNTAX_OPERATOR_ESC_BRACE_INTERVAL","","`\\\\{lower,upper\\\\}`",15,null],[18,"SYNTAX_OPERATOR_VBAR_ALT","","`|`",15,null],[18,"SYNTAX_OPERATOR_ESC_VBAR_ALT","","`\\\\|`",15,null],[18,"SYNTAX_OPERATOR_LPAREN_SUBEXP","","`(...)`",15,null],[18,"SYNTAX_OPERATOR_ESC_LPAREN_SUBEXP","","`\\\\(...\\\\)`",15,null],[18,"SYNTAX_OPERATOR_ESC_AZ_BUF_ANCHOR","","`\\\\A, \\\\Z, \\\\z`",15,null],[18,"SYNTAX_OPERATOR_ESC_CAPITAL_G_BEGIN_ANCHOR","","`\\\\G`",15,null],[18,"SYNTAX_OPERATOR_DECIMAL_BACKREF","","`\\\\num`",15,null],[18,"SYNTAX_OPERATOR_BRACKET_CC","","`[...]`",15,null],[18,"SYNTAX_OPERATOR_ESC_W_WORD","","`\\\\w, \\\\W`",15,null],[18,"SYNTAX_OPERATOR_ESC_LTGT_WORD_BEGIN_END","","`\\\\<. \\\\>`",15,null],[18,"SYNTAX_OPERATOR_ESC_B_WORD_BOUND","","`\\\\b, \\\\B`",15,null],[18,"SYNTAX_OPERATOR_ESC_S_WHITE_SPACE","","`\\\\s, \\\\S`",15,null],[18,"SYNTAX_OPERATOR_ESC_D_DIGIT","","`\\\\d, \\\\D`",15,null],[18,"SYNTAX_OPERATOR_LINE_ANCHOR","","`^, $`",15,null],[18,"SYNTAX_OPERATOR_POSIX_BRACKET","","`[:xxxx:]`",15,null],[18,"SYNTAX_OPERATOR_QMARK_NON_GREEDY","","`??,*?,+?,{n,m}?`",15,null],[18,"SYNTAX_OPERATOR_ESC_CONTROL_CHARS","","`\\\\n,\\\\r,\\\\t,\\\\a ...`",15,null],[18,"SYNTAX_OPERATOR_ESC_C_CONTROL","","`\\\\cx`",15,null],[18,"SYNTAX_OPERATOR_ESC_OCTAL3","","`\\\\OOO`",15,null],[18,"SYNTAX_OPERATOR_ESC_X_HEX2","","`\\\\xHH`",15,null],[18,"SYNTAX_OPERATOR_ESC_X_BRACE_HEX8","","`\\\\x{7HHHHHHH}`",15,null],[18,"SYNTAX_OPERATOR_VARIABLE_META_CHARACTERS","","Variable meta characters",15,null],[18,"SYNTAX_OPERATOR_ESC_CAPITAL_Q_QUOTE","","`\\\\Q...\\\\E`",15,null],[18,"SYNTAX_OPERATOR_QMARK_GROUP_EFFECT","","`(?...)`",15,null],[18,"SYNTAX_OPERATOR_OPTION_PERL","","`(?imsx),(?-imsx)`",15,null],[18,"SYNTAX_OPERATOR_OPTION_RUBY","","`(?imx), (?-imx)`",15,null],[18,"SYNTAX_OPERATOR_PLUS_POSSESSIVE_REPEAT","","`?+,*+,++`",15,null],[18,"SYNTAX_OPERATOR_PLUS_POSSESSIVE_INTERVAL","","`{n,m}+`",15,null],[18,"SYNTAX_OPERATOR_CCLASS_SET_OP","","`[...&&..[..]..]`",15,null],[18,"SYNTAX_OPERATOR_QMARK_LT_NAMED_GROUP","","`(?<name>...)`",15,null],[18,"SYNTAX_OPERATOR_ESC_K_NAMED_BACKREF","","`\\\\k<name>`",15,null],[18,"SYNTAX_OPERATOR_ESC_G_SUBEXP_CALL","","`\\\\g<name>, \\\\g<n>`",15,null],[18,"SYNTAX_OPERATOR_ATMARK_CAPTURE_HISTORY","","`(?@..),(?@<x>..)`",15,null],[18,"SYNTAX_OPERATOR_ESC_CAPITAL_C_BAR_CONTROL","","`\\\\C-x`",15,null],[18,"SYNTAX_OPERATOR_ESC_CAPITAL_M_BAR_META","","`\\\\M-x`",15,null],[18,"SYNTAX_OPERATOR_ESC_V_VTAB","","`\\\\v as VTAB`",15,null],[18,"SYNTAX_OPERATOR_ESC_U_HEX4","","`\\\\uHHHH`",15,null],[18,"SYNTAX_OPERATOR_ESC_GNU_BUF_ANCHOR","","`\\\\`, \'`",15,null],[18,"SYNTAX_OPERATOR_ESC_P_BRACE_CHAR_PROPERTY","","`\\\\p{...}, \\\\P{...}`",15,null],[18,"SYNTAX_OPERATOR_ESC_P_BRACE_CIRCUMFLEX_NOT","","`\\\\p{^..}, \\\\P{^..}`",15,null],[18,"SYNTAX_OPERATOR_ESC_H_XDIGIT","","`\\\\h, \\\\H`",15,null],[18,"SYNTAX_OPERATOR_INEFFECTIVE_ESCAPE","","`\\\\`",15,null],[11,"empty","","Returns an empty set of flags",15,[[],["syntaxoperator",3]]],[11,"all","","Returns the set containing all flags.",15,[[],["syntaxoperator",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",15,[[],[["syntaxoperator",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",15,[[],["syntaxoperator",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",15,[[],["syntaxoperator",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",15,[[["syntaxoperator",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",15,[[["syntaxoperator",3]]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["syntaxoperator",3]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["syntaxoperator",3]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["syntaxoperator",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",15,[[["syntaxoperator",3]]]],[18,"SYNTAX_BEHAVIOR_CONTEXT_INDEP_REPEAT_OPS","","`?, *, +, {n,m}`",16,null],[18,"SYNTAX_BEHAVIOR_CONTEXT_INVALID_REPEAT_OPS","","`error or ignore`",16,null],[18,"SYNTAX_BEHAVIOR_ALLOW_UNMATCHED_CLOSE_SUBEXP","","`...)...`",16,null],[18,"SYNTAX_BEHAVIOR_ALLOW_INVALID_INTERVAL","","`{???`",16,null],[18,"SYNTAX_BEHAVIOR_ALLOW_INTERVAL_LOW_ABBREV","","`{,n} => {0,n}`",16,null],[18,"SYNTAX_BEHAVIOR_STRICT_CHECK_BACKREF","","`/(\\\\1)/,/\\\\1()/ ..`",16,null],[18,"SYNTAX_BEHAVIOR_DIFFERENT_LEN_ALT_LOOK_BEHIND","","`(?<=a|bc)`",16,null],[18,"SYNTAX_BEHAVIOR_CAPTURE_ONLY_NAMED_GROUP","","See Oniguruma documenation",16,null],[18,"SYNTAX_BEHAVIOR_ALLOW_MULTIPLEX_DEFINITION_NAME","","`(?<x>)(?<x>)`",16,null],[18,"SYNTAX_BEHAVIOR_FIXED_INTERVAL_IS_GREEDY_ONLY","","`a{n}?=(?:a{n})?`",16,null],[18,"SYNTAX_BEHAVIOR_NOT_NEWLINE_IN_NEGATIVE_CC","","`[^...]`",16,null],[18,"SYNTAX_BEHAVIOR_BACKSLASH_ESCAPE_IN_CC","","`[..\\\\w..] etc..`",16,null],[18,"SYNTAX_BEHAVIOR_ALLOW_DOUBLE_RANGE_OP_IN_CC","","`[0-9-a]=[0-9\\\\-a]`",16,null],[18,"SYNTAX_BEHAVIOR_WARN_CC_OP_NOT_ESCAPED","","`[,-,]`",16,null],[18,"SYNTAX_BEHAVIOR_WARN_REDUNDANT_NESTED_REPEAT","","`(?:a*)+`",16,null],[11,"empty","","Returns an empty set of flags",16,[[],["syntaxbehavior",3]]],[11,"all","","Returns the set containing all flags.",16,[[],["syntaxbehavior",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["onigsyntaxbehavior",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",16,[[["onigsyntaxbehavior",6]],[["syntaxbehavior",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",16,[[["onigsyntaxbehavior",6]],["syntaxbehavior",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["onigsyntaxbehavior",6]],["syntaxbehavior",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",16,[[["syntaxbehavior",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",16,[[["syntaxbehavior",3]]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["syntaxbehavior",3]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["syntaxbehavior",3]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["syntaxbehavior",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",16,[[["syntaxbehavior",3]]]],[18,"CALLBACK_AT_FIRST","","Callback before children are wallked",17,null],[18,"CALLBACK_AT_LAST","","Callback after children are walked",17,null],[18,"CALLBACK_AT_BOTH","","Callback both before and after children are walked.",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["traversecallbackat",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["traversecallbackat",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[["c_uint",6]],[["traversecallbackat",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[["c_uint",6]],["traversecallbackat",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["c_uint",6]],["traversecallbackat",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["traversecallbackat",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["traversecallbackat",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["traversecallbackat",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["traversecallbackat",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["traversecallbackat",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["traversecallbackat",3]]]],[18,"META_CHAR_ESCAPE","","The escape charater for this syntax",18,null],[18,"META_CHAR_ANYCHAR","","The any (.) character for this syntax.",18,null],[18,"META_CHAR_ANYTIME","","The any number of repeats (*) character for this syntax.",18,null],[18,"META_CHAR_ZERO_OR_ONE_TIME","","The optinoal (?) chracter for this syntax",18,null],[18,"META_CHAR_ONE_OR_MORE_TIME","","The at least once (+) character for this syntax",18,null],[18,"META_CHAR_ANYCHAR_ANYTIME","","The glob character for this syntax (.*)",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["metachartype",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["metachartype",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[["c_uint",6]],[["metachartype",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[["c_uint",6]],["metachartype",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[["c_uint",6]],["metachartype",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["metachartype",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["metachartype",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["metachartype",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["metachartype",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["metachartype",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["metachartype",3]]]],[11,"set_match_stack_limit","","Set the match stack limit",19,[[]]],[11,"set_retry_limit_in_match","","Set the retry limit in match",19,[[]]],[11,"as_raw","","Get the Raw `OnigMatchParam` Pointer",19,[[]]],[11,"capture_names_len","","Returns the number of named groups into regex.",4,[[]]],[11,"foreach_name","","Calls `callback` for each named group in the regex. Each…",4,[[]]],[11,"new","","Create a new empty `Region`",20,[[],["region",3]]],[11,"with_capacity","","Create a new region with a given capacity. This function…",20,[[],["region",3]]],[11,"clone_from_raw","","Clone From Raw",20,[[]]],[11,"clear","","This can be used to clear out a region so it can be used…",20,[[]]],[11,"capacity","","Get the current capacity of the region.",20,[[]]],[11,"reserve","","Updates the region to contain `new_capacity` slots. See…",20,[[]]],[11,"len","","Get the size of the region.",20,[[]]],[11,"is_empty","","Check if the region is empty.",20,[[]]],[11,"pos","","Returns the start and end positions of the Nth capture…",20,[[],["option",4]]],[11,"tree","","Get Capture Tree",20,[[],[["option",4],["capturetreenode",3]]]],[11,"iter","","Get an iterator over the captures in the region.",20,[[],["regioniter",3]]],[11,"tree_traverse","","Walk the Tree of Captures",20,[[]]],[11,"tree_traverse_at","","Walk the Tree of Captures in a Given Order",20,[[["traversecallbackat",3]]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",4,[[["replacer",8]],["string",3]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",4,[[["replacer",8]],["string",3]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",4,[[["replacer",8]],["string",3]]],[11,"asis","","Plain text syntax",21,[[],["syntax",3]]],[11,"posix_basic","","POSIX Basic RE syntax",21,[[],["syntax",3]]],[11,"posix_extended","","POSIX Extended RE syntax",21,[[],["syntax",3]]],[11,"emacs","","Emacs syntax",21,[[],["syntax",3]]],[11,"grep","","Grep syntax",21,[[],["syntax",3]]],[11,"gnu_regex","","GNU regex syntax",21,[[],["syntax",3]]],[11,"java","","Java (Sun java.util.regex) syntax",21,[[],["syntax",3]]],[11,"perl","","Perl syntax",21,[[],["syntax",3]]],[11,"perl_ng","","Perl + named group syntax",21,[[],["syntax",3]]],[11,"ruby","","Ruby syntax",21,[[],["syntax",3]]],[11,"oniguruma","","Oniguruma Syntax",21,[[],["syntax",3]]],[11,"default","","Default syntax (Ruby syntax)",21,[[],["syntax",3]]],[11,"operators","","Retrieve the operators for this syntax",21,[[],["syntaxoperator",3]]],[11,"set_operators","","Replace the operators for this syntax",21,[[["syntaxoperator",3]]]],[11,"enable_operators","","Enable Operators for this Syntax",21,[[["syntaxoperator",3]]]],[11,"disable_operators","","Disable Operators for this Syntax",21,[[["syntaxoperator",3]]]],[11,"behavior","","Retrieves the syntax behaviours",21,[[],["syntaxbehavior",3]]],[11,"set_behavior","","Overwrite the syntax behaviour for this syntax.",21,[[["syntaxbehavior",3]]]],[11,"enable_behavior","","Enable a given behaviour for this syntax",21,[[["syntaxbehavior",3]]]],[11,"disable_behavior","","Disable a given behaviour for this syntax",21,[[["syntaxbehavior",3]]]],[11,"options","","Retireve the syntax options for this syntax",21,[[],["regexoptions",3]]],[11,"set_options","","Replace the syntax options for this syntax",21,[[["regexoptions",3]]]],[11,"set_meta_char","","Set a given meta character\'s state",21,[[["metachartype",3],["metachar",4]]]],[11,"group","","The capture group number for this capture",22,[[]]],[11,"pos","","The extent of this capture",22,[[]]],[11,"len","","The number of child captures this group contains",22,[[]]],[11,"is_empty","","Does the node have any child captures?",22,[[]]],[11,"children","","An iterator over thie children of this capture group",22,[[],["capturetreenodeiter",3]]]],"p":[[8,"EncodedChars"],[8,"Replacer"],[4,"MetaChar"],[3,"Error"],[3,"Regex"],[3,"EncodedBytes"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"FindMatches"],[3,"FindCaptures"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"RegexOptions"],[3,"SearchOptions"],[3,"SyntaxOperator"],[3,"SyntaxBehavior"],[3,"TraverseCallbackAt"],[3,"MetaCharType"],[3,"MatchParam"],[3,"Region"],[3,"Syntax"],[3,"CaptureTreeNode"],[3,"CaptureTreeNodeIter"]]},\
"onig_sys":{"doc":"","i":[[7,"OnigDefaultCaseFoldFlag","onig_sys","",null,null],[7,"OnigEncodingASCII","","",null,null],[7,"OnigEncodingISO_8859_1","","",null,null],[7,"OnigEncodingISO_8859_2","","",null,null],[7,"OnigEncodingISO_8859_3","","",null,null],[7,"OnigEncodingISO_8859_4","","",null,null],[7,"OnigEncodingISO_8859_5","","",null,null],[7,"OnigEncodingISO_8859_6","","",null,null],[7,"OnigEncodingISO_8859_7","","",null,null],[7,"OnigEncodingISO_8859_8","","",null,null],[7,"OnigEncodingISO_8859_9","","",null,null],[7,"OnigEncodingISO_8859_10","","",null,null],[7,"OnigEncodingISO_8859_11","","",null,null],[7,"OnigEncodingISO_8859_13","","",null,null],[7,"OnigEncodingISO_8859_14","","",null,null],[7,"OnigEncodingISO_8859_15","","",null,null],[7,"OnigEncodingISO_8859_16","","",null,null],[7,"OnigEncodingUTF8","","",null,null],[7,"OnigEncodingUTF16_BE","","",null,null],[7,"OnigEncodingUTF16_LE","","",null,null],[7,"OnigEncodingUTF32_BE","","",null,null],[7,"OnigEncodingUTF32_LE","","",null,null],[7,"OnigEncodingEUC_JP","","",null,null],[7,"OnigEncodingEUC_TW","","",null,null],[7,"OnigEncodingEUC_KR","","",null,null],[7,"OnigEncodingEUC_CN","","",null,null],[7,"OnigEncodingSJIS","","",null,null],[7,"OnigEncodingKOI8","","",null,null],[7,"OnigEncodingKOI8_R","","",null,null],[7,"OnigEncodingCP1251","","",null,null],[7,"OnigEncodingBIG5","","",null,null],[7,"OnigEncodingGB18030","","",null,null],[5,"onigenc_step_back","","",null,null],[5,"onigenc_init","","",null,null],[5,"onig_initialize_encoding","","",null,null],[5,"onigenc_set_default_encoding","","",null,null],[5,"onigenc_get_default_encoding","","",null,null],[5,"onigenc_set_default_caseconv_table","","",null,null],[5,"onigenc_get_right_adjust_char_head_with_prev","","",null,null],[5,"onigenc_get_prev_char_head","","",null,null],[5,"onigenc_get_left_adjust_char_head","","",null,null],[5,"onigenc_get_right_adjust_char_head","","",null,null],[5,"onigenc_strlen","","",null,null],[5,"onigenc_strlen_null","","",null,null],[5,"onigenc_str_bytelen_null","","",null,null],[5,"onigenc_is_valid_mbc_string","","",null,null],[5,"onigenc_strdup","","",null,null],[7,"OnigSyntaxASIS","","",null,null],[7,"OnigSyntaxPosixBasic","","",null,null],[7,"OnigSyntaxPosixExtended","","",null,null],[7,"OnigSyntaxEmacs","","",null,null],[7,"OnigSyntaxGrep","","",null,null],[7,"OnigSyntaxGnuRegex","","",null,null],[7,"OnigSyntaxJava","","",null,null],[7,"OnigSyntaxPerl","","",null,null],[7,"OnigSyntaxPerl_NG","","",null,null],[7,"OnigSyntaxRuby","","",null,null],[7,"OnigSyntaxOniguruma","","",null,null],[7,"OnigDefaultSyntax","","",null,null],[5,"onig_null_warn","","",null,null],[5,"onig_initialize","","",null,null],[5,"onig_init","","",null,null],[5,"onig_error_code_to_str","","",null,null],[5,"onig_is_error_code_needs_param","","",null,null],[5,"onig_set_warn_func","","",null,null],[5,"onig_set_verb_warn_func","","",null,null],[5,"onig_new","","",null,null],[5,"onig_reg_init","","",null,null],[5,"onig_new_without_alloc","","",null,null],[5,"onig_new_deluxe","","",null,null],[5,"onig_free","","",null,null],[5,"onig_free_body","","",null,null],[5,"onig_scan","","",null,null],[5,"onig_search","","",null,null],[5,"onig_search_with_param","","",null,null],[5,"onig_match","","",null,null],[5,"onig_match_with_param","","",null,null],[5,"onig_regset_new","","",null,null],[5,"onig_regset_add","","",null,null],[5,"onig_regset_replace","","",null,null],[5,"onig_regset_free","","",null,null],[5,"onig_regset_number_of_regex","","",null,null],[5,"onig_regset_get_regex","","",null,null],[5,"onig_regset_get_region","","",null,null],[5,"onig_regset_search","","",null,null],[5,"onig_regset_search_with_param","","",null,null],[5,"onig_region_new","","",null,null],[5,"onig_region_init","","",null,null],[5,"onig_region_free","","",null,null],[5,"onig_region_copy","","",null,null],[5,"onig_region_clear","","",null,null],[5,"onig_region_resize","","",null,null],[5,"onig_region_set","","",null,null],[5,"onig_name_to_group_numbers","","",null,null],[5,"onig_name_to_backref_number","","",null,null],[5,"onig_foreach_name","","",null,null],[5,"onig_number_of_names","","",null,null],[5,"onig_number_of_captures","","",null,null],[5,"onig_number_of_capture_histories","","",null,null],[5,"onig_get_capture_tree","","",null,null],[5,"onig_capture_tree_traverse","","",null,null],[5,"onig_noname_group_capture_is_active","","",null,null],[5,"onig_get_encoding","","",null,null],[5,"onig_get_options","","",null,null],[5,"onig_get_case_fold_flag","","",null,null],[5,"onig_get_syntax","","",null,null],[5,"onig_set_default_syntax","","",null,null],[5,"onig_copy_syntax","","",null,null],[5,"onig_get_syntax_op","","",null,null],[5,"onig_get_syntax_op2","","",null,null],[5,"onig_get_syntax_behavior","","",null,null],[5,"onig_get_syntax_options","","",null,null],[5,"onig_set_syntax_op","","",null,null],[5,"onig_set_syntax_op2","","",null,null],[5,"onig_set_syntax_behavior","","",null,null],[5,"onig_set_syntax_options","","",null,null],[5,"onig_set_meta_char","","",null,null],[5,"onig_copy_encoding","","",null,null],[5,"onig_get_default_case_fold_flag","","",null,null],[5,"onig_set_default_case_fold_flag","","",null,null],[5,"onig_get_match_stack_limit_size","","",null,null],[5,"onig_set_match_stack_limit_size","","",null,null],[5,"onig_get_retry_limit_in_match","","",null,null],[5,"onig_set_retry_limit_in_match","","",null,null],[5,"onig_get_retry_limit_in_search","","",null,null],[5,"onig_set_retry_limit_in_search","","",null,null],[5,"onig_get_parse_depth_limit","","",null,null],[5,"onig_set_capture_num_limit","","",null,null],[5,"onig_set_parse_depth_limit","","",null,null],[5,"onig_get_subexp_call_max_nest_level","","",null,null],[5,"onig_set_subexp_call_max_nest_level","","",null,null],[5,"onig_unicode_define_user_property","","",null,null],[5,"onig_end","","",null,null],[5,"onig_version","","",null,null],[5,"onig_copyright","","",null,null],[5,"onig_new_match_param","","",null,null],[5,"onig_free_match_param","","",null,null],[5,"onig_free_match_param_content","","",null,null],[5,"onig_initialize_match_param","","",null,null],[5,"onig_set_match_stack_limit_size_of_match_param","","",null,null],[5,"onig_set_retry_limit_in_match_of_match_param","","",null,null],[5,"onig_set_retry_limit_in_search_of_match_param","","",null,null],[5,"onig_set_progress_callout_of_match_param","","",null,null],[5,"onig_set_retraction_callout_of_match_param","","",null,null],[5,"onig_set_callout_user_data_of_match_param","","",null,null],[5,"onig_get_progress_callout","","",null,null],[5,"onig_set_progress_callout","","",null,null],[5,"onig_get_retraction_callout","","",null,null],[5,"onig_set_retraction_callout","","",null,null],[5,"onig_set_callout_of_name","","",null,null],[5,"onig_get_callout_name_by_name_id","","",null,null],[5,"onig_get_callout_num_by_tag","","",null,null],[5,"onig_get_callout_data_by_tag","","",null,null],[5,"onig_set_callout_data_by_tag","","",null,null],[5,"onig_get_callout_num_by_callout_args","","",null,null],[5,"onig_get_callout_in_by_callout_args","","",null,null],[5,"onig_get_name_id_by_callout_args","","",null,null],[5,"onig_get_contents_by_callout_args","","",null,null],[5,"onig_get_contents_end_by_callout_args","","",null,null],[5,"onig_get_args_num_by_callout_args","","",null,null],[5,"onig_get_passed_args_num_by_callout_args","","",null,null],[5,"onig_get_arg_by_callout_args","","",null,null],[5,"onig_get_string_by_callout_args","","",null,null],[5,"onig_get_string_end_by_callout_args","","",null,null],[5,"onig_get_start_by_callout_args","","",null,null],[5,"onig_get_right_range_by_callout_args","","",null,null],[5,"onig_get_current_by_callout_args","","",null,null],[5,"onig_get_regex_by_callout_args","","",null,null],[5,"onig_get_retry_counter_by_callout_args","","",null,null],[5,"onig_callout_tag_is_exist_at_callout_num","","",null,null],[5,"onig_get_callout_tag_start","","",null,null],[5,"onig_get_callout_tag_end","","",null,null],[5,"onig_get_callout_data_dont_clear_old","","",null,null],[5,"onig_get_callout_data_by_callout_args_self_dont_clear_old","","",null,null],[5,"onig_get_callout_data","","",null,null],[5,"onig_get_callout_data_by_callout_args","","",null,null],[5,"onig_get_callout_data_by_callout_args_self","","",null,null],[5,"onig_set_callout_data","","",null,null],[5,"onig_set_callout_data_by_callout_args","","",null,null],[5,"onig_set_callout_data_by_callout_args_self","","",null,null],[5,"onig_get_capture_range_in_callout","","",null,null],[5,"onig_get_used_stack_size_in_callout","","",null,null],[5,"onig_builtin_fail","","",null,null],[5,"onig_builtin_mismatch","","",null,null],[5,"onig_builtin_error","","",null,null],[5,"onig_builtin_count","","",null,null],[5,"onig_builtin_total_count","","",null,null],[5,"onig_builtin_max","","",null,null],[5,"onig_builtin_cmp","","",null,null],[5,"onig_setup_builtin_monitors_by_ascii_encoded_name","","",null,null],[17,"ONIGURUMA_VERSION_MAJOR","","",null,null],[17,"ONIGURUMA_VERSION_MINOR","","",null,null],[17,"ONIGURUMA_VERSION_TEENY","","",null,null],[17,"ONIGURUMA_VERSION_INT","","",null,null],[17,"ONIGENC_CASE_FOLD_TURKISH_AZERI","","",null,null],[17,"INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR","","",null,null],[17,"ONIGENC_CASE_FOLD_MIN","","",null,null],[17,"ONIGENC_MAX_COMP_CASE_FOLD_CODE_LEN","","",null,null],[17,"ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM","","",null,null],[17,"ONIGENC_CODE_TO_MBC_MAXLEN","","",null,null],[17,"ONIGENC_MBC_CASE_FOLD_MAXLEN","","",null,null],[17,"ONIG_NREGION","","",null,null],[17,"ONIG_MAX_CAPTURE_NUM","","",null,null],[17,"ONIG_MAX_BACKREF_NUM","","",null,null],[17,"ONIG_MAX_REPEAT_NUM","","",null,null],[17,"ONIG_MAX_MULTI_BYTE_RANGES_NUM","","",null,null],[17,"ONIG_MAX_ERROR_MESSAGE_LEN","","",null,null],[17,"ONIG_OPTION_NONE","","",null,null],[17,"ONIG_OPTION_IGNORECASE","","",null,null],[17,"ONIG_OPTION_EXTEND","","",null,null],[17,"ONIG_OPTION_MULTILINE","","",null,null],[17,"ONIG_OPTION_SINGLELINE","","",null,null],[17,"ONIG_OPTION_FIND_LONGEST","","",null,null],[17,"ONIG_OPTION_FIND_NOT_EMPTY","","",null,null],[17,"ONIG_OPTION_NEGATE_SINGLELINE","","",null,null],[17,"ONIG_OPTION_DONT_CAPTURE_GROUP","","",null,null],[17,"ONIG_OPTION_CAPTURE_GROUP","","",null,null],[17,"ONIG_OPTION_NOTBOL","","",null,null],[17,"ONIG_OPTION_NOTEOL","","",null,null],[17,"ONIG_OPTION_POSIX_REGION","","",null,null],[17,"ONIG_OPTION_CHECK_VALIDITY_OF_STRING","","",null,null],[17,"ONIG_OPTION_WORD_IS_ASCII","","",null,null],[17,"ONIG_OPTION_DIGIT_IS_ASCII","","",null,null],[17,"ONIG_OPTION_SPACE_IS_ASCII","","",null,null],[17,"ONIG_OPTION_POSIX_IS_ASCII","","",null,null],[17,"ONIG_OPTION_TEXT_SEGMENT_EXTENDED_GRAPHEME_CLUSTER","","",null,null],[17,"ONIG_OPTION_TEXT_SEGMENT_WORD","","",null,null],[17,"ONIG_OPTION_MAXBIT","","",null,null],[17,"ONIG_SYN_OP_VARIABLE_META_CHARACTERS","","",null,null],[17,"ONIG_SYN_OP_DOT_ANYCHAR","","",null,null],[17,"ONIG_SYN_OP_ASTERISK_ZERO_INF","","",null,null],[17,"ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF","","",null,null],[17,"ONIG_SYN_OP_PLUS_ONE_INF","","",null,null],[17,"ONIG_SYN_OP_ESC_PLUS_ONE_INF","","",null,null],[17,"ONIG_SYN_OP_QMARK_ZERO_ONE","","",null,null],[17,"ONIG_SYN_OP_ESC_QMARK_ZERO_ONE","","",null,null],[17,"ONIG_SYN_OP_BRACE_INTERVAL","","",null,null],[17,"ONIG_SYN_OP_ESC_BRACE_INTERVAL","","",null,null],[17,"ONIG_SYN_OP_VBAR_ALT","","",null,null],[17,"ONIG_SYN_OP_ESC_VBAR_ALT","","",null,null],[17,"ONIG_SYN_OP_LPAREN_SUBEXP","","",null,null],[17,"ONIG_SYN_OP_ESC_LPAREN_SUBEXP","","",null,null],[17,"ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR","","",null,null],[17,"ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR","","",null,null],[17,"ONIG_SYN_OP_DECIMAL_BACKREF","","",null,null],[17,"ONIG_SYN_OP_BRACKET_CC","","",null,null],[17,"ONIG_SYN_OP_ESC_W_WORD","","",null,null],[17,"ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END","","",null,null],[17,"ONIG_SYN_OP_ESC_B_WORD_BOUND","","",null,null],[17,"ONIG_SYN_OP_ESC_S_WHITE_SPACE","","",null,null],[17,"ONIG_SYN_OP_ESC_D_DIGIT","","",null,null],[17,"ONIG_SYN_OP_LINE_ANCHOR","","",null,null],[17,"ONIG_SYN_OP_POSIX_BRACKET","","",null,null],[17,"ONIG_SYN_OP_QMARK_NON_GREEDY","","",null,null],[17,"ONIG_SYN_OP_ESC_CONTROL_CHARS","","",null,null],[17,"ONIG_SYN_OP_ESC_C_CONTROL","","",null,null],[17,"ONIG_SYN_OP_ESC_OCTAL3","","",null,null],[17,"ONIG_SYN_OP_ESC_X_HEX2","","",null,null],[17,"ONIG_SYN_OP_ESC_X_BRACE_HEX8","","",null,null],[17,"ONIG_SYN_OP_ESC_O_BRACE_OCTAL","","",null,null],[17,"ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE","","",null,null],[17,"ONIG_SYN_OP2_QMARK_GROUP_EFFECT","","",null,null],[17,"ONIG_SYN_OP2_OPTION_PERL","","",null,null],[17,"ONIG_SYN_OP2_OPTION_RUBY","","",null,null],[17,"ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT","","",null,null],[17,"ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL","","",null,null],[17,"ONIG_SYN_OP2_CCLASS_SET_OP","","",null,null],[17,"ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP","","",null,null],[17,"ONIG_SYN_OP2_ESC_K_NAMED_BACKREF","","",null,null],[17,"ONIG_SYN_OP2_ESC_G_SUBEXP_CALL","","",null,null],[17,"ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY","","",null,null],[17,"ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL","","",null,null],[17,"ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META","","",null,null],[17,"ONIG_SYN_OP2_ESC_V_VTAB","","",null,null],[17,"ONIG_SYN_OP2_ESC_U_HEX4","","",null,null],[17,"ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR","","",null,null],[17,"ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY","","",null,null],[17,"ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT","","",null,null],[17,"ONIG_SYN_OP2_ESC_H_XDIGIT","","",null,null],[17,"ONIG_SYN_OP2_INEFFECTIVE_ESCAPE","","",null,null],[17,"ONIG_SYN_OP2_QMARK_LPAREN_IF_ELSE","","",null,null],[17,"ONIG_SYN_OP2_ESC_CAPITAL_K_KEEP","","",null,null],[17,"ONIG_SYN_OP2_ESC_CAPITAL_R_GENERAL_NEWLINE","","",null,null],[17,"ONIG_SYN_OP2_ESC_CAPITAL_N_O_SUPER_DOT","","",null,null],[17,"ONIG_SYN_OP2_QMARK_TILDE_ABSENT_GROUP","","",null,null],[17,"ONIG_SYN_OP2_ESC_X_Y_GRAPHEME_CLUSTER","","",null,null],[17,"ONIG_SYN_OP2_ESC_X_Y_TEXT_SEGMENT","","",null,null],[17,"ONIG_SYN_OP2_QMARK_PERL_SUBEXP_CALL","","",null,null],[17,"ONIG_SYN_OP2_QMARK_BRACE_CALLOUT_CONTENTS","","",null,null],[17,"ONIG_SYN_OP2_ASTERISK_CALLOUT_NAME","","",null,null],[17,"ONIG_SYN_OP2_OPTION_ONIGURUMA","","",null,null],[17,"ONIG_SYN_CONTEXT_INDEP_ANCHORS","","",null,null],[17,"ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS","","",null,null],[17,"ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS","","",null,null],[17,"ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP","","",null,null],[17,"ONIG_SYN_ALLOW_INVALID_INTERVAL","","",null,null],[17,"ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV","","",null,null],[17,"ONIG_SYN_STRICT_CHECK_BACKREF","","",null,null],[17,"ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND","","",null,null],[17,"ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP","","",null,null],[17,"ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME","","",null,null],[17,"ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY","","",null,null],[17,"ONIG_SYN_ISOLATED_OPTION_CONTINUE_BRANCH","","",null,null],[17,"ONIG_SYN_VARIABLE_LEN_LOOK_BEHIND","","",null,null],[17,"ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC","","",null,null],[17,"ONIG_SYN_BACKSLASH_ESCAPE_IN_CC","","",null,null],[17,"ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC","","",null,null],[17,"ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC","","",null,null],[17,"ONIG_SYN_ALLOW_INVALID_CODE_END_OF_RANGE_IN_CC","","",null,null],[17,"ONIG_SYN_WARN_CC_OP_NOT_ESCAPED","","",null,null],[17,"ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT","","",null,null],[17,"ONIG_META_CHAR_ESCAPE","","",null,null],[17,"ONIG_META_CHAR_ANYCHAR","","",null,null],[17,"ONIG_META_CHAR_ANYTIME","","",null,null],[17,"ONIG_META_CHAR_ZERO_OR_ONE_TIME","","",null,null],[17,"ONIG_META_CHAR_ONE_OR_MORE_TIME","","",null,null],[17,"ONIG_META_CHAR_ANYCHAR_ANYTIME","","",null,null],[17,"ONIG_INEFFECTIVE_META_CHAR","","",null,null],[17,"ONIG_NORMAL","","",null,null],[17,"ONIG_MISMATCH","","",null,null],[17,"ONIG_NO_SUPPORT_CONFIG","","",null,null],[17,"ONIG_ABORT","","",null,null],[17,"ONIGERR_MEMORY","","",null,null],[17,"ONIGERR_TYPE_BUG","","",null,null],[17,"ONIGERR_PARSER_BUG","","",null,null],[17,"ONIGERR_STACK_BUG","","",null,null],[17,"ONIGERR_UNDEFINED_BYTECODE","","",null,null],[17,"ONIGERR_UNEXPECTED_BYTECODE","","",null,null],[17,"ONIGERR_MATCH_STACK_LIMIT_OVER","","",null,null],[17,"ONIGERR_PARSE_DEPTH_LIMIT_OVER","","",null,null],[17,"ONIGERR_RETRY_LIMIT_IN_MATCH_OVER","","",null,null],[17,"ONIGERR_RETRY_LIMIT_IN_SEARCH_OVER","","",null,null],[17,"ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED","","",null,null],[17,"ONIGERR_SPECIFIED_ENCODING_CANT_CONVERT_TO_WIDE_CHAR","","",null,null],[17,"ONIGERR_FAIL_TO_INITIALIZE","","",null,null],[17,"ONIGERR_INVALID_ARGUMENT","","",null,null],[17,"ONIGERR_END_PATTERN_AT_LEFT_BRACE","","",null,null],[17,"ONIGERR_END_PATTERN_AT_LEFT_BRACKET","","",null,null],[17,"ONIGERR_EMPTY_CHAR_CLASS","","",null,null],[17,"ONIGERR_PREMATURE_END_OF_CHAR_CLASS","","",null,null],[17,"ONIGERR_END_PATTERN_AT_ESCAPE","","",null,null],[17,"ONIGERR_END_PATTERN_AT_META","","",null,null],[17,"ONIGERR_END_PATTERN_AT_CONTROL","","",null,null],[17,"ONIGERR_META_CODE_SYNTAX","","",null,null],[17,"ONIGERR_CONTROL_CODE_SYNTAX","","",null,null],[17,"ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE","","",null,null],[17,"ONIGERR_CHAR_CLASS_VALUE_AT_START_OF_RANGE","","",null,null],[17,"ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS","","",null,null],[17,"ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED","","",null,null],[17,"ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID","","",null,null],[17,"ONIGERR_NESTED_REPEAT_OPERATOR","","",null,null],[17,"ONIGERR_UNMATCHED_CLOSE_PARENTHESIS","","",null,null],[17,"ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS","","",null,null],[17,"ONIGERR_END_PATTERN_IN_GROUP","","",null,null],[17,"ONIGERR_UNDEFINED_GROUP_OPTION","","",null,null],[17,"ONIGERR_INVALID_POSIX_BRACKET_TYPE","","",null,null],[17,"ONIGERR_INVALID_LOOK_BEHIND_PATTERN","","",null,null],[17,"ONIGERR_INVALID_REPEAT_RANGE_PATTERN","","",null,null],[17,"ONIGERR_TOO_BIG_NUMBER","","",null,null],[17,"ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE","","",null,null],[17,"ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE","","",null,null],[17,"ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS","","",null,null],[17,"ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE","","",null,null],[17,"ONIGERR_TOO_MANY_MULTI_BYTE_RANGES","","",null,null],[17,"ONIGERR_TOO_SHORT_MULTI_BYTE_STRING","","",null,null],[17,"ONIGERR_TOO_BIG_BACKREF_NUMBER","","",null,null],[17,"ONIGERR_INVALID_BACKREF","","",null,null],[17,"ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED","","",null,null],[17,"ONIGERR_TOO_MANY_CAPTURES","","",null,null],[17,"ONIGERR_TOO_LONG_WIDE_CHAR_VALUE","","",null,null],[17,"ONIGERR_EMPTY_GROUP_NAME","","",null,null],[17,"ONIGERR_INVALID_GROUP_NAME","","",null,null],[17,"ONIGERR_INVALID_CHAR_IN_GROUP_NAME","","",null,null],[17,"ONIGERR_UNDEFINED_NAME_REFERENCE","","",null,null],[17,"ONIGERR_UNDEFINED_GROUP_REFERENCE","","",null,null],[17,"ONIGERR_MULTIPLEX_DEFINED_NAME","","",null,null],[17,"ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL","","",null,null],[17,"ONIGERR_NEVER_ENDING_RECURSION","","",null,null],[17,"ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY","","",null,null],[17,"ONIGERR_INVALID_CHAR_PROPERTY_NAME","","",null,null],[17,"ONIGERR_INVALID_IF_ELSE_SYNTAX","","",null,null],[17,"ONIGERR_INVALID_ABSENT_GROUP_PATTERN","","",null,null],[17,"ONIGERR_INVALID_ABSENT_GROUP_GENERATOR_PATTERN","","",null,null],[17,"ONIGERR_INVALID_CALLOUT_PATTERN","","",null,null],[17,"ONIGERR_INVALID_CALLOUT_NAME","","",null,null],[17,"ONIGERR_UNDEFINED_CALLOUT_NAME","","",null,null],[17,"ONIGERR_INVALID_CALLOUT_BODY","","",null,null],[17,"ONIGERR_INVALID_CALLOUT_TAG_NAME","","",null,null],[17,"ONIGERR_INVALID_CALLOUT_ARG","","",null,null],[17,"ONIGERR_INVALID_CODE_POINT_VALUE","","",null,null],[17,"ONIGERR_INVALID_WIDE_CHAR_VALUE","","",null,null],[17,"ONIGERR_TOO_BIG_WIDE_CHAR_VALUE","","",null,null],[17,"ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION","","",null,null],[17,"ONIGERR_INVALID_COMBINATION_OF_OPTIONS","","",null,null],[17,"ONIGERR_TOO_MANY_USER_DEFINED_OBJECTS","","",null,null],[17,"ONIGERR_TOO_LONG_PROPERTY_NAME","","",null,null],[17,"ONIGERR_LIBRARY_IS_NOT_INITIALIZED","","",null,null],[17,"ONIG_MAX_CAPTURE_HISTORY_GROUP","","",null,null],[17,"ONIG_TRAVERSE_CALLBACK_AT_FIRST","","",null,null],[17,"ONIG_TRAVERSE_CALLBACK_AT_LAST","","",null,null],[17,"ONIG_TRAVERSE_CALLBACK_AT_BOTH","","",null,null],[17,"ONIG_REGION_NOTPOS","","",null,null],[17,"ONIG_CHAR_TABLE_SIZE","","",null,null],[17,"ONIG_NON_NAME_ID","","",null,null],[17,"ONIG_NON_CALLOUT_NUM","","",null,null],[17,"ONIG_CALLOUT_MAX_ARGS_NUM","","",null,null],[17,"ONIG_CALLOUT_DATA_SLOT_NUM","","",null,null],[6,"OnigCodePoint","","",null,null],[6,"OnigUChar","","",null,null],[6,"OnigCtype","","",null,null],[6,"OnigLen","","",null,null],[6,"OnigCaseFoldType","","",null,null],[3,"OnigCaseFoldCodeItem","","",null,null],[12,"byte_len","","",0,null],[12,"code_len","","",0,null],[12,"code","","",0,null],[3,"OnigMetaCharTableType","","",null,null],[12,"esc","","",1,null],[12,"anychar","","",1,null],[12,"anytime","","",1,null],[12,"zero_or_one_time","","",1,null],[12,"one_or_more_time","","",1,null],[12,"anychar_anytime","","",1,null],[6,"OnigApplyAllCaseFoldFunc","","",null,null],[3,"OnigEncodingTypeST","","",null,null],[12,"mbc_enc_len","","",2,null],[12,"name","","",2,null],[12,"max_enc_len","","",2,null],[12,"min_enc_len","","",2,null],[12,"is_mbc_newline","","",2,null],[12,"mbc_to_code","","",2,null],[12,"code_to_mbclen","","",2,null],[12,"code_to_mbc","","",2,null],[12,"mbc_case_fold","","",2,null],[12,"apply_all_case_fold","","",2,null],[12,"get_case_fold_codes_by_str","","",2,null],[12,"property_name_to_ctype","","",2,null],[12,"is_code_ctype","","",2,null],[12,"get_ctype_code_range","","",2,null],[12,"left_adjust_char_head","","",2,null],[12,"is_allowed_reverse_match","","",2,null],[12,"init","","",2,null],[12,"is_initialized","","",2,null],[12,"is_valid_mbc_string","","",2,null],[12,"flag","","",2,null],[12,"sb_range","","",2,null],[12,"index","","",2,null],[6,"OnigEncodingType","","",null,null],[6,"OnigEncoding","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_NEWLINE","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_ALPHA","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_BLANK","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_CNTRL","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_DIGIT","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_GRAPH","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_LOWER","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_PRINT","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_PUNCT","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_SPACE","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_UPPER","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_XDIGIT","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_WORD","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_ALNUM","","",null,null],[17,"OnigEncCtype_ONIGENC_CTYPE_ASCII","","",null,null],[6,"OnigEncCtype","","",null,null],[6,"OnigOptionType","","",null,null],[3,"OnigSyntaxType","","",null,null],[12,"op","","",3,null],[12,"op2","","",3,null],[12,"behavior","","",3,null],[12,"options","","",3,null],[12,"meta_char_table","","",3,null],[3,"OnigCaptureTreeNodeStruct","","",null,null],[12,"group","","",4,null],[12,"beg","","",4,null],[12,"end","","",4,null],[12,"allocated","","",4,null],[12,"num_childs","","",4,null],[12,"childs","","",4,null],[6,"OnigCaptureTreeNode","","",null,null],[3,"re_registers","","",null,null],[12,"allocated","","",5,null],[12,"num_regs","","",5,null],[12,"beg","","",5,null],[12,"end","","",5,null],[12,"history_root","","",5,null],[6,"OnigRegion","","",null,null],[3,"OnigErrorInfo","","",null,null],[12,"enc","","",6,null],[12,"par","","",6,null],[12,"par_end","","",6,null],[3,"OnigRepeatRange","","",null,null],[12,"lower","","",7,null],[12,"upper","","",7,null],[6,"OnigWarnFunc","","",null,null],[3,"re_pattern_buffer","","",null,null],[6,"OnigRegexType","","",null,null],[6,"OnigRegex","","",null,null],[6,"regex_t","","",null,null],[3,"OnigRegSetStruct","","",null,null],[6,"OnigRegSet","","",null,null],[17,"OnigRegSetLead_ONIG_REGSET_POSITION_LEAD","","",null,null],[17,"OnigRegSetLead_ONIG_REGSET_REGEX_LEAD","","",null,null],[17,"OnigRegSetLead_ONIG_REGSET_PRIORITY_TO_REGEX_ORDER","","",null,null],[6,"OnigRegSetLead","","",null,null],[3,"OnigCompileInfo","","",null,null],[12,"num_of_elements","","",8,null],[12,"pattern_enc","","",8,null],[12,"target_enc","","",8,null],[12,"syntax","","",8,null],[12,"option","","",8,null],[12,"case_fold_flag","","",8,null],[17,"OnigCalloutIn_ONIG_CALLOUT_IN_PROGRESS","","",null,null],[17,"OnigCalloutIn_ONIG_CALLOUT_IN_RETRACTION","","",null,null],[6,"OnigCalloutIn","","",null,null],[17,"OnigCalloutOf_ONIG_CALLOUT_OF_CONTENTS","","",null,null],[17,"OnigCalloutOf_ONIG_CALLOUT_OF_NAME","","",null,null],[6,"OnigCalloutOf","","",null,null],[17,"OnigCalloutType_ONIG_CALLOUT_TYPE_SINGLE","","",null,null],[17,"OnigCalloutType_ONIG_CALLOUT_TYPE_START_CALL","","",null,null],[17,"OnigCalloutType_ONIG_CALLOUT_TYPE_BOTH_CALL","","",null,null],[17,"OnigCalloutType_ONIG_CALLOUT_TYPE_START_MARK_END_CALL","","",null,null],[6,"OnigCalloutType","","",null,null],[3,"OnigCalloutArgsStruct","","",null,null],[6,"OnigCalloutArgs","","",null,null],[6,"OnigCalloutFunc","","",null,null],[17,"OnigCalloutResult_ONIG_CALLOUT_FAIL","","",null,null],[17,"OnigCalloutResult_ONIG_CALLOUT_SUCCESS","","",null,null],[6,"OnigCalloutResult","","",null,null],[17,"OnigType_ONIG_TYPE_VOID","","",null,null],[17,"OnigType_ONIG_TYPE_LONG","","",null,null],[17,"OnigType_ONIG_TYPE_CHAR","","",null,null],[17,"OnigType_ONIG_TYPE_STRING","","",null,null],[17,"OnigType_ONIG_TYPE_POINTER","","",null,null],[17,"OnigType_ONIG_TYPE_TAG","","",null,null],[6,"OnigType","","",null,null],[19,"OnigValue","","",null,null],[12,"l","","",9,null],[12,"c","","",9,null],[12,"s","","",9,null],[12,"p","","",9,null],[12,"tag","","",9,null],[3,"OnigValue__bindgen_ty_1","","",null,null],[12,"start","","",10,null],[12,"end","","",10,null],[3,"OnigMatchParamStruct","","",null,null],[6,"OnigMatchParam","","",null,null],[6,"OnigSyntaxBehavior","","",null,null],[6,"OnigSyntaxOp","","",null,null],[6,"OnigSyntaxOp2","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"clone","","",0,[[],["onigcasefoldcodeitem",3]]],[11,"clone","","",1,[[],["onigmetachartabletype",3]]],[11,"clone","","",2,[[],["onigencodingtypest",3]]],[11,"clone","","",3,[[],["onigsyntaxtype",3]]],[11,"clone","","",4,[[],["onigcapturetreenodestruct",3]]],[11,"clone","","",5,[[],["re_registers",3]]],[11,"clone","","",6,[[],["onigerrorinfo",3]]],[11,"clone","","",7,[[],["onigrepeatrange",3]]],[11,"clone","","",11,[[],["re_pattern_buffer",3]]],[11,"clone","","",12,[[],["onigregsetstruct",3]]],[11,"clone","","",8,[[],["onigcompileinfo",3]]],[11,"clone","","",13,[[],["onigcalloutargsstruct",3]]],[11,"clone","","",9,[[],["onigvalue",19]]],[11,"clone","","",10,[[],["onigvalue__bindgen_ty_1",3]]],[11,"clone","","",14,[[],["onigmatchparamstruct",3]]],[11,"eq","","",0,[[["onigcasefoldcodeitem",3]]]],[11,"ne","","",0,[[["onigcasefoldcodeitem",3]]]],[11,"eq","","",1,[[["onigmetachartabletype",3]]]],[11,"ne","","",1,[[["onigmetachartabletype",3]]]],[11,"eq","","",2,[[["onigencodingtypest",3]]]],[11,"ne","","",2,[[["onigencodingtypest",3]]]],[11,"eq","","",3,[[["onigsyntaxtype",3]]]],[11,"ne","","",3,[[["onigsyntaxtype",3]]]],[11,"eq","","",4,[[["onigcapturetreenodestruct",3]]]],[11,"ne","","",4,[[["onigcapturetreenodestruct",3]]]],[11,"eq","","",5,[[["re_registers",3]]]],[11,"ne","","",5,[[["re_registers",3]]]],[11,"eq","","",6,[[["onigerrorinfo",3]]]],[11,"ne","","",6,[[["onigerrorinfo",3]]]],[11,"eq","","",7,[[["onigrepeatrange",3]]]],[11,"ne","","",7,[[["onigrepeatrange",3]]]],[11,"eq","","",8,[[["onigcompileinfo",3]]]],[11,"ne","","",8,[[["onigcompileinfo",3]]]],[11,"eq","","",10,[[["onigvalue__bindgen_ty_1",3]]]],[11,"ne","","",10,[[["onigvalue__bindgen_ty_1",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]]],"p":[[3,"OnigCaseFoldCodeItem"],[3,"OnigMetaCharTableType"],[3,"OnigEncodingTypeST"],[3,"OnigSyntaxType"],[3,"OnigCaptureTreeNodeStruct"],[3,"re_registers"],[3,"OnigErrorInfo"],[3,"OnigRepeatRange"],[3,"OnigCompileInfo"],[19,"OnigValue"],[3,"OnigValue__bindgen_ty_1"],[3,"re_pattern_buffer"],[3,"OnigRegSetStruct"],[3,"OnigCalloutArgsStruct"],[3,"OnigMatchParamStruct"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[19,"vec512_storage","","",null,null],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[]]],[10,"insert","","",7,[[]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[]]],[10,"insert","","",8,[[]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[]]],[10,"shuffle2301","","",9,[[]]],[10,"shuffle3012","","",9,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[]]],[10,"shuffle_lane_words2301","","",10,[[]]],[10,"shuffle_lane_words3012","","",10,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[]]],[10,"swap2","","",11,[[]]],[10,"swap4","","",11,[[]]],[10,"swap8","","",11,[[]]],[10,"swap16","","",11,[[]]],[10,"swap32","","",11,[[]]],[10,"swap64","","",11,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]],[10,"instance","","",14,[[]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[]]],[10,"unsafe_read_be","","",16,[[]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",27,[[]]],[11,"instance","","",28,[[]]],[11,"unpack","","",29,[[["vec128_storage",19]]]],[11,"eq","","",29,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[],["yess3",3]]],[11,"clone","","",18,[[],["nos3",3]]],[11,"clone","","",19,[[],["yess4",3]]],[11,"clone","","",20,[[],["nos4",3]]],[11,"clone","","",21,[[],["yesa1",3]]],[11,"clone","","",22,[[],["noa1",3]]],[11,"clone","","",23,[[],["yesa2",3]]],[11,"clone","","",24,[[],["noa2",3]]],[11,"clone","","",25,[[],["yesni",3]]],[11,"clone","","",26,[[],["noni",3]]],[11,"clone","","",27,[[],["ssemachine",3]]],[11,"clone","","",28,[[],["avx2machine",3]]],[11,"clone","","",29,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",29,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[0,"token_stream","proc_macro2","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[11,"new","","Returns an empty `TokenStream` containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",0,[[]]],[3,"Span","","A region of source code, along with macro expansion…",null,null],[11,"call_site","","The span of the invocation of the current procedural macro.",1,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural…",1,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information…",1,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior…",1,[[["span",3]],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",1,[[],["span",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",1,[[["span",3]],[["span",3],["option",4]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",2,null],[13,"Ident","","An identifier.",2,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",2,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",2,null],[11,"span","","Returns the span of this tree, delegating to the `span`…",2,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",2,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",3,null],[13,"Brace","","`{ ... }`",3,null],[13,"Bracket","","`[ ... ]`",3,null],[13,"None","","`Ø ... Ø`",3,null],[11,"new","","Creates a new `Group` with the given delimiter and token…",4,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",4,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",4,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",4,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",4,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",4,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",4,[[["span",3]]]],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",5,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",5,null],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span",3]]]],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","proc_macro2::token_stream","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",2,[[["group",3]],["tokentree",4]]],[11,"from","","",2,[[["ident",3]],["tokentree",4]]],[11,"from","","",2,[[["punct",3]],["tokentree",4]]],[11,"from","","",2,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",9,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["tokentree",4]]],[11,"clone","","",4,[[],["group",3]]],[11,"clone","","",3,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",5,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",9,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",3,[[["delimiter",4]]]],[11,"eq","","",5,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",0,[[],[["lexerror",3],["result",4],["tokenstream",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"],[3,"LexError"]]},\
"proc_macro_error":{"doc":"proc-macro-errorThis crate aims to make error reporting in…","i":[[23,"proc_macro_error","proc_macro_error","",null,null],[0,"dummy","","Facility to emit dummy implementations (or whatever) in…",null,null],[5,"set_dummy","proc_macro_error::dummy","Sets dummy token stream which will be appended to…",null,[[["tokenstream",3]],[["tokenstream",3],["option",4]]]],[5,"append_dummy","","Same as [`set_dummy`] but, instead of resetting, appends…",null,[[["tokenstream",3]]]],[3,"Diagnostic","proc_macro_error","Represents a single diagnostic message",null,null],[8,"DiagnosticExt","","A collection of methods that do not exist in…",null,null],[10,"spanned_range","","Create a new diagnostic message that points to the…",0,[[["level",4],["string",3],["spanrange",3]]]],[10,"span_range_error","","Add another error message to self such that it will be…",0,[[["string",3],["spanrange",3]]]],[10,"span_range_help","","Attach a \\\"help\\\" note to your main message, the note will…",0,[[["string",3],["spanrange",3]]]],[10,"span_range_note","","Attach a note to your main message, the note will have…",0,[[["string",3],["spanrange",3]]]],[4,"Level","","Represents a diagnostic level",null,null],[13,"Error","","",1,null],[13,"Warning","","",1,null],[3,"SpanRange","","",null,null],[12,"first","","",2,null],[12,"last","","",2,null],[11,"single_span","","Create a range with the `first` and `last` spans being the…",2,[[["span",3]]]],[11,"call_site","","Create a `SpanRange` resolving at call site.",2,[[]]],[11,"from_tokens","","Construct span range from a `TokenStream`. This method…",2,[[["totokens",8]]]],[11,"join_range","","Join two span ranges. The resulting range will start at…",2,[[["spanrange",3]]]],[11,"collapse","","Collapse the range into single span, preserving as much…",2,[[],["span",3]]],[8,"ResultExt","","This traits expands `Result<T, Into<Diagnostic>>` with…",null,null],[16,"Ok","","",3,null],[10,"unwrap_or_abort","","Behaves like `Result::unwrap`: if self is `Ok` yield the…",3,[[]]],[10,"expect_or_abort","","Behaves like `Result::expect`: if self is `Ok` yield the…",3,[[]]],[8,"OptionExt","","This traits expands `Option` with some handy shortcuts.",null,null],[16,"Some","","",4,null],[10,"expect_or_abort","","Behaves like `Option::expect`: if self is `Some` yield the…",4,[[]]],[5,"abort_if_dirty","","Abort macro execution and display all the emitted errors,…",null,[[]]],[14,"diagnostic","","Build `Diagnostic` instance from provided arguments.",null,null],[14,"abort","","Abort proc-macro execution right now and display the error.",null,null],[14,"abort_call_site","","Shortcut for `abort!(Span::call_site(), msg...)`. This…",null,null],[14,"emit_error","","Emit an error while not aborting the proc-macro right away.",null,null],[14,"emit_call_site_error","","Shortcut for `emit_error!(Span::call_site(), ...)`. This…",null,null],[14,"emit_warning","","Emit a warning. Warnings are not errors and compilation…",null,null],[14,"emit_call_site_warning","","Shortcut for `emit_warning!(Span::call_site(), ...)`.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"spanned_range","","",5,[[["level",4],["string",3],["spanrange",3]]]],[11,"span_range_error","","",5,[[["string",3],["spanrange",3]]]],[11,"span_range_help","","",5,[[["string",3],["spanrange",3]]]],[11,"span_range_note","","",5,[[["string",3],["spanrange",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"clone","","",2,[[],["spanrange",3]]],[11,"eq","","",1,[[["level",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"new","","Create a new diagnostic message that points to…",5,[[["level",4],["string",3]]]],[11,"spanned","","Create a new diagnostic message that points to the `span`",5,[[["level",4],["span",3],["string",3]]]],[11,"span_error","","Add another error message to self such that it will be…",5,[[["span",3],["string",3]]]],[11,"span_help","","Attach a \\\"help\\\" note to your main message, the note will…",5,[[["span",3],["string",3]]]],[11,"help","","Attach a \\\"help\\\" note to your main message.",5,[[["string",3]]]],[11,"span_note","","Attach a note to your main message, the note will have…",5,[[["span",3],["string",3]]]],[11,"note","","Attach a note to your main message",5,[[["string",3]]]],[11,"message","","The message of main warning/error (no notes attached)",5,[[]]],[11,"abort","","Abort the proc-macro\'s execution and display the diagnostic.",5,[[]]],[11,"emit","","Display the diagnostic while not aborting macro execution.",5,[[]]]],"p":[[8,"DiagnosticExt"],[4,"Level"],[3,"SpanRange"],[8,"ResultExt"],[8,"OptionExt"],[3,"Diagnostic"]]},\
"proc_macro_error_attr":{"doc":"This is `#[proc_macro_error]` attribute to be used with…","i":[[23,"proc_macro_error","proc_macro_error_attr","",null,null]],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[]]],[10,"next_u64","","Return the next random `u64`.",0,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",1,[[]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[0,"uniform","rand::distributions","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[11,"new","","Create a new `Uniform` instance which samples uniformly…",2,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",2,[[],["uniform",3]]],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",3,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",4,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",4,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",4,[[]]],[10,"sample","","Sample a value.",4,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",4,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",5,[[]]],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[0,"weighted","rand::distributions","Weighted index sampling",null,null],[0,"alias_method","rand::distributions::weighted","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[11,"new","","Creates a new [`WeightedIndex`].",6,[[["vec",3]],[["weightederror",4],["result",4]]]],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",7,null],[18,"ZERO","","Element of `Self` equivalent to 0.",7,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",7,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",7,[[]]],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",8,[[],[["result",4],["weightederror",4],["weightedindex",3]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",8,[[],[["weightederror",4],["result",4]]]],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",9,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",9,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",9,null],[13,"TooMany","","Too many weights are provided (length greater than…",9,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",10,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[8,"Distribution","","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",11,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",11,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements `BlockRngCore`,…",null,null],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",12,[[]]],[3,"EntropyRng","rand::rngs","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"seq","rand","Sequence-related functionality",null,null],[0,"index","rand::seq","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[11,"len","","Returns the number of indices",13,[[]]],[11,"is_empty","","Returns `true` if the length is 0.",13,[[]]],[11,"index","","Return the value at the given `index`.",13,[[]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",13,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",13,[[],["indexveciter",4]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",13,[[],["indexvecintoiter",4]]],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[],["indexvec",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",14,null],[10,"choose","","Returns a reference to one random element of the slice, or…",14,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",14,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",14,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to `choose`, but where the likelihood of each…",14,[[],[["weightederror",4],["result",4]]]],[10,"choose_weighted_mut","","Similar to `choose_mut`, but where the likelihood of each…",14,[[],[["weightederror",4],["result",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",14,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",14,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",15,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",15,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",15,[[],["vec",3]]],[3,"SliceChooseIter","","An iterator over multiple slice elements.",null,null],[5,"thread_rng","rand","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[8,"Rng","","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the `Standard`…",16,[[]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",16,[[],["sampleuniform",8]]],[11,"sample","","Sample a new value, using the given distribution.",16,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",16,[[],["distiter",3]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",16,[[]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",16,[[],[["error",3],["result",4]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",16,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",16,[[]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",17,[[]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",17,[[]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","rand::distributions","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","rand::distributions::uniform","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","rand::distributions","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","rand::distributions::weighted::alias_method","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","rand::distributions::weighted","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","rand::distributions","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","rand::rngs","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","rand::rngs::adapter","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","rand::rngs","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","rand::rngs::mock","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","rand::rngs","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","rand::seq::index","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","rand::seq","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"next_u32","rand::rngs","",47,[[]]],[11,"next_u64","","",47,[[]]],[11,"fill_bytes","","",47,[[]]],[11,"try_fill_bytes","","",47,[[],[["result",4],["error",3]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","","",0,[[],[["error",3],["result",4]]]],[11,"source","","",18,[[],[["option",4],["error",8]]]],[11,"from","","",18,[[["nonzerou32",3]],["error",3]]],[11,"from","","",18,[[["error",3]],["error",3]]],[11,"default","rand::rngs","",47,[[],["osrng",3]]],[11,"clone","","",47,[[],["osrng",3]]],[11,"new","rand::distributions::uniform","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",37,[[]]],[11,"new_inclusive","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample_single","","",37,[[]]],[11,"new","","",37,[[]]],[11,"new_inclusive","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample_single","","",37,[[]]],[11,"new","","",38,[[]]],[11,"new_inclusive","","",38,[[]]],[11,"sample","","",38,[[],["duration",3]]],[11,"sample","rand::distributions","",19,[[]]],[11,"sample","","",20,[[]]],[11,"sample","","",21,[[]]],[11,"sample","","",22,[[],["vec",3]]],[11,"sample","","",23,[[]]],[11,"sample","","",24,[[]]],[11,"sample","","",25,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",27,[[]]],[11,"sample","","",28,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",31,[[]]],[11,"sample","","",32,[[]]],[11,"sample","","",33,[[]]],[11,"sample","","",34,[[]]],[11,"sample","","",35,[[]]],[11,"sample","","",2,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",41,[[]]],[11,"sample","rand::distributions::weighted::alias_method","",6,[[]]],[11,"sample","rand::distributions::weighted","",8,[[]]],[11,"sample","rand::distributions","",46,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["nonzerou8",3]]],[11,"sample","","",46,[[],["nonzerou16",3]]],[11,"sample","","",46,[[],["nonzerou32",3]]],[11,"sample","","",46,[[],["nonzerou64",3]]],[11,"sample","","",46,[[],["nonzerou128",3]]],[11,"sample","","",46,[[],["nonzerousize",3]]],[11,"sample","","",46,[[]]],[11,"sample","","",44,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["option",4]]],[11,"sample","","",46,[[],["wrapping",3]]],[11,"from","","",2,[[["range",3]],["uniform",3]]],[11,"from","","",2,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",13,[[["vec",3]]]],[11,"from","","",13,[[["vec",3]]]],[11,"len","rand::seq","",56,[[]]],[11,"next","rand::distributions","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","rand::seq::index","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"next","","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"next","rand::seq","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"clone","rand::distributions","",19,[[],["bernoulli",3]]],[11,"clone","","",10,[[],["bernoullierror",4]]],[11,"clone","","",20,[[],["binomial",3]]],[11,"clone","","",21,[[],["cauchy",3]]],[11,"clone","","",22,[[],["dirichlet",3]]],[11,"clone","","",23,[[],["exp1",3]]],[11,"clone","","",24,[[],["exp",3]]],[11,"clone","","",25,[[],["gamma",3]]],[11,"clone","","",26,[[],["chisquared",3]]],[11,"clone","","",27,[[],["fisherf",3]]],[11,"clone","","",28,[[],["studentt",3]]],[11,"clone","","",29,[[],["beta",3]]],[11,"clone","","",30,[[],["standardnormal",3]]],[11,"clone","","",31,[[],["normal",3]]],[11,"clone","","",32,[[],["lognormal",3]]],[11,"clone","","",33,[[],["pareto",3]]],[11,"clone","","",34,[[],["poisson",3]]],[11,"clone","","",35,[[],["triangular",3]]],[11,"clone","","",2,[[],["uniform",3]]],[11,"clone","rand::distributions::uniform","",36,[[],["uniformint",3]]],[11,"clone","","",37,[[],["uniformfloat",3]]],[11,"clone","","",38,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",39,[[],["unitcircle",3]]],[11,"clone","","",40,[[],["unitspheresurface",3]]],[11,"clone","","",41,[[],["weibull",3]]],[11,"clone","rand::distributions::weighted::alias_method","",6,[[]]],[11,"clone","rand::distributions::weighted","",8,[[],["weightedindex",3]]],[11,"clone","","",9,[[],["weightederror",4]]],[11,"clone","rand::distributions","",42,[[],["openclosed01",3]]],[11,"clone","","",43,[[],["open01",3]]],[11,"clone","","",46,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",50,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",12,[[],["steprng",3]]],[11,"clone","rand::rngs","",52,[[],["stdrng",3]]],[11,"clone","","",53,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",13,[[],["indexvec",4]]],[11,"clone","","",55,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",51,[[]]],[11,"default","","",53,[[],["threadrng",3]]],[11,"eq","rand::distributions","",10,[[["bernoullierror",4]]]],[11,"eq","rand::distributions::weighted","",9,[[["weightederror",4]]]],[11,"eq","rand::seq::index","",13,[[["indexvec",4]]]],[11,"fmt","rand::distributions","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",51,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",56,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",10,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",9,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",49,[[["formatter",3]],["result",6]]],[11,"source","","",49,[[],[["option",4],["error",8]]]],[11,"next_u32","","",48,[[]]],[11,"next_u64","","",48,[[]]],[11,"fill_bytes","","",48,[[]]],[11,"try_fill_bytes","","",48,[[],[["error",3],["result",4]]]],[11,"next_u32","","",50,[[]]],[11,"next_u64","","",50,[[]]],[11,"fill_bytes","","",50,[[]]],[11,"try_fill_bytes","","",50,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",51,[[]]],[11,"next_u64","","",51,[[]]],[11,"fill_bytes","","",51,[[]]],[11,"try_fill_bytes","","",51,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs::mock","",12,[[]]],[11,"next_u64","","",12,[[]]],[11,"fill_bytes","","",12,[[]]],[11,"try_fill_bytes","","",12,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",52,[[]]],[11,"next_u64","","",52,[[]]],[11,"fill_bytes","","",52,[[]]],[11,"try_fill_bytes","","",52,[[],[["error",3],["result",4]]]],[11,"next_u32","","",53,[[]]],[11,"next_u64","","",53,[[]]],[11,"fill_bytes","","",53,[[]]],[11,"try_fill_bytes","","",53,[[],[["error",3],["result",4]]]],[11,"from_seed","","",52,[[]]],[11,"from_rng","","",52,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",18,[[],["error",3]]],[11,"inner","","Reference the inner error (`std` only)",18,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",18,[[],[["global",3],["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",18,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",18,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",18,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",18,[[],[["nonzerou32",3],["option",4]]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",19,[[],[["result",4],["bernoullierror",4],["bernoulli",3]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",19,[[],[["result",4],["bernoullierror",4],["bernoulli",3]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",20,[[],["binomial",3]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",21,[[],["cauchy",3]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",22,[[["into",8],["vec",3]],["dirichlet",3]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",22,[[],["dirichlet",3]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",24,[[],["exp",3]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",25,[[],["gamma",3]]],[11,"new","","Create a new chi-squared distribution with…",26,[[],["chisquared",3]]],[11,"new","","Create a new `FisherF` distribution, with the given…",27,[[],["fisherf",3]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",28,[[],["studentt",3]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",29,[[],["beta",3]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",31,[[],["normal",3]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",32,[[],["lognormal",3]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",33,[[],["pareto",3]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",34,[[],["poisson",3]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",35,[[],["triangular",3]]],[11,"new","","Construct a new `UnitCircle` distribution.",39,[[],["unitcircle",3]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",40,[[],["unitspheresurface",3]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",41,[[],["weibull",3]]],[11,"new","rand::rngs::adapter","Create a new `ReadRng` from a `Read`.",48,[[],["readrng",3]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",50,[[]]],[11,"reseed","","Reseed the internal PRNG.",50,[[],[["error",3],["result",4]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",51,[[]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[3,"Uniform"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"WeightedIndex"],[8,"Weight"],[3,"WeightedIndex"],[4,"WeightedError"],[4,"BernoulliError"],[8,"Distribution"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp1"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[3,"DistIter"],[3,"Standard"],[3,"OsRng"],[3,"ReadRng"],[3,"ReadError"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StdRng"],[3,"ThreadRng"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"],[3,"SliceChooseIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[["chacha20core",3]]]],[11,"from","","",3,[[["chacha12core",3]]]],[11,"from","","",5,[[["chacha8core",3]]]],[11,"clone","","",0,[[],["chacha20core",3]]],[11,"clone","","",1,[[],["chacha20rng",3]]],[11,"clone","","",2,[[],["chacha12core",3]]],[11,"clone","","",3,[[],["chacha12rng",3]]],[11,"clone","","",4,[[],["chacha8core",3]]],[11,"clone","","",5,[[],["chacha8rng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"generate","","",0,[[]]],[11,"generate","","",2,[[]]],[11,"generate","","",4,[[]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",3,[[]]],[11,"next_u64","","",3,[[]]],[11,"fill_bytes","","",3,[[]]],[11,"try_fill_bytes","","",3,[[],[["error",3],["result",4]]]],[11,"next_u32","","",5,[[]]],[11,"next_u64","","",5,[[]]],[11,"fill_bytes","","",5,[[]]],[11,"try_fill_bytes","","",5,[[],[["error",3],["result",4]]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",2,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",5,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_stream","","Set the stream number.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",3,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",3,[[]]],[11,"set_stream","","Set the stream number.",3,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",5,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",5,[[]]],[11,"set_stream","","Set the stream number.",5,[[]]]],"p":[[3,"ChaCha20Core"],[3,"ChaCha20Rng"],[3,"ChaCha12Core"],[3,"ChaCha12Rng"],[3,"ChaCha8Core"],[3,"ChaCha8Rng"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[0,"block","rand_core","The `BlockRngCore` trait and implementation helpers",null,null],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",0,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",0,null],[10,"generate","","Generate a new block of results.",0,[[]]],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",3,[[]]],[10,"next_u64","","Return the next random `u64`.",3,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",3,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",3,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",4,null],[10,"from_seed","","Create a new PRNG using the given seed.",4,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",4,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",4,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","rand_core","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next_u32","rand_core::block","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["error",3],["result",4]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from","rand_core","",5,[[["nonzerou32",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"read","","",3,[[],[["result",4],["error",3]]]],[11,"new","","Construct from any type supporting `std::error::Error`",5,[[]]],[11,"inner","","Reference the inner error (`std` only)",5,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",5,[[],[["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",5,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",5,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",5,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",5,[[],[["nonzerou32",3],["option",4]]]]],"p":[[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"],[3,"Error"],[3,"OsRng"]]},\
"regex":{"doc":"This crate provides a library for parsing, compiling, and…","i":[[0,"bytes","regex","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",0,[[["captures",3],["vec",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",0,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",0,[[],["replacerref",3]]],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",1,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[11,"new","","Create a new regular expression builder with the given…",2,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",2,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",2,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",2,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",2,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",2,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",2,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",2,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",2,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",2,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",2,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",2,[[],["regexbuilder",3]]],[11,"new","","Create a new regular expression builder with the given…",3,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions…",3,[[],[["regexset",3],["result",4],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",3,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",3,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",3,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",3,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",3,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",3,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",3,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",3,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",3,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",3,[[],["regexsetbuilder",3]]],[11,"start","","Returns the starting byte offset of the match in the…",4,[[]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",4,[[]]],[11,"range","","Returns the range over the starting and ending byte…",4,[[],["range",3]]],[11,"as_bytes","","Returns the matched text.",4,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",5,[[],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the regex…",5,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",5,[[],[["option",4],["match",3]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",5,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",5,[[],[["option",4],["captures",3]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",5,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",5,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",5,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",5,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",5,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",5,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",5,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",5,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",5,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the…",5,[[],[["option",4],["match",3]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",5,[[["capturelocations",3]],[["option",4],["match",3]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",5,[[["capturelocations",3]],[["option",4],["match",3]]]],[11,"as_str","","Returns the original string of this regex.",5,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",5,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",5,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",5,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture…",6,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",6,[[]]],[11,"get","","Returns the match associated with the capture group at…",7,[[],[["option",4],["match",3]]]],[11,"name","","Returns the match for the capture group named `name`. If…",7,[[],[["option",4],["match",3]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",7,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",7,[[["vec",3]]]],[11,"len","","Returns the number of captured groups.",7,[[]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",0,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",0,[[],["replacerref",3]]],[11,"new","","Create a new regex set with the given regular expressions.",8,[[],[["regexset",3],["result",4],["error",4]]]],[11,"empty","","Create a new empty regex set.",8,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",8,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",8,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",8,[[]]],[11,"is_empty","","Returns `true` if this set contains no regular expressions.",8,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",8,[[]]],[11,"matched_any","","Whether this set contains any matches.",9,[[]]],[11,"matched","","Whether the regex at the given index matched.",9,[[]]],[11,"len","","The total number of regexes in the set that created these…",9,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",9,[[],["setmatchesiter",3]]],[4,"Error","regex","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",10,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",10,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",11,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",12,[[["captures",3],["string",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",12,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",12,[[],["replacerref",3]]],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[11,"from","regex::bytes","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","regex","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"replace_append","regex::bytes","",19,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",19,[[],[["option",4],["cow",4]]]],[11,"replace_append","","",1,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",1,[[],[["option",4],["cow",4]]]],[11,"replace_append","regex","",38,[[["captures",3],["string",3]]]],[11,"no_expansion","","",38,[[],[["cow",4],["option",4]]]],[11,"replace_append","","",11,[[["captures",3],["string",3]]]],[11,"no_expansion","","",11,[[],[["cow",4],["option",4]]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",27,[[],["option",4]]],[11,"next_back","regex::bytes","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"into_iter","regex","",25,[[]]],[11,"into_iter","regex::bytes","",9,[[]]],[11,"next","","",13,[[],[["option",4],["match",3]]]],[11,"next","","",14,[[],[["option",4],["captures",3]]]],[11,"next","","",15,[[],["option",4]]],[11,"next","","",16,[[],["option",4]]],[11,"next","","",17,[[],[["option",4],["option",4]]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],[["option",4],["option",4]]]],[11,"next","regex","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","regex::bytes","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","regex","",30,[[],[["option",4],["option",4]]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"next","","",32,[[],["option",4]]],[11,"next","","",35,[[],[["option",4],["option",4]]]],[11,"next","","",36,[[],[["captures",3],["option",4]]]],[11,"next","","",37,[[],[["match",3],["option",4]]]],[11,"clone","","",10,[[],["error",4]]],[11,"clone","regex::bytes","",4,[[],["match",3]]],[11,"clone","","",5,[[],["regex",3]]],[11,"clone","","",6,[[],["capturelocations",3]]],[11,"clone","","",18,[[],["subcapturematches",3]]],[11,"clone","regex","",24,[[],["regexset",3]]],[11,"clone","","",25,[[],["setmatches",3]]],[11,"clone","","",27,[[],["setmatchesiter",3]]],[11,"clone","regex::bytes","",8,[[],["regexset",3]]],[11,"clone","","",9,[[],["setmatches",3]]],[11,"clone","","",21,[[],["setmatchesiter",3]]],[11,"clone","regex","",28,[[],["match",3]]],[11,"clone","","",29,[[],["regex",3]]],[11,"clone","","",33,[[],["capturelocations",3]]],[11,"clone","","",35,[[],["subcapturematches",3]]],[11,"eq","","",10,[[["error",4]]]],[11,"ne","","",10,[[["error",4]]]],[11,"eq","regex::bytes","",4,[[["match",3]]]],[11,"ne","","",4,[[["match",3]]]],[11,"eq","regex","",28,[[["match",3]]]],[11,"ne","","",28,[[["match",3]]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",5,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",29,[[["formatter",3]],["result",6]]],[11,"index","regex::bytes","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","regex","",34,[[]]],[11,"index","","",34,[[]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",5,[[],[["result",4],["regex",3],["error",4]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",29,[[],[["result",4],["regex",3],["error",4]]]],[11,"description","","",10,[[]]],[11,"new","","Create a new regular expression builder with the given…",22,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",22,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",22,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",22,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",22,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",22,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",22,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",22,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",22,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",22,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",22,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",22,[[],["regexbuilder",3]]],[11,"new","","Create a new regular expression builder with the given…",23,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions…",23,[[],[["regexset",3],["result",4],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",23,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",23,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",23,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",23,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",23,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",23,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",23,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",23,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",23,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",23,[[],["regexsetbuilder",3]]],[11,"new","","Create a new regex set with the given regular expressions.",24,[[],[["regexset",3],["result",4],["error",4]]]],[11,"empty","","Create a new empty regex set.",24,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",24,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",24,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",24,[[]]],[11,"is_empty","","Returns `true` if this set contains no regular expressions.",24,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",24,[[]]],[11,"matched_any","","Whether this set contains any matches.",25,[[]]],[11,"matched","","Whether the regex at the given index matched.",25,[[]]],[11,"len","","The total number of regexes in the set that created these…",25,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",25,[[],["setmatchesiter",3]]],[11,"start","","Returns the starting byte offset of the match in the…",28,[[]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",28,[[]]],[11,"range","","Returns the range over the starting and ending byte…",28,[[],["range",3]]],[11,"as_str","","Returns the matched text.",28,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",29,[[],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the regex…",29,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",29,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",29,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",29,[[],[["captures",3],["option",4]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",29,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",29,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",29,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",29,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",29,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",29,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",29,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",29,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",29,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the…",29,[[],[["match",3],["option",4]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",29,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",29,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",29,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",29,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",29,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",29,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture…",33,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",33,[[]]],[11,"get","","Returns the match associated with the capture group at…",34,[[],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named `name`. If…",34,[[],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",34,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",34,[[["string",3]]]],[11,"len","","Returns the number of captured groups.",34,[[]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",12,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",12,[[],["replacerref",3]]]],"p":[[8,"Replacer"],[3,"NoExpand"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"CaptureLocations"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[3,"ReplacerRef"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","i":[[0,"ast","regex_syntax","Defines an abstract syntax for regular expressions.",null,null],[0,"parse","regex_syntax::ast","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",0,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",0,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",0,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",0,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",0,[[],["parserbuilder",3]]],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser with a default configuration.",1,[[],["parser",3]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",1,[[],[["error",3],["ast",4],["result",4]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",1,[[],[["withcomments",3],["error",3],["result",4]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",2,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",2,[[["ast",4],["write",8]],["result",6]]],[5,"visit","regex_syntax::ast","Executes an implementation of `Visitor` in constant stack…",null,[[["visitor",8],["ast",4]],["result",4]]],[8,"Visitor","","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",3,null],[16,"Err","","An error that visiting an AST might return.",3,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",3,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the AST.",3,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",3,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",3,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",3,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",3,[[["classsetbinaryop",3]],["result",4]]],[3,"Error","","An error that occurred while parsing a regular expression…",null,null],[11,"kind","","Return the type of this error.",4,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",4,[[]]],[11,"span","","Return the span at which this error occurred.",4,[[],["span",3]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",4,[[],[["option",4],["span",3]]]],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",5,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",5,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",5,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",5,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",5,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",5,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",5,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",5,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",5,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",5,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",5,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",5,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",5,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",6,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",7,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",5,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",5,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",8,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",5,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",5,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",5,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",5,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",5,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",5,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",5,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",5,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",5,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",5,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",5,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",5,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE\'s look-around is used, this…",5,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",9,null],[12,"end","","The end byte offset.",9,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",10,null],[12,"line","","The line number, starting at `1`.",10,null],[12,"column","","The approximate column number, starting at `1`.",10,null],[11,"new","","Create a new span with the given positions.",9,[[["position",3]],["span",3]]],[11,"splat","","Create a new span using the given position as the start…",9,[[["position",3]],["span",3]]],[11,"with_start","","Create a new span by replacing the starting the position…",9,[[["position",3]],["span",3]]],[11,"with_end","","Create a new span by replacing the ending the position…",9,[[["position",3]],["span",3]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",9,[[]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",9,[[]]],[11,"new","","Create a new position with the given information.",10,[[],["position",3]]],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",11,null],[12,"comments","","All comments found in the original regular expression.",11,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",12,null],[12,"comment","","The comment text, starting with the first character…",12,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",13,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",13,null],[13,"Literal","","A single character literal, which includes escape sequences.",13,null],[13,"Dot","","The \\\"any character\\\" class.",13,null],[13,"Assertion","","A single zero-width assertion.",13,null],[13,"Class","","A single character class. This includes all forms of…",13,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",13,null],[13,"Group","","A grouped regular expression.",13,null],[13,"Alternation","","An alternation of regular expressions.",13,null],[13,"Concat","","A concatenation of regular expressions.",13,null],[11,"span","","Return the span of this abstract syntax tree.",13,[[],["span",3]]],[11,"is_empty","","Return true if and only if this Ast is empty.",13,[[]]],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",14,null],[12,"asts","","The alternate regular expressions.",14,null],[11,"into_ast","","Return this alternation as an AST.",14,[[],["ast",4]]],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",15,null],[12,"asts","","The concatenation regular expressions.",15,null],[11,"into_ast","","Return this concatenation as an AST.",15,[[],["ast",4]]],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",16,null],[12,"kind","","The kind of this literal.",16,null],[12,"c","","The Unicode scalar value corresponding to this literal.",16,null],[11,"byte","","If this literal was written as a `\\\\x` hex escape, then…",16,[[],["option",4]]],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",17,null],[13,"Punctuation","","The literal is written as an escape because it is…",17,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\\\141`.",17,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",17,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",17,null],[13,"Special","","The literal is written as a specially recognized escape,…",17,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\\\a` (`\\\\x07`).",18,null],[13,"FormFeed","","Form feed, spelled `\\\\f` (`\\\\x0C`).",18,null],[13,"Tab","","Tab, spelled `\\\\t` (`\\\\x09`).",18,null],[13,"LineFeed","","Line feed, spelled `\\\\n` (`\\\\x0A`).",18,null],[13,"CarriageReturn","","Carriage return, spelled `\\\\r` (`\\\\x0D`).",18,null],[13,"VerticalTab","","Vertical tab, spelled `\\\\v` (`\\\\x0B`).",18,null],[13,"Space","","Space, spelled `\\\\ ` (`\\\\x20`). Note that this can only…",18,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\\\x` prefix. When used without brackets, this form is…",19,null],[13,"UnicodeShort","","A `\\\\u` prefix. When used without brackets, this form is…",19,null],[13,"UnicodeLong","","A `\\\\U` prefix. When used without brackets, this form is…",19,null],[11,"digits","","The number of digits that must be used with this literal…",19,[[]]],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",20,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",20,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",20,null],[11,"span","","Return the span of this character class.",20,[[],["span",3]]],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",21,null],[12,"kind","","The kind of Perl class.",21,null],[12,"negated","","Whether the class is negated or not. e.g., `\\\\d` is not…",21,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",22,null],[13,"Space","","Whitespace.",22,null],[13,"Word","","Word characters.",22,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",23,null],[12,"kind","","The kind of ASCII class.",23,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",23,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",24,null],[13,"Alpha","","`[A-Za-z]`",24,null],[13,"Ascii","","`[\\\\x00-\\\\x7F]`",24,null],[13,"Blank","","`[ \\\\t]`",24,null],[13,"Cntrl","","`[\\\\x00-\\\\x1F\\\\x7F]`",24,null],[13,"Digit","","`[0-9]`",24,null],[13,"Graph","","`[!-~]`",24,null],[13,"Lower","","`[a-z]`",24,null],[13,"Print","","`[ -~]`",24,null],[13,"Punct","","`[!-/:-@\\\\[-`{-~]`",24,null],[13,"Space","","`[\\\\t\\\\n\\\\v\\\\f\\\\r ]`",24,null],[13,"Upper","","`[A-Z]`",24,null],[13,"Word","","`[0-9A-Za-z_]`",24,null],[13,"Xdigit","","`[0-9A-Fa-f]`",24,null],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",24,[[],[["classasciikind",4],["option",4]]]],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",25,null],[12,"negated","","Whether this class is negated or not.",25,null],[12,"kind","","The kind of Unicode class.",25,null],[11,"is_negated","","Returns true if this class has been negated.",25,[[]]],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\\\pN`.",26,null],[13,"Named","","A binary property, general category or script. The string…",26,null],[13,"NamedValue","","A property name and an associated value.",26,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",27,null],[12,"name","","The property name (which may be empty).",27,null],[12,"value","","The property value (which may be empty).",27,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",28,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",28,null],[13,"NotEqual","","A property that isn\'t a particular value, e.g.,…",28,null],[11,"is_equal","","Whether the op is an equality op or not.",28,[[]]],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",29,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",29,null],[12,"kind","","The type of this set. A set is either a normal union of…",29,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",30,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",30,null],[11,"union","","Build a set from a union.",30,[[["classsetunion",3]],["classset",4]]],[11,"span","","Return the span of this character class set.",30,[[],["span",3]]],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",31,null],[13,"Literal","","A single literal.",31,null],[13,"Range","","A range between two literals.",31,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",31,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[13,"Union","","A union of items.",31,null],[11,"span","","Return the span of this character class set item.",31,[[],["span",3]]],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",32,null],[12,"start","","The start of this range.",32,null],[12,"end","","The end of this range.",32,null],[11,"is_valid","","Returns true if and only if this character class range is…",32,[[]]],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",33,null],[12,"items","","The sequence of items that make up this union.",33,null],[11,"push","","Push a new item in this union.",33,[[["classsetitem",4]]]],[11,"into_item","","Return this union as a character class set item.",33,[[],["classsetitem",4]]],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",34,null],[12,"kind","","The type of this set operation.",34,null],[12,"lhs","","The left hand side of the operation.",34,null],[12,"rhs","","The right hand side of the operation.",34,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\\\pN&&[a-z]`.",35,null],[13,"Difference","","The difference of two sets, e.g., `\\\\pN--[0-9]`.",35,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",35,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",36,null],[12,"kind","","The assertion kind, e.g., `\\\\b` or `^`.",36,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",37,null],[13,"EndLine","","`$`",37,null],[13,"StartText","","`\\\\A`",37,null],[13,"EndText","","`\\\\z`",37,null],[13,"WordBoundary","","`\\\\b`",37,null],[13,"NotWordBoundary","","`\\\\B`",37,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",38,null],[12,"op","","The actual operation.",38,null],[12,"greedy","","Whether this operation was applied greedily or not.",38,null],[12,"ast","","The regular expression under repetition.",38,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",39,null],[12,"kind","","The type of operation.",39,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",40,null],[13,"ZeroOrMore","","`*`",40,null],[13,"OneOrMore","","`+`",40,null],[13,"Range","","`{m,n}`",40,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",41,null],[13,"AtLeast","","`{m,}`",41,null],[13,"Bounded","","`{m,n}`",41,null],[11,"is_valid","","Returns true if and only if this repetition range is valid.",41,[[]]],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",42,null],[12,"kind","","The kind of this group.",42,null],[12,"ast","","The regular expression in this group.",42,null],[11,"flags","","If this group is non-capturing, then this returns the…",42,[[],[["option",4],["flags",3]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",42,[[]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",42,[[],["option",4]]],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",44,null],[12,"name","","The capture name.",44,null],[12,"index","","The capture index.",44,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",45,null],[12,"flags","","The actual sequence of flags.",45,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",46,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",46,null],[11,"add_item","","Add the given item to this sequence of flags.",46,[[["flagsitem",3]],["option",4]]],[11,"flag_state","","Returns the state of the given flag in this set.",46,[[["flag",4]],["option",4]]],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",47,null],[12,"kind","","The kind of this item.",47,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",48,null],[13,"Flag","","A single flag in a group.",48,null],[11,"is_negation","","Returns true if and only if this item is a negation…",48,[[]]],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",49,null],[13,"MultiLine","","`m`",49,null],[13,"DotMatchesNewLine","","`s`",49,null],[13,"SwapGreed","","`U`",49,null],[13,"Unicode","","`u`",49,null],[13,"IgnoreWhitespace","","`x`",49,null],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[0,"literal","regex_syntax::hir","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",50,[[],["literals",3]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",50,[[["hir",3]],["literals",3]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",50,[[["hir",3]],["literals",3]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",50,[[]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",50,[[],["literals",3]]],[11,"limit_class","","Get the character class size limit for this set.",50,[[]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",50,[[],["literals",3]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",50,[[]]],[11,"min_len","","Returns the length of the smallest literal.",50,[[],["option",4]]],[11,"all_complete","","Returns true if all members in this set are complete.",50,[[]]],[11,"any_complete","","Returns true if any member in this set is complete.",50,[[]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",50,[[]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",50,[[]]],[11,"to_empty","","Returns a new empty set of literals using this set\'s limits.",50,[[],["literals",3]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",50,[[]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",50,[[]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",50,[[],[["literals",3],["option",4]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",50,[[],["literals",3]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",50,[[],["literals",3]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",50,[[["hir",3]]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",50,[[["hir",3]]]],[11,"union","","Unions this set with another set.",50,[[["literals",3]]]],[11,"cross_product","","Extends this set with another set.",50,[[["literals",3]]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",50,[[]]],[11,"add","","Adds the given literal to this set.",50,[[["literal",3]]]],[11,"add_char_class","","Extends each literal in this set with the character class…",50,[[["classunicode",3]]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",50,[[["classbytes",3]]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",50,[[]]],[11,"reverse","","Reverses all members in place.",50,[[]]],[11,"clear","","Clears this set of all members.",50,[[]]],[11,"new","","Returns a new complete literal with the bytes given.",51,[[["vec",3]],["literal",3]]],[11,"empty","","Returns a new complete empty literal.",51,[[],["literal",3]]],[11,"is_cut","","Returns true if this literal was \\\"cut.\\\"",51,[[]]],[11,"cut","","Cuts this literal.",51,[[]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression\'s high-level…",null,null],[11,"new","","Create a new printer.",52,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",52,[[["write",8],["hir",3]],["result",6]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[11,"new","","Create a new translator builder with a default c…",53,[[],["translatorbuilder",3]]],[11,"build","","Build a translator using the current configuration.",53,[[],["translator",3]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",53,[[],["translatorbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",53,[[],["translatorbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",53,[[],["translatorbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag…",53,[[],["translatorbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag (`U`) by default.",53,[[],["translatorbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",53,[[],["translatorbuilder",3]]],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator using the default configuration.",54,[[],["translator",3]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",54,[[["ast",4]],[["hir",3],["result",4],["error",3]]]],[5,"visit","regex_syntax::hir","Executes an implementation of `Visitor` in constant stack…",null,[[["hir",3],["visitor",8]],["result",4]]],[8,"Visitor","","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",55,null],[16,"Err","","An error that visiting an HIR might return.",55,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",55,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the HIR.",55,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",55,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",55,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",55,[[],["result",4]]],[3,"CaseFoldError","","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[11,"kind","","Return the type of this error.",56,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",56,[[]]],[11,"span","","Return the span at which this error occurred.",56,[[],["span",3]]],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",57,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",57,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",57,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",57,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",57,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",57,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",57,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",58,null],[13,"Literal","","A single literal character that matches exactly this…",58,null],[13,"Class","","A single character class that matches any of the…",58,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",58,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",58,null],[13,"Repetition","","A repetition operation applied to a child expression.",58,null],[13,"Group","","A possibly capturing group, which contains a child…",58,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",58,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",58,null],[11,"kind","","Returns a reference to the underlying HIR kind.",59,[[],["hirkind",4]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",59,[[],["hirkind",4]]],[11,"empty","","Returns an empty HIR expression.",59,[[],["hir",3]]],[11,"literal","","Creates a literal HIR expression.",59,[[["literal",4]],["hir",3]]],[11,"class","","Creates a class HIR expression.",59,[[["class",4]],["hir",3]]],[11,"anchor","","Creates an anchor assertion HIR expression.",59,[[["anchor",4]],["hir",3]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",59,[[["wordboundary",4]],["hir",3]]],[11,"repetition","","Creates a repetition HIR expression.",59,[[["repetition",3]],["hir",3]]],[11,"group","","Creates a group HIR expression.",59,[[["group",3]],["hir",3]]],[11,"concat","","Returns the concatenation of the given expressions.",59,[[["vec",3],["hir",3]],["hir",3]]],[11,"alternation","","Returns the alternation of the given expressions.",59,[[["vec",3],["hir",3]],["hir",3]]],[11,"dot","","Build an HIR expression for `.`.",59,[[],["hir",3]]],[11,"any","","Build an HIR expression for `(?s).`.",59,[[],["hir",3]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",59,[[]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",59,[[]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",59,[[]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",59,[[]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",59,[[]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",59,[[]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",59,[[]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",59,[[]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",59,[[]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",59,[[]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",59,[[]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",58,[[]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",58,[[]]],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",60,null],[13,"Byte","","A single character represented by an arbitrary byte.",60,null],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",60,[[]]],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",61,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",61,null],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",61,[[]]],[11,"negate","","Negate this character class in place.",61,[[]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",61,[[]]],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[11,"new","","Create a new class from a sequence of ranges.",62,[[],["classunicode",3]]],[11,"empty","","Create a new class with no ranges.",62,[[],["classunicode",3]]],[11,"push","","Add a new range to this set.",62,[[["classunicoderange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",62,[[],["classunicodeiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",62,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",62,[[]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",62,[[],[["result",4],["casefolderror",3]]]],[11,"negate","","Negate this character class.",62,[[]]],[11,"union","","Union this character class with the given character class,…",62,[[["classunicode",3]]]],[11,"intersect","","Intersect this character class with the given character…",62,[[["classunicode",3]]]],[11,"difference","","Subtract the given character class from this character…",62,[[["classunicode",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",62,[[["classunicode",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",62,[[]]],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[11,"new","","Create a new Unicode scalar value range for a character…",63,[[],["classunicoderange",3]]],[11,"start","","Return the start of this range.",63,[[]]],[11,"end","","Return the end of this range.",63,[[]]],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[11,"new","","Create a new class from a sequence of ranges.",64,[[],["classbytes",3]]],[11,"empty","","Create a new class with no ranges.",64,[[],["classbytes",3]]],[11,"push","","Add a new range to this set.",64,[[["classbytesrange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",64,[[],["classbytesiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",64,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",64,[[]]],[11,"negate","","Negate this byte class.",64,[[]]],[11,"union","","Union this byte class with the given byte class, in place.",64,[[["classbytes",3]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",64,[[["classbytes",3]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",64,[[["classbytes",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",64,[[["classbytes",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",64,[[]]],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[11,"new","","Create a new byte range for a character class.",65,[[],["classbytesrange",3]]],[11,"start","","Return the start of this range.",65,[[]]],[11,"end","","Return the end of this range.",65,[[]]],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",66,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",66,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",66,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",66,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",67,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",67,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",67,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",67,null],[11,"is_negated","","Returns true if and only if this word boundary assertion…",67,[[]]],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",68,null],[12,"hir","","The expression inside the capturing group, which may be…",68,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",69,null],[13,"CaptureName","","A named capturing group.",69,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",70,null],[12,"index","","The capture index of the group.",70,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",69,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",71,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",71,null],[12,"hir","","The expression being repeated.",71,null],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",71,[[]]],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",72,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",72,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",72,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",72,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",73,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",73,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",73,null],[0,"utf8","regex_syntax","Converts ranges of Unicode scalar values to equivalent…",null,null],[4,"Utf8Sequence","regex_syntax::utf8","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",74,null],[13,"Two","","Two successive byte ranges.",74,null],[13,"Three","","Three successive byte ranges.",74,null],[13,"Four","","Four successive byte ranges.",74,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",74,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",74,[[]]],[11,"reverse","","Reverses the ranges in this sequence.",74,[[]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",74,[[]]],[3,"Utf8Range","","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",75,null],[12,"end","","End of byte range (inclusive).",75,null],[11,"matches","","Returns true if and only if the given byte is in this range.",75,[[]]],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",76,[[]]],[4,"Error","regex_syntax","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",77,null],[13,"Translate","","An error that occurred while translating abstract syntax…",77,null],[6,"Result","","A type alias for dealing with errors returned by this crate.",null,null],[3,"Parser","","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\\\w` class is…",null,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["string",3]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[],[["result",4],["unicodeworderror",3]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[]]],[11,"from","regex_syntax::ast::parse","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex_syntax::ast::print","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","regex_syntax::ast","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","regex_syntax","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","regex_syntax::hir::literal","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","regex_syntax::hir::print","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","regex_syntax::hir::translate","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","regex_syntax::hir","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","regex_syntax","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","regex_syntax::utf8","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"drop","regex_syntax::ast","",13,[[]]],[11,"drop","","",30,[[]]],[11,"drop","regex_syntax::hir","",59,[[]]],[11,"as_ref","regex_syntax::hir::literal","",51,[[]]],[11,"from","regex_syntax","",77,[[["error",3]],["error",4]]],[11,"from","","",77,[[["error",3]],["error",4]]],[11,"next","regex_syntax::hir","",79,[[],[["classunicoderange",3],["option",4]]]],[11,"next","","",80,[[],[["option",4],["classbytesrange",3]]]],[11,"next","regex_syntax::utf8","",76,[[],["option",4]]],[11,"clone","regex_syntax::ast::parse","",0,[[],["parserbuilder",3]]],[11,"clone","","",1,[[],["parser",3]]],[11,"clone","regex_syntax::ast","",4,[[],["error",3]]],[11,"clone","","",5,[[],["errorkind",4]]],[11,"clone","","",9,[[],["span",3]]],[11,"clone","","",10,[[],["position",3]]],[11,"clone","","",11,[[],["withcomments",3]]],[11,"clone","","",12,[[],["comment",3]]],[11,"clone","","",13,[[],["ast",4]]],[11,"clone","","",14,[[],["alternation",3]]],[11,"clone","","",15,[[],["concat",3]]],[11,"clone","","",16,[[],["literal",3]]],[11,"clone","","",17,[[],["literalkind",4]]],[11,"clone","","",18,[[],["specialliteralkind",4]]],[11,"clone","","",19,[[],["hexliteralkind",4]]],[11,"clone","","",20,[[],["class",4]]],[11,"clone","","",21,[[],["classperl",3]]],[11,"clone","","",22,[[],["classperlkind",4]]],[11,"clone","","",23,[[],["classascii",3]]],[11,"clone","","",24,[[],["classasciikind",4]]],[11,"clone","","",25,[[],["classunicode",3]]],[11,"clone","","",26,[[],["classunicodekind",4]]],[11,"clone","","",28,[[],["classunicodeopkind",4]]],[11,"clone","","",29,[[],["classbracketed",3]]],[11,"clone","","",30,[[],["classset",4]]],[11,"clone","","",31,[[],["classsetitem",4]]],[11,"clone","","",32,[[],["classsetrange",3]]],[11,"clone","","",33,[[],["classsetunion",3]]],[11,"clone","","",34,[[],["classsetbinaryop",3]]],[11,"clone","","",35,[[],["classsetbinaryopkind",4]]],[11,"clone","","",36,[[],["assertion",3]]],[11,"clone","","",37,[[],["assertionkind",4]]],[11,"clone","","",38,[[],["repetition",3]]],[11,"clone","","",39,[[],["repetitionop",3]]],[11,"clone","","",40,[[],["repetitionkind",4]]],[11,"clone","","",41,[[],["repetitionrange",4]]],[11,"clone","","",42,[[],["group",3]]],[11,"clone","","",43,[[],["groupkind",4]]],[11,"clone","","",44,[[],["capturename",3]]],[11,"clone","","",45,[[],["setflags",3]]],[11,"clone","","",46,[[],["flags",3]]],[11,"clone","","",47,[[],["flagsitem",3]]],[11,"clone","","",48,[[],["flagsitemkind",4]]],[11,"clone","","",49,[[],["flag",4]]],[11,"clone","regex_syntax","",77,[[],["error",4]]],[11,"clone","regex_syntax::hir::literal","",50,[[],["literals",3]]],[11,"clone","","",51,[[],["literal",3]]],[11,"clone","regex_syntax::hir::translate","",53,[[],["translatorbuilder",3]]],[11,"clone","","",54,[[],["translator",3]]],[11,"clone","regex_syntax::hir","",56,[[],["error",3]]],[11,"clone","","",57,[[],["errorkind",4]]],[11,"clone","","",59,[[],["hir",3]]],[11,"clone","","",58,[[],["hirkind",4]]],[11,"clone","","",60,[[],["literal",4]]],[11,"clone","","",61,[[],["class",4]]],[11,"clone","","",62,[[],["classunicode",3]]],[11,"clone","","",63,[[],["classunicoderange",3]]],[11,"clone","","",64,[[],["classbytes",3]]],[11,"clone","","",65,[[],["classbytesrange",3]]],[11,"clone","","",66,[[],["anchor",4]]],[11,"clone","","",67,[[],["wordboundary",4]]],[11,"clone","","",68,[[],["group",3]]],[11,"clone","","",69,[[],["groupkind",4]]],[11,"clone","","",71,[[],["repetition",3]]],[11,"clone","","",72,[[],["repetitionkind",4]]],[11,"clone","","",73,[[],["repetitionrange",4]]],[11,"clone","regex_syntax","",81,[[],["parserbuilder",3]]],[11,"clone","","",82,[[],["parser",3]]],[11,"clone","regex_syntax::utf8","",74,[[],["utf8sequence",4]]],[11,"clone","","",75,[[],["utf8range",3]]],[11,"default","regex_syntax::ast::parse","",0,[[],["parserbuilder",3]]],[11,"default","regex_syntax::hir::translate","",53,[[],["translatorbuilder",3]]],[11,"default","regex_syntax::hir","",63,[[],["classunicoderange",3]]],[11,"default","","",65,[[],["classbytesrange",3]]],[11,"default","regex_syntax","",81,[[],["parserbuilder",3]]],[11,"cmp","regex_syntax::ast","",9,[[["span",3]],["ordering",4]]],[11,"cmp","","",10,[[["position",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir::literal","",51,[[["literal",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir","",63,[[["classunicoderange",3]],["ordering",4]]],[11,"cmp","","",65,[[["classbytesrange",3]],["ordering",4]]],[11,"cmp","regex_syntax::utf8","",74,[[["utf8sequence",4]],["ordering",4]]],[11,"cmp","","",75,[[["utf8range",3]],["ordering",4]]],[11,"eq","regex_syntax::ast","",4,[[["error",3]]]],[11,"ne","","",4,[[["error",3]]]],[11,"eq","","",5,[[["errorkind",4]]]],[11,"ne","","",5,[[["errorkind",4]]]],[11,"eq","","",9,[[["span",3]]]],[11,"ne","","",9,[[["span",3]]]],[11,"eq","","",10,[[["position",3]]]],[11,"ne","","",10,[[["position",3]]]],[11,"eq","","",11,[[["withcomments",3]]]],[11,"ne","","",11,[[["withcomments",3]]]],[11,"eq","","",12,[[["comment",3]]]],[11,"ne","","",12,[[["comment",3]]]],[11,"eq","","",13,[[["ast",4]]]],[11,"ne","","",13,[[["ast",4]]]],[11,"eq","","",14,[[["alternation",3]]]],[11,"ne","","",14,[[["alternation",3]]]],[11,"eq","","",15,[[["concat",3]]]],[11,"ne","","",15,[[["concat",3]]]],[11,"eq","","",16,[[["literal",3]]]],[11,"ne","","",16,[[["literal",3]]]],[11,"eq","","",17,[[["literalkind",4]]]],[11,"ne","","",17,[[["literalkind",4]]]],[11,"eq","","",18,[[["specialliteralkind",4]]]],[11,"eq","","",19,[[["hexliteralkind",4]]]],[11,"eq","","",20,[[["class",4]]]],[11,"ne","","",20,[[["class",4]]]],[11,"eq","","",21,[[["classperl",3]]]],[11,"ne","","",21,[[["classperl",3]]]],[11,"eq","","",22,[[["classperlkind",4]]]],[11,"eq","","",23,[[["classascii",3]]]],[11,"ne","","",23,[[["classascii",3]]]],[11,"eq","","",24,[[["classasciikind",4]]]],[11,"eq","","",25,[[["classunicode",3]]]],[11,"ne","","",25,[[["classunicode",3]]]],[11,"eq","","",26,[[["classunicodekind",4]]]],[11,"ne","","",26,[[["classunicodekind",4]]]],[11,"eq","","",28,[[["classunicodeopkind",4]]]],[11,"eq","","",29,[[["classbracketed",3]]]],[11,"ne","","",29,[[["classbracketed",3]]]],[11,"eq","","",30,[[["classset",4]]]],[11,"ne","","",30,[[["classset",4]]]],[11,"eq","","",31,[[["classsetitem",4]]]],[11,"ne","","",31,[[["classsetitem",4]]]],[11,"eq","","",32,[[["classsetrange",3]]]],[11,"ne","","",32,[[["classsetrange",3]]]],[11,"eq","","",33,[[["classsetunion",3]]]],[11,"ne","","",33,[[["classsetunion",3]]]],[11,"eq","","",34,[[["classsetbinaryop",3]]]],[11,"ne","","",34,[[["classsetbinaryop",3]]]],[11,"eq","","",35,[[["classsetbinaryopkind",4]]]],[11,"eq","","",36,[[["assertion",3]]]],[11,"ne","","",36,[[["assertion",3]]]],[11,"eq","","",37,[[["assertionkind",4]]]],[11,"eq","","",38,[[["repetition",3]]]],[11,"ne","","",38,[[["repetition",3]]]],[11,"eq","","",39,[[["repetitionop",3]]]],[11,"ne","","",39,[[["repetitionop",3]]]],[11,"eq","","",40,[[["repetitionkind",4]]]],[11,"ne","","",40,[[["repetitionkind",4]]]],[11,"eq","","",41,[[["repetitionrange",4]]]],[11,"ne","","",41,[[["repetitionrange",4]]]],[11,"eq","","",42,[[["group",3]]]],[11,"ne","","",42,[[["group",3]]]],[11,"eq","","",43,[[["groupkind",4]]]],[11,"ne","","",43,[[["groupkind",4]]]],[11,"eq","","",44,[[["capturename",3]]]],[11,"ne","","",44,[[["capturename",3]]]],[11,"eq","","",45,[[["setflags",3]]]],[11,"ne","","",45,[[["setflags",3]]]],[11,"eq","","",46,[[["flags",3]]]],[11,"ne","","",46,[[["flags",3]]]],[11,"eq","","",47,[[["flagsitem",3]]]],[11,"ne","","",47,[[["flagsitem",3]]]],[11,"eq","","",48,[[["flagsitemkind",4]]]],[11,"ne","","",48,[[["flagsitemkind",4]]]],[11,"eq","","",49,[[["flag",4]]]],[11,"eq","regex_syntax","",77,[[["error",4]]]],[11,"ne","","",77,[[["error",4]]]],[11,"eq","regex_syntax::hir::literal","",50,[[["literals",3]]]],[11,"ne","","",50,[[["literals",3]]]],[11,"eq","","",51,[[["literal",3]]]],[11,"eq","regex_syntax::hir","",56,[[["error",3]]]],[11,"ne","","",56,[[["error",3]]]],[11,"eq","","",57,[[["errorkind",4]]]],[11,"eq","","",59,[[["hir",3]]]],[11,"ne","","",59,[[["hir",3]]]],[11,"eq","","",58,[[["hirkind",4]]]],[11,"ne","","",58,[[["hirkind",4]]]],[11,"eq","","",60,[[["literal",4]]]],[11,"ne","","",60,[[["literal",4]]]],[11,"eq","","",61,[[["class",4]]]],[11,"ne","","",61,[[["class",4]]]],[11,"eq","","",62,[[["classunicode",3]]]],[11,"ne","","",62,[[["classunicode",3]]]],[11,"eq","","",63,[[["classunicoderange",3]]]],[11,"ne","","",63,[[["classunicoderange",3]]]],[11,"eq","","",64,[[["classbytes",3]]]],[11,"ne","","",64,[[["classbytes",3]]]],[11,"eq","","",65,[[["classbytesrange",3]]]],[11,"ne","","",65,[[["classbytesrange",3]]]],[11,"eq","","",66,[[["anchor",4]]]],[11,"eq","","",67,[[["wordboundary",4]]]],[11,"eq","","",68,[[["group",3]]]],[11,"ne","","",68,[[["group",3]]]],[11,"eq","","",69,[[["groupkind",4]]]],[11,"ne","","",69,[[["groupkind",4]]]],[11,"eq","","",71,[[["repetition",3]]]],[11,"ne","","",71,[[["repetition",3]]]],[11,"eq","","",72,[[["repetitionkind",4]]]],[11,"ne","","",72,[[["repetitionkind",4]]]],[11,"eq","","",73,[[["repetitionrange",4]]]],[11,"ne","","",73,[[["repetitionrange",4]]]],[11,"eq","regex_syntax::utf8","",74,[[["utf8sequence",4]]]],[11,"ne","","",74,[[["utf8sequence",4]]]],[11,"eq","","",75,[[["utf8range",3]]]],[11,"ne","","",75,[[["utf8range",3]]]],[11,"partial_cmp","regex_syntax::ast","",9,[[["span",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["position",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir::literal","",51,[[["literal",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir","",63,[[["classunicoderange",3]],[["ordering",4],["option",4]]]],[11,"lt","","",63,[[["classunicoderange",3]]]],[11,"le","","",63,[[["classunicoderange",3]]]],[11,"gt","","",63,[[["classunicoderange",3]]]],[11,"ge","","",63,[[["classunicoderange",3]]]],[11,"partial_cmp","","",65,[[["classbytesrange",3]],[["ordering",4],["option",4]]]],[11,"lt","","",65,[[["classbytesrange",3]]]],[11,"le","","",65,[[["classbytesrange",3]]]],[11,"gt","","",65,[[["classbytesrange",3]]]],[11,"ge","","",65,[[["classbytesrange",3]]]],[11,"partial_cmp","regex_syntax::utf8","",74,[[["utf8sequence",4]],[["ordering",4],["option",4]]]],[11,"lt","","",74,[[["utf8sequence",4]]]],[11,"le","","",74,[[["utf8sequence",4]]]],[11,"gt","","",74,[[["utf8sequence",4]]]],[11,"ge","","",74,[[["utf8sequence",4]]]],[11,"partial_cmp","","",75,[[["utf8range",3]],[["ordering",4],["option",4]]]],[11,"lt","","",75,[[["utf8range",3]]]],[11,"le","","",75,[[["utf8range",3]]]],[11,"gt","","",75,[[["utf8range",3]]]],[11,"ge","","",75,[[["utf8range",3]]]],[11,"deref","regex_syntax::hir::literal","",51,[[],["vec",3]]],[11,"deref_mut","","",51,[[],["vec",3]]],[11,"fmt","regex_syntax::ast::parse","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast::print","",2,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::literal","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::print","",52,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::translate","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",78,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",83,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::utf8","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",83,[[["formatter",3]],["result",6]]],[11,"description","regex_syntax::ast","",4,[[]]],[11,"description","regex_syntax","",77,[[]]],[11,"description","regex_syntax::hir","",56,[[]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",3,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",3,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",3,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",3,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",3,[[["classsetbinaryop",3]],["result",4]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",55,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",55,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",55,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",55,[[],["result",4]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",81,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",81,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",81,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",81,[[],["parserbuilder",3]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",81,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",81,[[],["parserbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",81,[[],["parserbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",81,[[],["parserbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag by…",81,[[],["parserbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag by default.",81,[[],["parserbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",81,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",82,[[],["parser",3]]],[11,"parse","","Parse the regular expression into a high level…",82,[[],[["hir",3],["result",6]]]]],"p":[[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[4,"Ast"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[3,"ClassPerl"],[4,"ClassPerlKind"],[3,"ClassAscii"],[4,"ClassAsciiKind"],[3,"ClassUnicode"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[3,"ClassBracketed"],[4,"ClassSet"],[4,"ClassSetItem"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[4,"ClassSetBinaryOpKind"],[3,"Assertion"],[4,"AssertionKind"],[3,"Repetition"],[3,"RepetitionOp"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Group"],[4,"GroupKind"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"FlagsItemKind"],[4,"Flag"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[4,"ErrorKind"],[4,"HirKind"],[3,"Hir"],[4,"Literal"],[4,"Class"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[4,"Anchor"],[4,"WordBoundary"],[3,"Group"],[4,"GroupKind"],[13,"CaptureName"],[3,"Repetition"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"Utf8Sequence"],[3,"Utf8Range"],[3,"Utf8Sequences"],[4,"Error"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"],[3,"ParserBuilder"],[3,"Parser"],[3,"UnicodeWordError"]]},\
"rustyline":{"doc":"Readline for Rust","i":[[0,"completion","rustyline","Completion API",null,null],[8,"Candidate","rustyline::completion","A completion candidate.",null,null],[10,"display","","Text to display when listing alternatives.",0,[[]]],[10,"replacement","","Text to insert in line.",0,[[]]],[3,"Pair","","Completion candidate pair",null,null],[12,"display","","Text to display when listing alternatives.",1,null],[12,"replacement","","Text to insert in line.",1,null],[8,"Completer","","To be called for tab-completion.",null,null],[16,"Candidate","","Specific completion candidate.",2,null],[11,"complete","","Takes the currently edited `line` with the cursor…",2,[[["context",3]],["result",6]]],[11,"update","","Updates the edited `line` with the `elected` candidate.",2,[[["linebuffer",3]]]],[3,"FilenameCompleter","","A `Completer` for file and folder names.",null,null],[4,"Quote","","Kind of quote.",null,null],[13,"Double","","Double quote: `\\\"`",3,null],[13,"Single","","Single quote: `\'`",3,null],[13,"None","","No quote",3,null],[11,"new","","Constructor",4,[[]]],[11,"complete_path","","Takes the currently edited `line` with the cursor…",4,[[],["result",6]]],[5,"unescape","","Remove escape char",null,[[["option",4]],["cow",4]]],[5,"escape","","Escape any `break_chars` in `input` string with…",null,[[["option",4],["string",3],["quote",4]],["string",3]]],[5,"extract_word","","Given a `line` and a cursor `pos`ition, try to find…",null,[[["option",4]]]],[5,"longest_common_prefix","","Returns the longest common prefix among all…",null,[[],["option",4]]],[0,"config","rustyline","Customize line editor",null,null],[3,"Config","rustyline::config","User preferences",null,null],[11,"builder","","Returns a `Config` builder.",5,[[],["builder",3]]],[11,"max_history_size","","Tell the maximum length (i.e. number of entries) for the…",5,[[]]],[11,"history_duplicates","","Tell if lines which match the previous history entry are…",5,[[],["historyduplicates",4]]],[11,"history_ignore_space","","Tell if lines which begin with a space character are saved…",5,[[]]],[11,"completion_type","","Completion behaviour.",5,[[],["completiontype",4]]],[11,"completion_prompt_limit","","When listing completion alternatives, only display one…",5,[[]]],[11,"keyseq_timeout","","Duration (milliseconds) Rustyline will wait for a…",5,[[]]],[11,"edit_mode","","Emacs or Vi mode",5,[[],["editmode",4]]],[11,"auto_add_history","","Tell if lines are automatically added to the history.",5,[[]]],[11,"bell_style","","Bell style: beep, flash or nothing.",5,[[],["bellstyle",4]]],[11,"color_mode","","Tell if colors should be enabled.",5,[[],["colormode",4]]],[11,"output_stream","","Tell which output stream should be used: stdout or stderr.",5,[[],["outputstreamtype",4]]],[11,"tab_stop","","Horizontal space taken by a tab.",5,[[]]],[4,"BellStyle","","Beep or flash or nothing",null,null],[13,"Audible","","Beep",6,null],[13,"None","","Silent",6,null],[13,"Visible","","Flash screen (not supported)",6,null],[4,"HistoryDuplicates","","History filter",null,null],[13,"AlwaysAdd","","No filter",7,null],[13,"IgnoreConsecutive","","a line will not be added to the history if it matches the…",7,null],[4,"CompletionType","","Tab completion style",null,null],[13,"Circular","","Complete the next full match (like in Vim by default)",8,null],[13,"List","","Complete till longest match. When more than one match,…",8,null],[4,"EditMode","","Style of editing / Standard keymaps",null,null],[13,"Emacs","","Emacs keymap",9,null],[13,"Vi","","Vi keymap",9,null],[4,"ColorMode","","Colorization mode",null,null],[13,"Enabled","","Activate highlighting if platform/terminal is supported.",10,null],[13,"Forced","","Activate highlighting even if platform is not supported…",10,null],[13,"Disabled","","Deactivate highlighting even if platform/terminal is…",10,null],[4,"OutputStreamType","","Should the editor use stdout or stderr",null,null],[13,"Stderr","","Use stderr",11,null],[13,"Stdout","","Use stdout",11,null],[3,"Builder","","Configuration builder",null,null],[11,"new","","Returns a `Config` builder.",12,[[]]],[11,"max_history_size","","Set the maximum length for the history.",12,[[]]],[11,"history_ignore_dups","","Tell if lines which match the previous history entry are…",12,[[]]],[11,"history_ignore_space","","Tell if lines which begin with a space character are saved…",12,[[]]],[11,"completion_type","","Set `completion_type`.",12,[[["completiontype",4]]]],[11,"completion_prompt_limit","","The number of possible completions that determines when…",12,[[]]],[11,"keyseq_timeout","","Timeout for ambiguous key sequences in milliseconds.…",12,[[]]],[11,"edit_mode","","Choose between Emacs or Vi mode.",12,[[["editmode",4]]]],[11,"auto_add_history","","Tell if lines are automatically added to the history.",12,[[]]],[11,"bell_style","","Set bell style: beep, flash or nothing.",12,[[["bellstyle",4]]]],[11,"color_mode","","Forces colorization on or off.",12,[[["colormode",4]]]],[11,"output_stream","","Whether to use stdout or stderr.",12,[[["outputstreamtype",4]]]],[11,"tab_stop","","Horizontal space taken by a tab.",12,[[]]],[11,"build","","Builds a `Config` with the settings specified so far.",12,[[],["config",3]]],[8,"Configurer","","Trait for component that holds a `Config`.",null,null],[10,"config_mut","","`Config` accessor.",13,[[],["config",3]]],[11,"set_max_history_size","","Set the maximum length for the history.",13,[[]]],[11,"set_history_ignore_dups","","Tell if lines which match the previous history entry are…",13,[[]]],[11,"set_history_ignore_space","","Tell if lines which begin with a space character are saved…",13,[[]]],[11,"set_completion_type","","Set `completion_type`.",13,[[["completiontype",4]]]],[11,"set_completion_prompt_limit","","The number of possible completions that determines when…",13,[[]]],[11,"set_keyseq_timeout","","Timeout for ambiguous key sequences in milliseconds.",13,[[]]],[11,"set_edit_mode","","Choose between Emacs or Vi mode.",13,[[["editmode",4]]]],[11,"set_auto_add_history","","Tell if lines are automatically added to the history.",13,[[]]],[11,"set_bell_style","","Set bell style: beep, flash or nothing.",13,[[["bellstyle",4]]]],[11,"set_color_mode","","Forces colorization on or off.",13,[[["colormode",4]]]],[11,"set_output_stream","","Whether to use stdout or stderr",13,[[["outputstreamtype",4]]]],[11,"set_tab_stop","","Horizontal space taken by a tab.",13,[[]]],[0,"error","rustyline","Contains error type for handling I/O and Errno errors",null,null],[4,"ReadlineError","rustyline::error","The error type for Rustyline errors that can arise from…",null,null],[13,"Io","","I/O Error",14,null],[13,"Eof","","EOF (Ctrl-D)",14,null],[13,"Interrupted","","Ctrl-C",14,null],[13,"Utf8Error","","Chars Error",14,null],[13,"Errno","","Unix Error from syscall",14,null],[0,"highlight","rustyline","Syntax highlighting",null,null],[8,"Highlighter","rustyline::highlight","Syntax highlighter with ANSI color. Rustyline will try to…",null,null],[11,"highlight","","Takes the currently edited `line` with the cursor…",15,[[],["cow",4]]],[11,"highlight_prompt","","Takes the `prompt` and returns the highlighted version…",15,[[],["cow",4]]],[11,"highlight_hint","","Takes the `hint` and returns the highlighted version (with…",15,[[],["cow",4]]],[11,"highlight_candidate","","Takes the completion `candidate` and returns the…",15,[[["completiontype",4]],["cow",4]]],[11,"highlight_char","","Tells if `line` needs to be highlighted when a specific…",15,[[]]],[3,"MatchingBracketHighlighter","","Highlight matching bracket when typed or cursor moved on.",null,null],[11,"new","","Constructor",16,[[]]],[0,"hint","rustyline","Hints (suggestions at the right of the prompt as you type).",null,null],[8,"Hinter","rustyline::hint","Hints provider",null,null],[11,"hint","","Takes the currently edited `line` with the cursor…",17,[[["context",3]],[["option",4],["string",3]]]],[3,"HistoryHinter","","Add suggestion based on previous history entries matching…",null,null],[0,"history","rustyline","History API",null,null],[4,"Direction","rustyline::history","Search direction",null,null],[13,"Forward","","Search history forward",18,null],[13,"Reverse","","Search history backward",18,null],[3,"History","","Current state of the history.",null,null],[11,"new","","Default constructor",19,[[]]],[11,"with_config","","Customized constructor with:",19,[[["config",3]]]],[11,"get","","Return the history entry at position `index`, starting…",19,[[],[["string",3],["option",4]]]],[11,"last","","Return the last history entry (i.e. previous command)",19,[[],[["string",3],["option",4]]]],[11,"add","","Add a new entry in the history.",19,[[["asref",8],["string",3],["into",8]]]],[11,"len","","Return the number of entries in the history.",19,[[]]],[11,"is_empty","","Return true if the history has no entry.",19,[[]]],[11,"set_max_len","","Set the maximum length for the history. This function can…",19,[[]]],[11,"save","","Save the history in the specified file.",19,[[],["result",6]]],[11,"load","","Load the history from the specified file.",19,[[],["result",6]]],[11,"clear","","Clear history",19,[[]]],[11,"search","","Search history (start position inclusive [0, len-1]).",19,[[["direction",4]],["option",4]]],[11,"starts_with","","Anchored search",19,[[["direction",4]],["option",4]]],[11,"iter","","Return a forward iterator.",19,[[],["iter",3]]],[3,"Iter","","History iterator.",null,null],[0,"line_buffer","rustyline","Line buffer with current cursor position",null,null],[4,"WordAction","rustyline::line_buffer","Word\'s case change",null,null],[13,"CAPITALIZE","","Capitalize word",20,null],[13,"LOWERCASE","","lowercase word",20,null],[13,"UPPERCASE","","uppercase word",20,null],[3,"LineBuffer","","Represent the current input (text and cursor position).",null,null],[11,"with_capacity","","Create a new line buffer with the given maximum `capacity`.",21,[[]]],[11,"as_str","","Extracts a string slice containing the entire buffer.",21,[[]]],[11,"into_string","","Converts a buffer into a `String` without copying or…",21,[[],["string",3]]],[11,"pos","","Current cursor position (byte position)",21,[[]]],[11,"set_pos","","Set cursor position (byte position)",21,[[]]],[11,"len","","Returns the length of this buffer, in bytes.",21,[[]]],[11,"is_empty","","Returns `true` if this buffer has a length of zero.",21,[[]]],[11,"update","","Set line content (`buf`) and cursor position (`pos`).",21,[[]]],[11,"next_pos","","Returns the position of the character just after the…",21,[[["repeatcount",6]],["option",4]]],[11,"insert","","Insert the character `ch` at current cursor position and…",21,[[["repeatcount",6]],["option",4]]],[11,"yank","","Yank/paste `text` at current position. Return `None` when…",21,[[["repeatcount",6]],["option",4]]],[11,"yank_pop","","Delete previously yanked text and yank/paste `text` at…",21,[[],["option",4]]],[11,"move_backward","","Move cursor on the left.",21,[[["repeatcount",6]]]],[11,"move_forward","","Move cursor on the right.",21,[[["repeatcount",6]]]],[11,"move_buffer_start","","Move cursor to the start of the buffer.",21,[[]]],[11,"move_buffer_end","","Move cursor to the end of the buffer.",21,[[]]],[11,"move_home","","Move cursor to the start of the line.",21,[[]]],[11,"move_end","","Move cursor to the end of the line.",21,[[]]],[11,"is_end_of_input","","Is cursor at the end of input (whitespaces after cursor is…",21,[[]]],[11,"delete","","Delete the character at the right of the cursor without…",21,[[["repeatcount",6]],[["option",4],["string",3]]]],[11,"backspace","","Delete the character at the left of the cursor. Basically…",21,[[["repeatcount",6]]]],[11,"kill_line","","Kill the text from point to the end of the line.",21,[[]]],[11,"kill_buffer","","Kill the text from point to the end of the buffer.",21,[[]]],[11,"discard_line","","Kill backward from point to the beginning of the line.",21,[[]]],[11,"discard_buffer","","Kill backward from point to the beginning of the buffer.",21,[[]]],[11,"transpose_chars","","Exchange the char before cursor with the character at…",21,[[]]],[11,"move_to_prev_word","","Moves the cursor to the beginning of previous word.",21,[[["repeatcount",6],["word",4]]]],[11,"delete_prev_word","","Delete the previous word, maintaining the cursor at the…",21,[[["repeatcount",6],["word",4]]]],[11,"move_to_next_word","","Moves the cursor to the end of next word.",21,[[["at",4],["repeatcount",6],["word",4]]]],[11,"move_to_line_up","","Moves the cursor to the same column in the line above",21,[[["repeatcount",6]]]],[11,"move_to_line_down","","Moves the cursor to the same column in the line above",21,[[["repeatcount",6]]]],[11,"move_to","","Move cursor to the matching character position. Return…",21,[[["repeatcount",6],["charsearch",4]]]],[11,"delete_word","","Kill from the cursor to the end of the current word, or,…",21,[[["at",4],["repeatcount",6],["word",4]]]],[11,"delete_to","","Delete range specified by `cs` search.",21,[[["repeatcount",6],["charsearch",4]]]],[11,"edit_word","","Alter the next word.",21,[[["wordaction",4]]]],[11,"transpose_words","","Transpose two words",21,[[["repeatcount",6]]]],[11,"replace","","Replaces the content between [`start`..`end`] with `text`…",21,[[["range",3]]]],[11,"insert_str","","Insert the `s`tring at the specified position. Return…",21,[[]]],[11,"delete_range","","Remove the specified `range` in the line.",21,[[["range",3]]]],[11,"copy","","Return the content between current cursor position and…",21,[[["movement",4]],[["option",4],["string",3]]]],[11,"kill","","Kill range specified by `mvt`.",21,[[["movement",4]]]],[0,"validate","rustyline","Input validation API (Multi-line editing)",null,null],[4,"ValidationResult","rustyline::validate","Input validation result",null,null],[13,"Incomplete","","Incomplete input",22,null],[13,"Invalid","","Validation fails with an optional error message. User must…",22,null],[13,"Valid","","Validation succeeds with an optional message",22,null],[3,"ValidationContext","","Give access to user input.",null,null],[11,"input","","Returns user input.",23,[[]]],[8,"Validator","","This trait provides an extension interface for determining…",null,null],[11,"validate","","Takes the currently edited `input` and returns a…",24,[[["validationcontext",3]],[["result",6],["validationresult",4]]]],[11,"validate_while_typing","","Configure whether validation is performed while typing or…",24,[[]]],[3,"MatchingBracketValidator","","Simple matching bracket validator.",null,null],[11,"new","","Constructor",25,[[]]],[4,"Anchor","rustyline","Where to paste (relative to cursor position)",null,null],[13,"After","","After cursor",26,null],[13,"Before","","Before cursor",26,null],[4,"At","","Where to move with respect to word boundary",null,null],[13,"Start","","Start of word.",27,null],[13,"BeforeEnd","","Before end of word.",27,null],[13,"AfterEnd","","After end of word.",27,null],[4,"CharSearch","","Vi character search",null,null],[13,"Forward","","Forward search",28,null],[13,"ForwardBefore","","Forward search until",28,null],[13,"Backward","","Backward search",28,null],[13,"BackwardAfter","","Backward search until",28,null],[4,"Cmd","","Commands",null,null],[13,"Abort","","abort",29,null],[13,"AcceptLine","","accept-line",29,null],[13,"BeginningOfHistory","","beginning-of-history",29,null],[13,"CapitalizeWord","","capitalize-word",29,null],[13,"ClearScreen","","clear-screen",29,null],[13,"Complete","","complete",29,null],[13,"CompleteBackward","","complete-backward",29,null],[13,"CompleteHint","","complete-hint",29,null],[13,"DowncaseWord","","downcase-word",29,null],[13,"EndOfFile","","vi-eof-maybe",29,null],[13,"EndOfHistory","","end-of-history",29,null],[13,"ForwardSearchHistory","","forward-search-history",29,null],[13,"HistorySearchBackward","","history-search-backward",29,null],[13,"HistorySearchForward","","history-search-forward",29,null],[13,"Insert","","Insert text",29,null],[13,"Interrupt","","Interrupt signal (Ctrl-C)",29,null],[13,"Kill","","backward-delete-char, backward-kill-line,…",29,null],[13,"Move","","backward-char, backward-word, beginning-of-line,…",29,null],[13,"NextHistory","","next-history",29,null],[13,"Noop","","No action",29,null],[13,"Overwrite","","vi-replace",29,null],[13,"PreviousHistory","","previous-history",29,null],[13,"QuotedInsert","","quoted-insert",29,null],[13,"ReplaceChar","","vi-change-char",29,null],[13,"Replace","","vi-change-to, vi-substitute",29,null],[13,"ReverseSearchHistory","","reverse-search-history",29,null],[13,"SelfInsert","","self-insert",29,null],[13,"Suspend","","Suspend signal (Ctrl-Z on unix platform)",29,null],[13,"TransposeChars","","transpose-chars",29,null],[13,"TransposeWords","","transpose-words",29,null],[13,"Undo","","undo",29,null],[13,"Unknown","","Unsupported / unexpected",29,null],[13,"UpcaseWord","","upcase-word",29,null],[13,"ViYankTo","","vi-yank-to",29,null],[13,"Yank","","yank, vi-put",29,null],[13,"YankPop","","yank-pop",29,null],[13,"LineUpOrPreviousHistory","","moves cursor to the line above or switches to prev history…",29,null],[13,"LineDownOrNextHistory","","moves cursor to the line below or switches to next history…",29,null],[13,"AcceptOrInsertLine","","accepts the line when cursor is at the end of the text…",29,null],[4,"Movement","","Where to move",null,null],[13,"WholeLine","","Whole current line (not really a movement but a range)",30,null],[13,"BeginningOfLine","","beginning-of-line",30,null],[13,"EndOfLine","","end-of-line",30,null],[13,"BackwardWord","","backward-word, vi-prev-word",30,null],[13,"ForwardWord","","forward-word, vi-end-word, vi-next-word",30,null],[13,"ViCharSearch","","vi-char-search",30,null],[13,"ViFirstPrint","","vi-first-print",30,null],[13,"BackwardChar","","backward-char",30,null],[13,"ForwardChar","","forward-char",30,null],[13,"LineUp","","move to the same column on the previous line",30,null],[13,"LineDown","","move to the same column on the next line",30,null],[13,"WholeBuffer","","Whole user input (not really a movement but a range)",30,null],[13,"BeginningOfBuffer","","beginning-of-buffer",30,null],[13,"EndOfBuffer","","end-of-buffer",30,null],[6,"RepeatCount","","The number of times one command should be repeated.",null,null],[4,"Word","","Different word definitions",null,null],[13,"Big","","non-blanks characters",31,null],[13,"Emacs","","alphanumeric characters",31,null],[13,"Vi","","alphanumeric (and \'_\') characters",31,null],[4,"KeyPress","","Input key pressed",null,null],[13,"UnknownEscSeq","","Unsupported escape sequence (on unix platform)",32,null],[13,"Backspace","","⌫ or `KeyPress::Ctrl(\'H\')`",32,null],[13,"BackTab","","⇤ (usually Shift-Tab)",32,null],[13,"BracketedPasteStart","","Paste (on unix platform)",32,null],[13,"BracketedPasteEnd","","Paste (on unix platform)",32,null],[13,"Char","","Single char",32,null],[13,"ControlDown","","Ctrl-↓",32,null],[13,"ControlLeft","","Ctrl-←",32,null],[13,"ControlRight","","Ctrl-→",32,null],[13,"ControlUp","","Ctrl-↑",32,null],[13,"Ctrl","","Ctrl-char",32,null],[13,"Delete","","⌦",32,null],[13,"Down","","↓ arrow key",32,null],[13,"End","","⇲",32,null],[13,"Enter","","↵ or `KeyPress::Ctrl(\'M\')`",32,null],[13,"Esc","","Escape or `KeyPress::Ctrl(\'[\')`",32,null],[13,"F","","Function key",32,null],[13,"Home","","⇱",32,null],[13,"Insert","","Insert key",32,null],[13,"Left","","← arrow key",32,null],[13,"Meta","","Escape-char or Alt-char",32,null],[13,"Null","","`KeyPress::Char(\'\\\\0\')`",32,null],[13,"PageDown","","⇟",32,null],[13,"PageUp","","⇞",32,null],[13,"Right","","→ arrow key",32,null],[13,"ShiftDown","","Shift-↓",32,null],[13,"ShiftLeft","","Shift-←",32,null],[13,"ShiftRight","","Shift-→",32,null],[13,"ShiftUp","","Shift-↑",32,null],[13,"Tab","","⇥ or `KeyPress::Ctrl(\'I\')`",32,null],[13,"Up","","↑ arrow key",32,null],[6,"Result","","The error type for I/O and Linux Syscalls (Errno)",null,null],[8,"Helper","","Syntax specific helper.",null,null],[3,"Context","","Completion/suggestion context",null,null],[11,"new","","Constructor. Visible for testing.",33,[[["history",3]]]],[11,"history","","Return an immutable reference to the history object.",33,[[],["history",3]]],[11,"history_index","","The history index we are currently editing",33,[[]]],[3,"Editor","","Line editor",null,null],[11,"new","","Create an editor with the default configuration",34,[[]]],[11,"with_config","","Create an editor with a specific configuration.",34,[[["config",3]]]],[11,"readline","","This method will read a line from STDIN and will display a…",34,[[],[["result",6],["string",3]]]],[11,"readline_with_initial","","This function behaves in the exact same manner as…",34,[[],[["result",6],["string",3]]]],[11,"load_history","","Load the history from the specified file.",34,[[],["result",6]]],[11,"save_history","","Save the history in the specified file.",34,[[],["result",6]]],[11,"add_history_entry","","Add a new entry in the history.",34,[[["asref",8],["string",3],["into",8]]]],[11,"clear_history","","Clear history.",34,[[]]],[11,"history_mut","","Return a mutable reference to the history object.",34,[[],["history",3]]],[11,"history","","Return an immutable reference to the history object.",34,[[],["history",3]]],[11,"set_helper","","Register a callback function to be called for…",34,[[["option",4]]]],[11,"helper_mut","","Return a mutable reference to the helper.",34,[[],["option",4]]],[11,"helper","","Return an immutable reference to the helper.",34,[[],["option",4]]],[11,"bind_sequence","","Bind a sequence to a command.",34,[[["cmd",4],["keypress",4]],[["option",4],["cmd",4]]]],[11,"unbind_sequence","","Remove a binding for the given sequence.",34,[[["keypress",4]],[["option",4],["cmd",4]]]],[11,"iter","","Returns an iterator over edited lines",34,[[]]],[11,"dimensions","","If output stream is a tty, this function returns its width…",34,[[],["option",4]]],[11,"from","rustyline::completion","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","rustyline::config","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","rustyline::error","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","rustyline::highlight","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","rustyline::hint","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","rustyline::history","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","rustyline","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","rustyline::line_buffer","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","rustyline::validate","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","rustyline","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"display","rustyline::completion","",1,[[]]],[11,"replacement","","",1,[[]]],[11,"complete","","",4,[[["context",3]],["result",6]]],[11,"config_mut","rustyline::config","",12,[[],["config",3]]],[11,"config_mut","rustyline","",34,[[],["config",3]]],[11,"set_max_history_size","","",34,[[]]],[11,"set_history_ignore_dups","","",34,[[]]],[11,"set_history_ignore_space","","",34,[[]]],[11,"set_color_mode","","",34,[[["colormode",4]]]],[11,"highlight","rustyline::highlight","",16,[[],["cow",4]]],[11,"highlight_char","","",16,[[]]],[11,"hint","rustyline::hint","",35,[[["context",3]],[["option",4],["string",3]]]],[11,"validate","rustyline::validate","",25,[[["validationcontext",3]],[["result",6],["validationresult",4]]]],[11,"from","rustyline::error","",14,[[["error",3]]]],[11,"from","","",14,[[["errorkind",4]]]],[11,"from","","",14,[[["error",4]]]],[11,"next_back","rustyline::history","",36,[[],[["option",4],["string",3]]]],[11,"next","","",36,[[],[["option",4],["string",3]]]],[11,"size_hint","","",36,[[]]],[11,"clone","rustyline::completion","",3,[[],["quote",4]]],[11,"clone","rustyline::config","",5,[[],["config",3]]],[11,"clone","","",6,[[],["bellstyle",4]]],[11,"clone","","",7,[[],["historyduplicates",4]]],[11,"clone","","",8,[[],["completiontype",4]]],[11,"clone","","",9,[[],["editmode",4]]],[11,"clone","","",10,[[],["colormode",4]]],[11,"clone","","",11,[[],["outputstreamtype",4]]],[11,"clone","","",12,[[],["builder",3]]],[11,"clone","rustyline::history","",18,[[],["direction",4]]],[11,"clone","rustyline","",29,[[],["cmd",4]]],[11,"clone","","",31,[[],["word",4]]],[11,"clone","","",27,[[],["at",4]]],[11,"clone","","",26,[[],["anchor",4]]],[11,"clone","","",28,[[],["charsearch",4]]],[11,"clone","","",30,[[],["movement",4]]],[11,"clone","","",32,[[],["keypress",4]]],[11,"clone","rustyline::line_buffer","",20,[[],["wordaction",4]]],[11,"default","rustyline::completion","",4,[[]]],[11,"default","rustyline::config","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",12,[[],["builder",3]]],[11,"default","rustyline::highlight","",16,[[],["matchingbrackethighlighter",3]]],[11,"default","rustyline::history","",19,[[],["history",3]]],[11,"default","rustyline::validate","",25,[[],["matchingbracketvalidator",3]]],[11,"eq","rustyline::completion","",3,[[["quote",4]]]],[11,"eq","rustyline::config","",5,[[["config",3]]]],[11,"ne","","",5,[[["config",3]]]],[11,"eq","","",6,[[["bellstyle",4]]]],[11,"eq","","",7,[[["historyduplicates",4]]]],[11,"eq","","",8,[[["completiontype",4]]]],[11,"eq","","",9,[[["editmode",4]]]],[11,"eq","","",10,[[["colormode",4]]]],[11,"eq","","",11,[[["outputstreamtype",4]]]],[11,"eq","rustyline::history","",18,[[["direction",4]]]],[11,"eq","rustyline","",29,[[["cmd",4]]]],[11,"ne","","",29,[[["cmd",4]]]],[11,"eq","","",31,[[["word",4]]]],[11,"eq","","",27,[[["at",4]]]],[11,"eq","","",26,[[["anchor",4]]]],[11,"eq","","",28,[[["charsearch",4]]]],[11,"ne","","",28,[[["charsearch",4]]]],[11,"eq","","",30,[[["movement",4]]]],[11,"ne","","",30,[[["movement",4]]]],[11,"eq","","",32,[[["keypress",4]]]],[11,"ne","","",32,[[["keypress",4]]]],[11,"deref","rustyline::line_buffer","",21,[[]]],[11,"fmt","rustyline::completion","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline::config","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline::error","",14,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline::history","",18,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline::line_buffer","",21,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline","",34,[[["formatter",3]],["result",6]]],[11,"fmt","rustyline::error","",14,[[["formatter",3]],["result",6]]],[11,"index","rustyline::history","",19,[[],["string",3]]],[11,"hash","rustyline","",32,[[]]],[11,"as_raw_fd","rustyline::config","",11,[[],["rawfd",6]]],[11,"should_reset_kill_ring","rustyline","Tells if current command should reset kill ring.",29,[[]]]],"p":[[8,"Candidate"],[3,"Pair"],[8,"Completer"],[4,"Quote"],[3,"FilenameCompleter"],[3,"Config"],[4,"BellStyle"],[4,"HistoryDuplicates"],[4,"CompletionType"],[4,"EditMode"],[4,"ColorMode"],[4,"OutputStreamType"],[3,"Builder"],[8,"Configurer"],[4,"ReadlineError"],[8,"Highlighter"],[3,"MatchingBracketHighlighter"],[8,"Hinter"],[4,"Direction"],[3,"History"],[4,"WordAction"],[3,"LineBuffer"],[4,"ValidationResult"],[3,"ValidationContext"],[8,"Validator"],[3,"MatchingBracketValidator"],[4,"Anchor"],[4,"At"],[4,"CharSearch"],[4,"Cmd"],[4,"Movement"],[4,"Word"],[4,"KeyPress"],[3,"Context"],[3,"Editor"],[3,"HistoryHinter"],[3,"Iter"]]},\
"scolapasta_hex":{"doc":"Functions for encoding sequences of bytes into base 16 hex…","i":[[5,"encode","scolapasta_hex","Encode arbitrary octets as base16. Returns a [`String`].",null,[[["asref",8]],["string",3]]],[5,"encode_into","","Encode arbitrary octets as base16 into the given [`String`].",null,[[["asref",8],["string",3]]]],[5,"format_into","","Write hex-encoded octets into the given [`fmt::Write`].",null,[[],["result",6]]],[5,"write_into","","Write hex-encoded octets into the given [`io::Write`].",null,[[],["result",6]]],[3,"Hex","","An iterator over a byte slice that returns the data as a…",null,null],[11,"len","","Returns the number of remaining hex encoded characters in…",0,[[]]],[11,"is_empty","","Returns whether the iterator has no more remaining escape…",0,[[]]],[5,"escape_byte","","Map from a `u8` to a hex encoded string literal.",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"count","","",0,[[]]],[11,"size_hint","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"clone","","",0,[[],["hex",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Hex"]]},\
"scolapasta_string_escape":{"doc":"Routines for debug escaping Ruby Strings.","i":[[17,"REPLACEMENT_CHARACTER","scolapasta_string_escape","`U+FFFD REPLACEMENT CHARACTER` (�) is used in Unicode to…",null,null],[5,"is_ascii_char_with_escape","","Returns whether a [`char`] is ASCII and has a literal…",null,[[]]],[3,"Literal","","Iterator of Ruby debug escape sequences for a byte.",null,null],[5,"format_debug_escape_into","","Write a UTF-8 debug representation of a byte slice into…",null,[[],["result",6]]],[17,"REPLACEMENT_CHARACTER_BYTES","","The UTF-8 encoded byte representation of `U+FFFD…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","Map from a `u8` to a String literal of debug escape code.",0,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"nth_back","","",0,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"count","","",0,[[]]],[11,"size_hint","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"clone","","",0,[[],["literal",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"as_str","","Views the underlying data as a subslice of the original…",0,[[]]],[11,"debug_escape","","Return the debug escape code for the given byte.",0,[[]]]],"p":[[3,"Literal"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain…","i":[[4,"CollectionAllocErr","smallvec","Error type for APIs with fallible heap allocation",null,null],[13,"CapacityOverflow","","Overflow `usize::MAX` or other error during size computation",0,null],[13,"AllocErr","","The allocator return an error",0,null],[12,"layout","smallvec::CollectionAllocErr","The layout that was passed to the allocator",1,null],[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[11,"new","","Construct an empty vector",2,[[],["smallvec",3]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",2,[[]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",2,[[["vec",3]],["smallvec",3]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",2,[[],["smallvec",3]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",2,[[],["smallvec",3]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",2,[[["maybeuninit",19]],["smallvec",3]]],[11,"set_len","","Sets the length of a vector.",2,[[]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",2,[[]]],[11,"len","","The number of elements stored in the vector",2,[[]]],[11,"is_empty","","Returns `true` if the vector is empty",2,[[]]],[11,"capacity","","The number of items the vector can hold without reallocating",2,[[]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",2,[[]]],[11,"drain","","Creates a draining iterator that removes the specified…",2,[[],["drain",3]]],[11,"push","","Append an item to the vector.",2,[[]]],[11,"pop","","Remove an item from the end of the vector and return it,…",2,[[],["option",4]]],[11,"append","","Moves all the elements of `other` into `self`, leaving…",2,[[["smallvec",3]]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",2,[[]]],[11,"try_grow","","Re-allocate to set the capacity to `max(new_cap,…",2,[[],[["result",4],["collectionallocerr",4]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",2,[[]]],[11,"try_reserve","","Reserve capacity for `additional` more elements to be…",2,[[],[["result",4],["collectionallocerr",4]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",2,[[]]],[11,"try_reserve_exact","","Reserve the minimum capacity for `additional` more…",2,[[],[["result",4],["collectionallocerr",4]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",2,[[]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",2,[[]]],[11,"as_slice","","Extracts a slice containing the entire vector.",2,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",2,[[]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",2,[[]]],[11,"clear","","Remove all elements from the vector.",2,[[]]],[11,"remove","","Remove and return the element at position `index`,…",2,[[]]],[11,"insert","","Insert an element at position `index`, shifting all…",2,[[]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",2,[[["intoiterator",8]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",2,[[],["vec",3]]],[11,"into_boxed_slice","","Converts a `SmallVec` into a `Box<[T]>` without…",2,[[],["box",3]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",2,[[],["result",4]]],[11,"retain","","Retains only the elements specified by the predicate.",2,[[["fnmut",8]]]],[11,"dedup","","Removes consecutive duplicate elements.",2,[[]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",2,[[]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",2,[[]]],[11,"resize_with","","Resizes the `SmallVec` in-place so that `len` is equal to…",2,[[]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",2,[[],["smallvec",3]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",2,[[]]],[11,"as_mut_ptr","","Returns a raw mutable pointer to the vector\'s buffer.",2,[[]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",2,[[]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",2,[[]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",2,[[]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",2,[[]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`.",2,[[]]],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array\'s elements.",4,null],[10,"size","","Returns the number of items the array can hold.",4,[[]]],[8,"ToSmallVec","","Convenience trait for constructing a `SmallVec`",null,null],[10,"to_smallvec","","Construct a new `SmallVec` from a slice.",5,[[],["smallvec",3]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"from","","",0,[[["layouterr",6]]]],[11,"from","","",2,[[],["smallvec",3]]],[11,"from","","",2,[[["vec",3]],["smallvec",3]]],[11,"from","","",2,[[],["smallvec",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["smallvec",3]]]],[11,"cmp","","",2,[[["smallvec",3]],["ordering",4]]],[11,"partial_cmp","","",2,[[["smallvec",3]],[["option",4],["ordering",4]]]],[11,"drop","","",6,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"index","","",2,[[]]],[11,"index_mut","","",2,[[]]],[11,"hash","","",2,[[]]],[11,"len","","",6,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"from_iter","","",2,[[["intoiterator",8]],["smallvec",3]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",2,[[]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"into_iter","","",2,[[]]],[11,"extend","","",2,[[["intoiterator",8]]]],[11,"clone","","",2,[[],["smallvec",3]]],[11,"clone","","",3,[[],["intoiter",3]]],[11,"default","","",2,[[],["smallvec",3]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[3,"SmallVec"],[3,"IntoIter"],[8,"Array"],[8,"ToSmallVec"],[3,"Drain"]]},\
"spinoso_array":{"doc":"Contiguous growable vector types that implement the Ruby…","i":[[3,"SmallArray","spinoso_array","A contiguous growable array type based on `SmallVec<[T;…",null,null],[17,"INLINE_CAPACITY","","Vectors that implement the small vector optimization can…",null,null],[3,"Array","","A contiguous growable array type based on `Vec<T>`.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"deref","","",0,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",0,[[]]],[11,"deref_mut","","",1,[[]]],[11,"from","","",0,[[["vec",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["box",3]]]],[11,"from","","",0,[[["cow",4]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["smallvec",3]]]],[11,"from","","",0,[[["array",3]]]],[11,"from","","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["box",3]]]],[11,"from","","",1,[[["cow",4]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["smallvec",3]]]],[11,"from","","",1,[[["smallarray",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["smallvec",3]]]],[11,"eq","","",0,[[["vec",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["box",3]]]],[11,"eq","","",1,[[["smallarray",3]]]],[11,"eq","","",0,[[["array",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["smallarray",3]]]],[11,"ne","","",0,[[["smallarray",3]]]],[11,"eq","","",1,[[["vec",3]]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[["box",3]]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[["array",3]]]],[11,"ne","","",1,[[["array",3]]]],[11,"cmp","","",0,[[["smallarray",3]],["ordering",4]]],[11,"cmp","","",1,[[["array",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["smallarray",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["smallarray",3]]]],[11,"le","","",0,[[["smallarray",3]]]],[11,"gt","","",0,[[["smallarray",3]]]],[11,"ge","","",0,[[["smallarray",3]]]],[11,"partial_cmp","","",1,[[["array",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["array",3]]]],[11,"le","","",1,[[["array",3]]]],[11,"gt","","",1,[[["array",3]]]],[11,"ge","","",1,[[["array",3]]]],[11,"index","","",0,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"from_iter","","",0,[[]]],[11,"from_iter","","",0,[[]]],[11,"from_iter","","",1,[[]]],[11,"from_iter","","",1,[[]]],[11,"as_ref","","",0,[[],["smallvec",3]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",1,[[],["vec",3]]],[11,"as_ref","","",1,[[]]],[11,"as_mut","","",0,[[],["smallvec",3]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",1,[[],["vec",3]]],[11,"as_mut","","",1,[[]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["smallarray",3]]],[11,"clone","","",1,[[],["array",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"new","","Construct a new, empty `SmallArray<T>`.",0,[[]]],[11,"with_capacity","","Construct a new, empty `SmallArray<T>` with the specified…",0,[[]]],[11,"assoc","","Constuct a new two-element `SmallArray` from the given…",0,[[]]],[11,"iter","","Returns an iterator over the slice.",0,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",0,[[],["itermut",3]]],[11,"as_slice","","Extracts a slice containing the entire vector.",0,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire vector.",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",0,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",0,[[]]],[11,"set_len","","Set the vector\'s length without dropping or moving out…",0,[[]]],[11,"into_inner","","Consume the array and return the inner `SmallVec<[T;…",0,[[],["smallvec",3]]],[11,"into_vec","","Consume the array and return its elements as a `Vec<T>`.",0,[[],["vec",3]]],[11,"into_boxed_slice","","Converts the vector into `Box<[T]>`.",0,[[],["box",3]]],[11,"capacity","","Returns the number of elements the vector can hold without…",0,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",0,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",0,[[]]],[11,"clear","","Clears the vector, removing all values.",0,[[]]],[11,"len","","Returns the number of elements in the vector, also…",0,[[]]],[11,"is_empty","","Returns `true` if the vector contains no elements.",0,[[]]],[11,"get","","Returns a reference to an element at the index.",0,[[],["option",4]]],[11,"delete_at","","Deletes the element at the specified `index`, returning…",0,[[],["option",4]]],[11,"first","","Returns the first element from the vector, or [`None`] if…",0,[[],["option",4]]],[11,"first_n","","Returns up to `n` of the first elements from the vector,…",0,[[]]],[11,"last","","Returns the last element from the vector, or [`None`] if…",0,[[],["option",4]]],[11,"last_n","","Returns up to `n` of the last elements from the vector, or…",0,[[]]],[11,"take_n","","Returns a slice of the underlying vector that includes…",0,[[]]],[11,"drop_n","","Returns a slice of the underlying vector that excludes the…",0,[[]]],[11,"pop","","Removes the last element from the vector and returns it,…",0,[[],["option",4]]],[11,"pop_n","","Removes the last `n` elements from the vector.",0,[[]]],[11,"push","","Appends an element to the back of the vector.",0,[[]]],[11,"reverse","","Reverses the order of elements of the vector, in place.",0,[[]]],[11,"shift","","Removes the first element of the vector and returns it…",0,[[],["option",4]]],[11,"shift_n","","Removes the first `n` elements from the vector.",0,[[]]],[11,"unshift","","Inserts an element to the front of the vector.",0,[[]]],[11,"slice","","Return a reference to a subslice of the vector.",0,[[]]],[11,"with_len_and_default","","Construct a new `SmallArray<T>` with length `len` and all…",0,[[]]],[11,"concat","","Appends the elements of `other` to self.",0,[[]]],[11,"unshift_n","","Prepends the elements of `other` to self.",0,[[]]],[11,"set","","Set element at position `index` within the vector,…",0,[[]]],[11,"set_with_drain","","Insert element at position `start` within the vector and…",0,[[]]],[11,"insert_slice","","Insert the elements from a slice at a position `index` in…",0,[[]]],[11,"set_slice","","Insert the elements from a slice at a position `index` in…",0,[[]]],[11,"new","","Construct a new, empty `Array<T>`.",1,[[]]],[11,"with_capacity","","Construct a new, empty `Array<T>` with the specified…",1,[[]]],[11,"assoc","","Constuct a new two-element `Array` from the given arguments.",1,[[]]],[11,"iter","","Returns an iterator over the slice.",1,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",1,[[],["itermut",3]]],[11,"as_slice","","Extracts a slice containing the entire vector.",1,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire vector.",1,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",1,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",1,[[]]],[11,"set_len","","Set the vector\'s length without dropping or moving out…",1,[[]]],[11,"from_raw_parts","","Creates a `Array<T>` directly from the raw components of…",1,[[]]],[11,"into_raw_parts","","Decomposes an `Array<T>` into its raw components.",1,[[]]],[11,"into_inner","","Consume the array and return the inner `Vec<T>`.",1,[[],["vec",3]]],[11,"into_vec","","Consume the array and return its elements as a `Vec<T>`.",1,[[],["vec",3]]],[11,"into_boxed_slice","","Converts the vector into `Box<[T]>`.",1,[[],["box",3]]],[11,"capacity","","Returns the number of elements the vector can hold without…",1,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",1,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",1,[[]]],[11,"clear","","Clears the vector, removing all values.",1,[[]]],[11,"len","","Returns the number of elements in the vector, also…",1,[[]]],[11,"is_empty","","Returns `true` if the vector contains no elements.",1,[[]]],[11,"get","","Returns a reference to an element at the index.",1,[[],["option",4]]],[11,"delete_at","","Deletes the element at the specified `index`, returning…",1,[[],["option",4]]],[11,"first","","Returns the first element from the vector, or [`None`] if…",1,[[],["option",4]]],[11,"first_n","","Returns up to `n` of the first elements from the vector,…",1,[[]]],[11,"last","","Returns the last element from the vector, or [`None`] if…",1,[[],["option",4]]],[11,"last_n","","Returns up to `n` of the last elements from the vector, or…",1,[[]]],[11,"take_n","","Returns a slice of the underlying vector that includes…",1,[[]]],[11,"drop_n","","Returns a slice of the underlying vector that excludes the…",1,[[]]],[11,"pop","","Removes the last element from the vector and returns it,…",1,[[],["option",4]]],[11,"pop_n","","Removes the last `n` elements from the vector.",1,[[]]],[11,"push","","Appends an element to the back of the vector.",1,[[]]],[11,"reverse","","Reverses the order of elements of the vector, in place.",1,[[]]],[11,"shift","","Removes the first element of the vector and returns it…",1,[[],["option",4]]],[11,"shift_n","","Removes the first `n` elements from the vector.",1,[[]]],[11,"unshift","","Inserts an element to the front of the vector.",1,[[]]],[11,"slice","","Return a reference to a subslice of the vector.",1,[[]]],[11,"with_len_and_default","","Construct a new `Array<T>` with length `len` and all…",1,[[]]],[11,"concat","","Appends the elements of `other` to self.",1,[[]]],[11,"unshift_n","","Prepends the elements of `other` to self.",1,[[]]],[11,"set","","Set element at position `index` within the vector,…",1,[[]]],[11,"set_with_drain","","Insert element at position `start` within the vector and…",1,[[]]],[11,"insert_slice","","Insert the elements from a slice at a position `index` in…",1,[[]]],[11,"set_slice","","Insert the elements from a slice at a position `index` in…",1,[[]]]],"p":[[3,"SmallArray"],[3,"Array"]]},\
"spinoso_env":{"doc":"ENV is a hash-like accessor for environment variables.","i":[[3,"Memory","spinoso_env","A hash-like accessor for environment variables using a…",null,null],[3,"System","","A hash-like accessor for environment variables using…",null,null],[17,"RUBY_API_POLYFILLS","","Ruby implementations of the full `ENV` API.",null,null],[4,"Error","","Sum type of all errors possibly returned from `get`,…",null,null],[13,"Argument","","Error that indicates an argument parsing or value logic…",0,null],[13,"Invalid","","Error that indicates the access to the underlying platform…",0,null],[3,"ArgumentError","","Error that indicates an argument parsing or value logic…",null,null],[11,"new","","Construct a new, default argument error.",1,[[]]],[11,"with_message","","Construct a new, argument error with a message.",1,[[]]],[11,"message","","Retrieve the exception message associated with this…",1,[[]]],[3,"InvalidError","","Error that indicates the underlying platform API returned…",null,null],[11,"new","","Construct a new, default invalid error.",2,[[]]],[11,"with_message","","Construct a new, invalid error with a message.",2,[[]]],[11,"message","","Retrieve the exception message associated with this…",2,[[]]],[11,"into_message","","Consume this error and return the inner message.",2,[[],["cow",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[["argumenterror",3]]]],[11,"from","","",0,[[["invaliderror",3]]]],[11,"from","","",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["vec",3]]]],[11,"clone","","",3,[[],["memory",3]]],[11,"clone","","",4,[[],["system",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",1,[[],["argumenterror",3]]],[11,"clone","","",2,[[],["invaliderror",3]]],[11,"default","","",3,[[],["memory",3]]],[11,"default","","",4,[[],["system",3]]],[11,"default","","",1,[[]]],[11,"cmp","","",4,[[["system",3]],["ordering",4]]],[11,"cmp","","",0,[[["error",4]],["ordering",4]]],[11,"cmp","","",1,[[["argumenterror",3]],["ordering",4]]],[11,"cmp","","",2,[[["invaliderror",3]],["ordering",4]]],[11,"eq","","",3,[[["memory",3]]]],[11,"ne","","",3,[[["memory",3]]]],[11,"eq","","",4,[[["system",3]]]],[11,"ne","","",4,[[["system",3]]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",1,[[["argumenterror",3]]]],[11,"ne","","",1,[[["argumenterror",3]]]],[11,"eq","","",2,[[["invaliderror",3]]]],[11,"ne","","",2,[[["invaliderror",3]]]],[11,"partial_cmp","","",4,[[["system",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["system",3]]]],[11,"le","","",4,[[["system",3]]]],[11,"gt","","",4,[[["system",3]]]],[11,"ge","","",4,[[["system",3]]]],[11,"partial_cmp","","",0,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["error",4]]]],[11,"le","","",0,[[["error",4]]]],[11,"gt","","",0,[[["error",4]]]],[11,"ge","","",0,[[["error",4]]]],[11,"partial_cmp","","",1,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["argumenterror",3]]]],[11,"le","","",1,[[["argumenterror",3]]]],[11,"gt","","",1,[[["argumenterror",3]]]],[11,"ge","","",1,[[["argumenterror",3]]]],[11,"partial_cmp","","",2,[[["invaliderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["invaliderror",3]]]],[11,"le","","",2,[[["invaliderror",3]]]],[11,"gt","","",2,[[["invaliderror",3]]]],[11,"ge","","",2,[[["invaliderror",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"new","","Constructs a new, empty ENV `Memory` backend.",3,[[]]],[11,"get","","Retrieves the value for environment variable `name`.",3,[[],[["argumenterror",3],["option",4],["result",4]]]],[11,"put","","Sets the environment variable `name` to `value`.",3,[[["option",4]],[["result",4],["error",4]]]],[11,"to_map","","Serialize the environ to a [`HashMap`].",3,[[],[["hashmap",3],["argumenterror",3],["result",4]]]],[11,"new","","Constructs a new, default ENV `System` backend.",4,[[]]],[11,"get","","Retrieves the value for environment variable `name`.",4,[[],[["option",4],["argumenterror",3],["result",4]]]],[11,"put","","Sets the environment variable `name` to `value`.",4,[[["option",4]],[["result",4],["error",4]]]],[11,"to_map","","Serialize the environ to a [`HashMap`].",4,[[],[["hashmap",3],["argumenterror",3],["result",4]]]]],"p":[[4,"Error"],[3,"ArgumentError"],[3,"InvalidError"],[3,"Memory"],[3,"System"]]},\
"spinoso_exception":{"doc":"Built in Ruby exception types.","i":[[0,"core","spinoso_exception","Ruby exception class implementations.",null,null],[3,"ArgumentError","spinoso_exception::core","Ruby `ArgumentError` error type.",null,null],[3,"EncodingError","","Ruby `EncodingError` error type.",null,null],[3,"EOFError","","Ruby `EOFError` error type.",null,null],[3,"Exception","","Ruby `Exception` error type.",null,null],[3,"Fatal","","Ruby `fatal` error type.",null,null],[3,"FiberError","","Ruby `FiberError` error type.",null,null],[3,"FloatDomainError","","Ruby `FloatDomainError` error type.",null,null],[3,"FrozenError","","Ruby `FrozenError` error type.",null,null],[3,"IndexError","","Ruby `IndexError` error type.",null,null],[3,"Interrupt","","Ruby `Interrupt` error type.",null,null],[3,"IOError","","Ruby `IOError` error type.",null,null],[3,"KeyError","","Ruby `KeyError` error type.",null,null],[3,"LoadError","","Ruby `LoadError` error type.",null,null],[3,"LocalJumpError","","Ruby `LocalJumpError` error type.",null,null],[3,"NameError","","Ruby `NameError` error type.",null,null],[3,"NoMemoryError","","Ruby `NoMemoryError` error type.",null,null],[3,"NoMethodError","","Ruby `NoMethodError` error type.",null,null],[3,"NotImplementedError","","Ruby `NotImplementedError` error type.",null,null],[3,"RangeError","","Ruby `RangeError` error type.",null,null],[3,"RegexpError","","Ruby `RegexpError` error type.",null,null],[3,"RuntimeError","","Ruby `RuntimeError` error type.",null,null],[3,"ScriptError","","Ruby `ScriptError` error type.",null,null],[3,"SecurityError","","Ruby `SecurityError` error type.",null,null],[3,"SignalException","","Ruby `SignalException` error type.",null,null],[3,"StandardError","","Ruby `StandardError` error type.",null,null],[3,"StopIteration","","Ruby `StopIteration` error type.",null,null],[3,"SyntaxError","","Ruby `SyntaxError` error type.",null,null],[3,"SystemCallError","","Ruby `SystemCallError` error type.",null,null],[3,"SystemExit","","Ruby `SystemExit` error type.",null,null],[3,"SystemStackError","","Ruby `SystemStackError` error type.",null,null],[3,"ThreadError","","Ruby `ThreadError` error type.",null,null],[3,"TypeError","","Ruby `TypeError` error type.",null,null],[3,"UncaughtThrowError","","Ruby `UncaughtThrowError` error type.",null,null],[3,"ZeroDivisionError","","Ruby `ZeroDivisionError` error type.",null,null],[3,"ArgumentError","spinoso_exception","Ruby `ArgumentError` error type.",null,null],[3,"EncodingError","","Ruby `EncodingError` error type.",null,null],[3,"EOFError","","Ruby `EOFError` error type.",null,null],[3,"Exception","","Ruby `Exception` error type.",null,null],[3,"Fatal","","Ruby `fatal` error type.",null,null],[3,"FiberError","","Ruby `FiberError` error type.",null,null],[3,"FloatDomainError","","Ruby `FloatDomainError` error type.",null,null],[3,"FrozenError","","Ruby `FrozenError` error type.",null,null],[3,"IndexError","","Ruby `IndexError` error type.",null,null],[3,"Interrupt","","Ruby `Interrupt` error type.",null,null],[3,"IOError","","Ruby `IOError` error type.",null,null],[3,"KeyError","","Ruby `KeyError` error type.",null,null],[3,"LoadError","","Ruby `LoadError` error type.",null,null],[3,"LocalJumpError","","Ruby `LocalJumpError` error type.",null,null],[3,"NameError","","Ruby `NameError` error type.",null,null],[3,"NoMemoryError","","Ruby `NoMemoryError` error type.",null,null],[3,"NoMethodError","","Ruby `NoMethodError` error type.",null,null],[3,"NotImplementedError","","Ruby `NotImplementedError` error type.",null,null],[3,"RangeError","","Ruby `RangeError` error type.",null,null],[3,"RegexpError","","Ruby `RegexpError` error type.",null,null],[3,"RuntimeError","","Ruby `RuntimeError` error type.",null,null],[3,"ScriptError","","Ruby `ScriptError` error type.",null,null],[3,"SecurityError","","Ruby `SecurityError` error type.",null,null],[3,"SignalException","","Ruby `SignalException` error type.",null,null],[3,"StandardError","","Ruby `StandardError` error type.",null,null],[3,"StopIteration","","Ruby `StopIteration` error type.",null,null],[3,"SyntaxError","","Ruby `SyntaxError` error type.",null,null],[3,"SystemCallError","","Ruby `SystemCallError` error type.",null,null],[3,"SystemExit","","Ruby `SystemExit` error type.",null,null],[3,"SystemStackError","","Ruby `SystemStackError` error type.",null,null],[3,"ThreadError","","Ruby `ThreadError` error type.",null,null],[3,"TypeError","","Ruby `TypeError` error type.",null,null],[3,"UncaughtThrowError","","Ruby `UncaughtThrowError` error type.",null,null],[3,"ZeroDivisionError","","Ruby `ZeroDivisionError` error type.",null,null],[8,"RubyException","","Polymorphic exception type that corresponds to Ruby\'s…",null,null],[10,"message","","The exception\'s message.",0,[[],["cow",4]]],[10,"name","","The exception\'s class name.",0,[[],["cow",4]]],[11,"from","spinoso_exception::core","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"message","","",1,[[],["cow",4]]],[11,"name","","",1,[[],["cow",4]]],[11,"message","","",2,[[],["cow",4]]],[11,"name","","",2,[[],["cow",4]]],[11,"message","","",3,[[],["cow",4]]],[11,"name","","",3,[[],["cow",4]]],[11,"message","","",4,[[],["cow",4]]],[11,"name","","",4,[[],["cow",4]]],[11,"message","","",5,[[],["cow",4]]],[11,"name","","",5,[[],["cow",4]]],[11,"message","","",6,[[],["cow",4]]],[11,"name","","",6,[[],["cow",4]]],[11,"message","","",7,[[],["cow",4]]],[11,"name","","",7,[[],["cow",4]]],[11,"message","","",8,[[],["cow",4]]],[11,"name","","",8,[[],["cow",4]]],[11,"message","","",9,[[],["cow",4]]],[11,"name","","",9,[[],["cow",4]]],[11,"message","","",10,[[],["cow",4]]],[11,"name","","",10,[[],["cow",4]]],[11,"message","","",11,[[],["cow",4]]],[11,"name","","",11,[[],["cow",4]]],[11,"message","","",12,[[],["cow",4]]],[11,"name","","",12,[[],["cow",4]]],[11,"message","","",13,[[],["cow",4]]],[11,"name","","",13,[[],["cow",4]]],[11,"message","","",14,[[],["cow",4]]],[11,"name","","",14,[[],["cow",4]]],[11,"message","","",15,[[],["cow",4]]],[11,"name","","",15,[[],["cow",4]]],[11,"message","","",16,[[],["cow",4]]],[11,"name","","",16,[[],["cow",4]]],[11,"message","","",17,[[],["cow",4]]],[11,"name","","",17,[[],["cow",4]]],[11,"message","","",18,[[],["cow",4]]],[11,"name","","",18,[[],["cow",4]]],[11,"message","","",19,[[],["cow",4]]],[11,"name","","",19,[[],["cow",4]]],[11,"message","","",20,[[],["cow",4]]],[11,"name","","",20,[[],["cow",4]]],[11,"message","","",21,[[],["cow",4]]],[11,"name","","",21,[[],["cow",4]]],[11,"message","","",22,[[],["cow",4]]],[11,"name","","",22,[[],["cow",4]]],[11,"message","","",23,[[],["cow",4]]],[11,"name","","",23,[[],["cow",4]]],[11,"message","","",24,[[],["cow",4]]],[11,"name","","",24,[[],["cow",4]]],[11,"message","","",25,[[],["cow",4]]],[11,"name","","",25,[[],["cow",4]]],[11,"message","","",26,[[],["cow",4]]],[11,"name","","",26,[[],["cow",4]]],[11,"message","","",27,[[],["cow",4]]],[11,"name","","",27,[[],["cow",4]]],[11,"message","","",28,[[],["cow",4]]],[11,"name","","",28,[[],["cow",4]]],[11,"message","","",29,[[],["cow",4]]],[11,"name","","",29,[[],["cow",4]]],[11,"message","","",30,[[],["cow",4]]],[11,"name","","",30,[[],["cow",4]]],[11,"message","","",31,[[],["cow",4]]],[11,"name","","",31,[[],["cow",4]]],[11,"message","","",32,[[],["cow",4]]],[11,"name","","",32,[[],["cow",4]]],[11,"message","","",33,[[],["cow",4]]],[11,"name","","",33,[[],["cow",4]]],[11,"message","","",34,[[],["cow",4]]],[11,"name","","",34,[[],["cow",4]]],[11,"from","","",1,[[["string",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["cow",4]]]],[11,"from","","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["cow",4]]]],[11,"from","","",2,[[["string",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["cow",4]]]],[11,"from","","",2,[[["vec",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["cow",4]]]],[11,"from","","",3,[[["string",3]]]],[11,"from","","",3,[[]]],[11,"from","","",3,[[["cow",4]]]],[11,"from","","",3,[[["vec",3]]]],[11,"from","","",3,[[]]],[11,"from","","",3,[[["cow",4]]]],[11,"from","","",4,[[["string",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["cow",4]]]],[11,"from","","",4,[[["vec",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["cow",4]]]],[11,"from","","",5,[[["string",3]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[["cow",4]]]],[11,"from","","",5,[[["vec",3]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[["cow",4]]]],[11,"from","","",6,[[["string",3]]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[["cow",4]]]],[11,"from","","",6,[[["vec",3]]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[["cow",4]]]],[11,"from","","",7,[[["string",3]]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[["cow",4]]]],[11,"from","","",7,[[["vec",3]]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[["cow",4]]]],[11,"from","","",8,[[["string",3]]]],[11,"from","","",8,[[]]],[11,"from","","",8,[[["cow",4]]]],[11,"from","","",8,[[["vec",3]]]],[11,"from","","",8,[[]]],[11,"from","","",8,[[["cow",4]]]],[11,"from","","",9,[[["string",3]]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[["cow",4]]]],[11,"from","","",9,[[["vec",3]]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[["cow",4]]]],[11,"from","","",10,[[["string",3]]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[["cow",4]]]],[11,"from","","",10,[[["vec",3]]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[["cow",4]]]],[11,"from","","",11,[[["string",3]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[["cow",4]]]],[11,"from","","",11,[[["vec",3]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[["cow",4]]]],[11,"from","","",12,[[["string",3]]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[["cow",4]]]],[11,"from","","",12,[[["vec",3]]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[["cow",4]]]],[11,"from","","",13,[[["string",3]]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[["cow",4]]]],[11,"from","","",13,[[["vec",3]]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[["cow",4]]]],[11,"from","","",14,[[["string",3]]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[["cow",4]]]],[11,"from","","",14,[[["vec",3]]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[["cow",4]]]],[11,"from","","",15,[[["string",3]]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[["cow",4]]]],[11,"from","","",15,[[["vec",3]]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[["cow",4]]]],[11,"from","","",16,[[["string",3]]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[["cow",4]]]],[11,"from","","",16,[[["vec",3]]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[["cow",4]]]],[11,"from","","",17,[[["string",3]]]],[11,"from","","",17,[[]]],[11,"from","","",17,[[["cow",4]]]],[11,"from","","",17,[[["vec",3]]]],[11,"from","","",17,[[]]],[11,"from","","",17,[[["cow",4]]]],[11,"from","","",18,[[["string",3]]]],[11,"from","","",18,[[]]],[11,"from","","",18,[[["cow",4]]]],[11,"from","","",18,[[["vec",3]]]],[11,"from","","",18,[[]]],[11,"from","","",18,[[["cow",4]]]],[11,"from","","",19,[[["string",3]]]],[11,"from","","",19,[[]]],[11,"from","","",19,[[["cow",4]]]],[11,"from","","",19,[[["vec",3]]]],[11,"from","","",19,[[]]],[11,"from","","",19,[[["cow",4]]]],[11,"from","","",20,[[["string",3]]]],[11,"from","","",20,[[]]],[11,"from","","",20,[[["cow",4]]]],[11,"from","","",20,[[["vec",3]]]],[11,"from","","",20,[[]]],[11,"from","","",20,[[["cow",4]]]],[11,"from","","",21,[[["string",3]]]],[11,"from","","",21,[[]]],[11,"from","","",21,[[["cow",4]]]],[11,"from","","",21,[[["vec",3]]]],[11,"from","","",21,[[]]],[11,"from","","",21,[[["cow",4]]]],[11,"from","","",22,[[["string",3]]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[["cow",4]]]],[11,"from","","",22,[[["vec",3]]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[["cow",4]]]],[11,"from","","",23,[[["string",3]]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[["cow",4]]]],[11,"from","","",23,[[["vec",3]]]],[11,"from","","",23,[[]]],[11,"from","","",23,[[["cow",4]]]],[11,"from","","",24,[[["string",3]]]],[11,"from","","",24,[[]]],[11,"from","","",24,[[["cow",4]]]],[11,"from","","",24,[[["vec",3]]]],[11,"from","","",24,[[]]],[11,"from","","",24,[[["cow",4]]]],[11,"from","","",25,[[["string",3]]]],[11,"from","","",25,[[]]],[11,"from","","",25,[[["cow",4]]]],[11,"from","","",25,[[["vec",3]]]],[11,"from","","",25,[[]]],[11,"from","","",25,[[["cow",4]]]],[11,"from","","",26,[[["string",3]]]],[11,"from","","",26,[[]]],[11,"from","","",26,[[["cow",4]]]],[11,"from","","",26,[[["vec",3]]]],[11,"from","","",26,[[]]],[11,"from","","",26,[[["cow",4]]]],[11,"from","","",27,[[["string",3]]]],[11,"from","","",27,[[]]],[11,"from","","",27,[[["cow",4]]]],[11,"from","","",27,[[["vec",3]]]],[11,"from","","",27,[[]]],[11,"from","","",27,[[["cow",4]]]],[11,"from","","",28,[[["string",3]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["cow",4]]]],[11,"from","","",28,[[["vec",3]]]],[11,"from","","",28,[[]]],[11,"from","","",28,[[["cow",4]]]],[11,"from","","",29,[[["string",3]]]],[11,"from","","",29,[[]]],[11,"from","","",29,[[["cow",4]]]],[11,"from","","",29,[[["vec",3]]]],[11,"from","","",29,[[]]],[11,"from","","",29,[[["cow",4]]]],[11,"from","","",30,[[["string",3]]]],[11,"from","","",30,[[]]],[11,"from","","",30,[[["cow",4]]]],[11,"from","","",30,[[["vec",3]]]],[11,"from","","",30,[[]]],[11,"from","","",30,[[["cow",4]]]],[11,"from","","",31,[[["string",3]]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[["cow",4]]]],[11,"from","","",31,[[["vec",3]]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[["cow",4]]]],[11,"from","","",32,[[["string",3]]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[["cow",4]]]],[11,"from","","",32,[[["vec",3]]]],[11,"from","","",32,[[]]],[11,"from","","",32,[[["cow",4]]]],[11,"from","","",33,[[["string",3]]]],[11,"from","","",33,[[]]],[11,"from","","",33,[[["cow",4]]]],[11,"from","","",33,[[["vec",3]]]],[11,"from","","",33,[[]]],[11,"from","","",33,[[["cow",4]]]],[11,"from","","",34,[[["string",3]]]],[11,"from","","",34,[[]]],[11,"from","","",34,[[["cow",4]]]],[11,"from","","",34,[[["vec",3]]]],[11,"from","","",34,[[]]],[11,"from","","",34,[[["cow",4]]]],[11,"clone","","",1,[[],["argumenterror",3]]],[11,"clone","","",2,[[],["encodingerror",3]]],[11,"clone","","",3,[[],["eoferror",3]]],[11,"clone","","",4,[[],["exception",3]]],[11,"clone","","",5,[[],["fatal",3]]],[11,"clone","","",6,[[],["fibererror",3]]],[11,"clone","","",7,[[],["floatdomainerror",3]]],[11,"clone","","",8,[[],["frozenerror",3]]],[11,"clone","","",9,[[],["indexerror",3]]],[11,"clone","","",10,[[],["interrupt",3]]],[11,"clone","","",11,[[],["ioerror",3]]],[11,"clone","","",12,[[],["keyerror",3]]],[11,"clone","","",13,[[],["loaderror",3]]],[11,"clone","","",14,[[],["localjumperror",3]]],[11,"clone","","",15,[[],["nameerror",3]]],[11,"clone","","",16,[[],["nomemoryerror",3]]],[11,"clone","","",17,[[],["nomethoderror",3]]],[11,"clone","","",18,[[],["notimplementederror",3]]],[11,"clone","","",19,[[],["rangeerror",3]]],[11,"clone","","",20,[[],["regexperror",3]]],[11,"clone","","",21,[[],["runtimeerror",3]]],[11,"clone","","",22,[[],["scripterror",3]]],[11,"clone","","",23,[[],["securityerror",3]]],[11,"clone","","",24,[[],["signalexception",3]]],[11,"clone","","",25,[[],["standarderror",3]]],[11,"clone","","",26,[[],["stopiteration",3]]],[11,"clone","","",27,[[],["syntaxerror",3]]],[11,"clone","","",28,[[],["systemcallerror",3]]],[11,"clone","","",29,[[],["systemexit",3]]],[11,"clone","","",30,[[],["systemstackerror",3]]],[11,"clone","","",31,[[],["threaderror",3]]],[11,"clone","","",32,[[],["typeerror",3]]],[11,"clone","","",33,[[],["uncaughtthrowerror",3]]],[11,"clone","","",34,[[],["zerodivisionerror",3]]],[11,"default","","",1,[[],["argumenterror",3]]],[11,"default","","",2,[[],["encodingerror",3]]],[11,"default","","",3,[[],["eoferror",3]]],[11,"default","","",4,[[],["exception",3]]],[11,"default","","",5,[[],["fatal",3]]],[11,"default","","",6,[[],["fibererror",3]]],[11,"default","","",7,[[],["floatdomainerror",3]]],[11,"default","","",8,[[],["frozenerror",3]]],[11,"default","","",9,[[],["indexerror",3]]],[11,"default","","",10,[[],["interrupt",3]]],[11,"default","","",11,[[],["ioerror",3]]],[11,"default","","",12,[[],["keyerror",3]]],[11,"default","","",13,[[],["loaderror",3]]],[11,"default","","",14,[[],["localjumperror",3]]],[11,"default","","",15,[[],["nameerror",3]]],[11,"default","","",16,[[],["nomemoryerror",3]]],[11,"default","","",17,[[],["nomethoderror",3]]],[11,"default","","",18,[[],["notimplementederror",3]]],[11,"default","","",19,[[],["rangeerror",3]]],[11,"default","","",20,[[],["regexperror",3]]],[11,"default","","",21,[[],["runtimeerror",3]]],[11,"default","","",22,[[],["scripterror",3]]],[11,"default","","",23,[[],["securityerror",3]]],[11,"default","","",24,[[],["signalexception",3]]],[11,"default","","",25,[[],["standarderror",3]]],[11,"default","","",26,[[],["stopiteration",3]]],[11,"default","","",27,[[],["syntaxerror",3]]],[11,"default","","",28,[[],["systemcallerror",3]]],[11,"default","","",29,[[],["systemexit",3]]],[11,"default","","",30,[[],["systemstackerror",3]]],[11,"default","","",31,[[],["threaderror",3]]],[11,"default","","",32,[[],["typeerror",3]]],[11,"default","","",33,[[],["uncaughtthrowerror",3]]],[11,"default","","",34,[[],["zerodivisionerror",3]]],[11,"cmp","","",1,[[["argumenterror",3]],["ordering",4]]],[11,"cmp","","",2,[[["encodingerror",3]],["ordering",4]]],[11,"cmp","","",3,[[["eoferror",3]],["ordering",4]]],[11,"cmp","","",4,[[["exception",3]],["ordering",4]]],[11,"cmp","","",5,[[["fatal",3]],["ordering",4]]],[11,"cmp","","",6,[[["fibererror",3]],["ordering",4]]],[11,"cmp","","",7,[[["floatdomainerror",3]],["ordering",4]]],[11,"cmp","","",8,[[["frozenerror",3]],["ordering",4]]],[11,"cmp","","",9,[[["indexerror",3]],["ordering",4]]],[11,"cmp","","",10,[[["interrupt",3]],["ordering",4]]],[11,"cmp","","",11,[[["ioerror",3]],["ordering",4]]],[11,"cmp","","",12,[[["keyerror",3]],["ordering",4]]],[11,"cmp","","",13,[[["loaderror",3]],["ordering",4]]],[11,"cmp","","",14,[[["localjumperror",3]],["ordering",4]]],[11,"cmp","","",15,[[["nameerror",3]],["ordering",4]]],[11,"cmp","","",16,[[["nomemoryerror",3]],["ordering",4]]],[11,"cmp","","",17,[[["nomethoderror",3]],["ordering",4]]],[11,"cmp","","",18,[[["notimplementederror",3]],["ordering",4]]],[11,"cmp","","",19,[[["rangeerror",3]],["ordering",4]]],[11,"cmp","","",20,[[["regexperror",3]],["ordering",4]]],[11,"cmp","","",21,[[["runtimeerror",3]],["ordering",4]]],[11,"cmp","","",22,[[["scripterror",3]],["ordering",4]]],[11,"cmp","","",23,[[["securityerror",3]],["ordering",4]]],[11,"cmp","","",24,[[["signalexception",3]],["ordering",4]]],[11,"cmp","","",25,[[["standarderror",3]],["ordering",4]]],[11,"cmp","","",26,[[["stopiteration",3]],["ordering",4]]],[11,"cmp","","",27,[[["syntaxerror",3]],["ordering",4]]],[11,"cmp","","",28,[[["systemcallerror",3]],["ordering",4]]],[11,"cmp","","",29,[[["systemexit",3]],["ordering",4]]],[11,"cmp","","",30,[[["systemstackerror",3]],["ordering",4]]],[11,"cmp","","",31,[[["threaderror",3]],["ordering",4]]],[11,"cmp","","",32,[[["typeerror",3]],["ordering",4]]],[11,"cmp","","",33,[[["uncaughtthrowerror",3]],["ordering",4]]],[11,"cmp","","",34,[[["zerodivisionerror",3]],["ordering",4]]],[11,"eq","","",1,[[["argumenterror",3]]]],[11,"ne","","",1,[[["argumenterror",3]]]],[11,"eq","","",2,[[["encodingerror",3]]]],[11,"ne","","",2,[[["encodingerror",3]]]],[11,"eq","","",3,[[["eoferror",3]]]],[11,"ne","","",3,[[["eoferror",3]]]],[11,"eq","","",4,[[["exception",3]]]],[11,"ne","","",4,[[["exception",3]]]],[11,"eq","","",5,[[["fatal",3]]]],[11,"ne","","",5,[[["fatal",3]]]],[11,"eq","","",6,[[["fibererror",3]]]],[11,"ne","","",6,[[["fibererror",3]]]],[11,"eq","","",7,[[["floatdomainerror",3]]]],[11,"ne","","",7,[[["floatdomainerror",3]]]],[11,"eq","","",8,[[["frozenerror",3]]]],[11,"ne","","",8,[[["frozenerror",3]]]],[11,"eq","","",9,[[["indexerror",3]]]],[11,"ne","","",9,[[["indexerror",3]]]],[11,"eq","","",10,[[["interrupt",3]]]],[11,"ne","","",10,[[["interrupt",3]]]],[11,"eq","","",11,[[["ioerror",3]]]],[11,"ne","","",11,[[["ioerror",3]]]],[11,"eq","","",12,[[["keyerror",3]]]],[11,"ne","","",12,[[["keyerror",3]]]],[11,"eq","","",13,[[["loaderror",3]]]],[11,"ne","","",13,[[["loaderror",3]]]],[11,"eq","","",14,[[["localjumperror",3]]]],[11,"ne","","",14,[[["localjumperror",3]]]],[11,"eq","","",15,[[["nameerror",3]]]],[11,"ne","","",15,[[["nameerror",3]]]],[11,"eq","","",16,[[["nomemoryerror",3]]]],[11,"ne","","",16,[[["nomemoryerror",3]]]],[11,"eq","","",17,[[["nomethoderror",3]]]],[11,"ne","","",17,[[["nomethoderror",3]]]],[11,"eq","","",18,[[["notimplementederror",3]]]],[11,"ne","","",18,[[["notimplementederror",3]]]],[11,"eq","","",19,[[["rangeerror",3]]]],[11,"ne","","",19,[[["rangeerror",3]]]],[11,"eq","","",20,[[["regexperror",3]]]],[11,"ne","","",20,[[["regexperror",3]]]],[11,"eq","","",21,[[["runtimeerror",3]]]],[11,"ne","","",21,[[["runtimeerror",3]]]],[11,"eq","","",22,[[["scripterror",3]]]],[11,"ne","","",22,[[["scripterror",3]]]],[11,"eq","","",23,[[["securityerror",3]]]],[11,"ne","","",23,[[["securityerror",3]]]],[11,"eq","","",24,[[["signalexception",3]]]],[11,"ne","","",24,[[["signalexception",3]]]],[11,"eq","","",25,[[["standarderror",3]]]],[11,"ne","","",25,[[["standarderror",3]]]],[11,"eq","","",26,[[["stopiteration",3]]]],[11,"ne","","",26,[[["stopiteration",3]]]],[11,"eq","","",27,[[["syntaxerror",3]]]],[11,"ne","","",27,[[["syntaxerror",3]]]],[11,"eq","","",28,[[["systemcallerror",3]]]],[11,"ne","","",28,[[["systemcallerror",3]]]],[11,"eq","","",29,[[["systemexit",3]]]],[11,"ne","","",29,[[["systemexit",3]]]],[11,"eq","","",30,[[["systemstackerror",3]]]],[11,"ne","","",30,[[["systemstackerror",3]]]],[11,"eq","","",31,[[["threaderror",3]]]],[11,"ne","","",31,[[["threaderror",3]]]],[11,"eq","","",32,[[["typeerror",3]]]],[11,"ne","","",32,[[["typeerror",3]]]],[11,"eq","","",33,[[["uncaughtthrowerror",3]]]],[11,"ne","","",33,[[["uncaughtthrowerror",3]]]],[11,"eq","","",34,[[["zerodivisionerror",3]]]],[11,"ne","","",34,[[["zerodivisionerror",3]]]],[11,"partial_cmp","","",1,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["argumenterror",3]]]],[11,"le","","",1,[[["argumenterror",3]]]],[11,"gt","","",1,[[["argumenterror",3]]]],[11,"ge","","",1,[[["argumenterror",3]]]],[11,"partial_cmp","","",2,[[["encodingerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["encodingerror",3]]]],[11,"le","","",2,[[["encodingerror",3]]]],[11,"gt","","",2,[[["encodingerror",3]]]],[11,"ge","","",2,[[["encodingerror",3]]]],[11,"partial_cmp","","",3,[[["eoferror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["eoferror",3]]]],[11,"le","","",3,[[["eoferror",3]]]],[11,"gt","","",3,[[["eoferror",3]]]],[11,"ge","","",3,[[["eoferror",3]]]],[11,"partial_cmp","","",4,[[["exception",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["exception",3]]]],[11,"le","","",4,[[["exception",3]]]],[11,"gt","","",4,[[["exception",3]]]],[11,"ge","","",4,[[["exception",3]]]],[11,"partial_cmp","","",5,[[["fatal",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["fatal",3]]]],[11,"le","","",5,[[["fatal",3]]]],[11,"gt","","",5,[[["fatal",3]]]],[11,"ge","","",5,[[["fatal",3]]]],[11,"partial_cmp","","",6,[[["fibererror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["fibererror",3]]]],[11,"le","","",6,[[["fibererror",3]]]],[11,"gt","","",6,[[["fibererror",3]]]],[11,"ge","","",6,[[["fibererror",3]]]],[11,"partial_cmp","","",7,[[["floatdomainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["floatdomainerror",3]]]],[11,"le","","",7,[[["floatdomainerror",3]]]],[11,"gt","","",7,[[["floatdomainerror",3]]]],[11,"ge","","",7,[[["floatdomainerror",3]]]],[11,"partial_cmp","","",8,[[["frozenerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["frozenerror",3]]]],[11,"le","","",8,[[["frozenerror",3]]]],[11,"gt","","",8,[[["frozenerror",3]]]],[11,"ge","","",8,[[["frozenerror",3]]]],[11,"partial_cmp","","",9,[[["indexerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["indexerror",3]]]],[11,"le","","",9,[[["indexerror",3]]]],[11,"gt","","",9,[[["indexerror",3]]]],[11,"ge","","",9,[[["indexerror",3]]]],[11,"partial_cmp","","",10,[[["interrupt",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["interrupt",3]]]],[11,"le","","",10,[[["interrupt",3]]]],[11,"gt","","",10,[[["interrupt",3]]]],[11,"ge","","",10,[[["interrupt",3]]]],[11,"partial_cmp","","",11,[[["ioerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["ioerror",3]]]],[11,"le","","",11,[[["ioerror",3]]]],[11,"gt","","",11,[[["ioerror",3]]]],[11,"ge","","",11,[[["ioerror",3]]]],[11,"partial_cmp","","",12,[[["keyerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["keyerror",3]]]],[11,"le","","",12,[[["keyerror",3]]]],[11,"gt","","",12,[[["keyerror",3]]]],[11,"ge","","",12,[[["keyerror",3]]]],[11,"partial_cmp","","",13,[[["loaderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["loaderror",3]]]],[11,"le","","",13,[[["loaderror",3]]]],[11,"gt","","",13,[[["loaderror",3]]]],[11,"ge","","",13,[[["loaderror",3]]]],[11,"partial_cmp","","",14,[[["localjumperror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["localjumperror",3]]]],[11,"le","","",14,[[["localjumperror",3]]]],[11,"gt","","",14,[[["localjumperror",3]]]],[11,"ge","","",14,[[["localjumperror",3]]]],[11,"partial_cmp","","",15,[[["nameerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["nameerror",3]]]],[11,"le","","",15,[[["nameerror",3]]]],[11,"gt","","",15,[[["nameerror",3]]]],[11,"ge","","",15,[[["nameerror",3]]]],[11,"partial_cmp","","",16,[[["nomemoryerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["nomemoryerror",3]]]],[11,"le","","",16,[[["nomemoryerror",3]]]],[11,"gt","","",16,[[["nomemoryerror",3]]]],[11,"ge","","",16,[[["nomemoryerror",3]]]],[11,"partial_cmp","","",17,[[["nomethoderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["nomethoderror",3]]]],[11,"le","","",17,[[["nomethoderror",3]]]],[11,"gt","","",17,[[["nomethoderror",3]]]],[11,"ge","","",17,[[["nomethoderror",3]]]],[11,"partial_cmp","","",18,[[["notimplementederror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["notimplementederror",3]]]],[11,"le","","",18,[[["notimplementederror",3]]]],[11,"gt","","",18,[[["notimplementederror",3]]]],[11,"ge","","",18,[[["notimplementederror",3]]]],[11,"partial_cmp","","",19,[[["rangeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["rangeerror",3]]]],[11,"le","","",19,[[["rangeerror",3]]]],[11,"gt","","",19,[[["rangeerror",3]]]],[11,"ge","","",19,[[["rangeerror",3]]]],[11,"partial_cmp","","",20,[[["regexperror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["regexperror",3]]]],[11,"le","","",20,[[["regexperror",3]]]],[11,"gt","","",20,[[["regexperror",3]]]],[11,"ge","","",20,[[["regexperror",3]]]],[11,"partial_cmp","","",21,[[["runtimeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["runtimeerror",3]]]],[11,"le","","",21,[[["runtimeerror",3]]]],[11,"gt","","",21,[[["runtimeerror",3]]]],[11,"ge","","",21,[[["runtimeerror",3]]]],[11,"partial_cmp","","",22,[[["scripterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["scripterror",3]]]],[11,"le","","",22,[[["scripterror",3]]]],[11,"gt","","",22,[[["scripterror",3]]]],[11,"ge","","",22,[[["scripterror",3]]]],[11,"partial_cmp","","",23,[[["securityerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["securityerror",3]]]],[11,"le","","",23,[[["securityerror",3]]]],[11,"gt","","",23,[[["securityerror",3]]]],[11,"ge","","",23,[[["securityerror",3]]]],[11,"partial_cmp","","",24,[[["signalexception",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["signalexception",3]]]],[11,"le","","",24,[[["signalexception",3]]]],[11,"gt","","",24,[[["signalexception",3]]]],[11,"ge","","",24,[[["signalexception",3]]]],[11,"partial_cmp","","",25,[[["standarderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",25,[[["standarderror",3]]]],[11,"le","","",25,[[["standarderror",3]]]],[11,"gt","","",25,[[["standarderror",3]]]],[11,"ge","","",25,[[["standarderror",3]]]],[11,"partial_cmp","","",26,[[["stopiteration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["stopiteration",3]]]],[11,"le","","",26,[[["stopiteration",3]]]],[11,"gt","","",26,[[["stopiteration",3]]]],[11,"ge","","",26,[[["stopiteration",3]]]],[11,"partial_cmp","","",27,[[["syntaxerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["syntaxerror",3]]]],[11,"le","","",27,[[["syntaxerror",3]]]],[11,"gt","","",27,[[["syntaxerror",3]]]],[11,"ge","","",27,[[["syntaxerror",3]]]],[11,"partial_cmp","","",28,[[["systemcallerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["systemcallerror",3]]]],[11,"le","","",28,[[["systemcallerror",3]]]],[11,"gt","","",28,[[["systemcallerror",3]]]],[11,"ge","","",28,[[["systemcallerror",3]]]],[11,"partial_cmp","","",29,[[["systemexit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["systemexit",3]]]],[11,"le","","",29,[[["systemexit",3]]]],[11,"gt","","",29,[[["systemexit",3]]]],[11,"ge","","",29,[[["systemexit",3]]]],[11,"partial_cmp","","",30,[[["systemstackerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["systemstackerror",3]]]],[11,"le","","",30,[[["systemstackerror",3]]]],[11,"gt","","",30,[[["systemstackerror",3]]]],[11,"ge","","",30,[[["systemstackerror",3]]]],[11,"partial_cmp","","",31,[[["threaderror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["threaderror",3]]]],[11,"le","","",31,[[["threaderror",3]]]],[11,"gt","","",31,[[["threaderror",3]]]],[11,"ge","","",31,[[["threaderror",3]]]],[11,"partial_cmp","","",32,[[["typeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["typeerror",3]]]],[11,"le","","",32,[[["typeerror",3]]]],[11,"gt","","",32,[[["typeerror",3]]]],[11,"ge","","",32,[[["typeerror",3]]]],[11,"partial_cmp","","",33,[[["uncaughtthrowerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["uncaughtthrowerror",3]]]],[11,"le","","",33,[[["uncaughtthrowerror",3]]]],[11,"gt","","",33,[[["uncaughtthrowerror",3]]]],[11,"ge","","",33,[[["uncaughtthrowerror",3]]]],[11,"partial_cmp","","",34,[[["zerodivisionerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["zerodivisionerror",3]]]],[11,"le","","",34,[[["zerodivisionerror",3]]]],[11,"gt","","",34,[[["zerodivisionerror",3]]]],[11,"ge","","",34,[[["zerodivisionerror",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"new","","Construct a new, default `ArgumentError` Ruby exception.",1,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",1,[[]]],[11,"name","","Return this Ruby exception\'s class name.",1,[[]]],[11,"new","","Construct a new, default `EncodingError` Ruby exception.",2,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",2,[[]]],[11,"name","","Return this Ruby exception\'s class name.",2,[[]]],[11,"new","","Construct a new, default `EOFError` Ruby exception.",3,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",3,[[]]],[11,"name","","Return this Ruby exception\'s class name.",3,[[]]],[11,"new","","Construct a new, default `Exception` Ruby exception.",4,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",4,[[]]],[11,"name","","Return this Ruby exception\'s class name.",4,[[]]],[11,"new","","Construct a new, default `fatal` Ruby exception.",5,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",5,[[]]],[11,"name","","Return this Ruby exception\'s class name.",5,[[]]],[11,"new","","Construct a new, default `FiberError` Ruby exception.",6,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",6,[[]]],[11,"name","","Return this Ruby exception\'s class name.",6,[[]]],[11,"new","","Construct a new, default `FloatDomainError` Ruby exception.",7,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",7,[[]]],[11,"name","","Return this Ruby exception\'s class name.",7,[[]]],[11,"new","","Construct a new, default `FrozenError` Ruby exception.",8,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",8,[[]]],[11,"name","","Return this Ruby exception\'s class name.",8,[[]]],[11,"new","","Construct a new, default `IndexError` Ruby exception.",9,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",9,[[]]],[11,"name","","Return this Ruby exception\'s class name.",9,[[]]],[11,"new","","Construct a new, default `Interrupt` Ruby exception.",10,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",10,[[]]],[11,"name","","Return this Ruby exception\'s class name.",10,[[]]],[11,"new","","Construct a new, default `IOError` Ruby exception.",11,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",11,[[]]],[11,"name","","Return this Ruby exception\'s class name.",11,[[]]],[11,"new","","Construct a new, default `KeyError` Ruby exception.",12,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",12,[[]]],[11,"name","","Return this Ruby exception\'s class name.",12,[[]]],[11,"new","","Construct a new, default `LoadError` Ruby exception.",13,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",13,[[]]],[11,"name","","Return this Ruby exception\'s class name.",13,[[]]],[11,"new","","Construct a new, default `LocalJumpError` Ruby exception.",14,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",14,[[]]],[11,"name","","Return this Ruby exception\'s class name.",14,[[]]],[11,"new","","Construct a new, default `NameError` Ruby exception.",15,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",15,[[]]],[11,"name","","Return this Ruby exception\'s class name.",15,[[]]],[11,"new","","Construct a new, default `NoMemoryError` Ruby exception.",16,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",16,[[]]],[11,"name","","Return this Ruby exception\'s class name.",16,[[]]],[11,"new","","Construct a new, default `NoMethodError` Ruby exception.",17,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",17,[[]]],[11,"name","","Return this Ruby exception\'s class name.",17,[[]]],[11,"new","","Construct a new, default `NotImplementedError` Ruby…",18,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",18,[[]]],[11,"name","","Return this Ruby exception\'s class name.",18,[[]]],[11,"new","","Construct a new, default `RangeError` Ruby exception.",19,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",19,[[]]],[11,"name","","Return this Ruby exception\'s class name.",19,[[]]],[11,"new","","Construct a new, default `RegexpError` Ruby exception.",20,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",20,[[]]],[11,"name","","Return this Ruby exception\'s class name.",20,[[]]],[11,"new","","Construct a new, default `RuntimeError` Ruby exception.",21,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",21,[[]]],[11,"name","","Return this Ruby exception\'s class name.",21,[[]]],[11,"new","","Construct a new, default `ScriptError` Ruby exception.",22,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",22,[[]]],[11,"name","","Return this Ruby exception\'s class name.",22,[[]]],[11,"new","","Construct a new, default `SecurityError` Ruby exception.",23,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",23,[[]]],[11,"name","","Return this Ruby exception\'s class name.",23,[[]]],[11,"new","","Construct a new, default `SignalException` Ruby exception.",24,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",24,[[]]],[11,"name","","Return this Ruby exception\'s class name.",24,[[]]],[11,"new","","Construct a new, default `StandardError` Ruby exception.",25,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",25,[[]]],[11,"name","","Return this Ruby exception\'s class name.",25,[[]]],[11,"new","","Construct a new, default `StopIteration` Ruby exception.",26,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",26,[[]]],[11,"name","","Return this Ruby exception\'s class name.",26,[[]]],[11,"new","","Construct a new, default `SyntaxError` Ruby exception.",27,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",27,[[]]],[11,"name","","Return this Ruby exception\'s class name.",27,[[]]],[11,"new","","Construct a new, default `SystemCallError` Ruby exception.",28,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",28,[[]]],[11,"name","","Return this Ruby exception\'s class name.",28,[[]]],[11,"new","","Construct a new, default `SystemExit` Ruby exception.",29,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",29,[[]]],[11,"name","","Return this Ruby exception\'s class name.",29,[[]]],[11,"new","","Construct a new, default `SystemStackError` Ruby exception.",30,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",30,[[]]],[11,"name","","Return this Ruby exception\'s class name.",30,[[]]],[11,"new","","Construct a new, default `ThreadError` Ruby exception.",31,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",31,[[]]],[11,"name","","Return this Ruby exception\'s class name.",31,[[]]],[11,"new","","Construct a new, default `TypeError` Ruby exception.",32,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",32,[[]]],[11,"name","","Return this Ruby exception\'s class name.",32,[[]]],[11,"new","","Construct a new, default `UncaughtThrowError` Ruby…",33,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",33,[[]]],[11,"name","","Return this Ruby exception\'s class name.",33,[[]]],[11,"new","","Construct a new, default `ZeroDivisionError` Ruby exception.",34,[[]]],[11,"message","","Return the message this Ruby exception was constructed with.",34,[[]]],[11,"name","","Return this Ruby exception\'s class name.",34,[[]]]],"p":[[8,"RubyException"],[3,"ArgumentError"],[3,"EncodingError"],[3,"EOFError"],[3,"Exception"],[3,"Fatal"],[3,"FiberError"],[3,"FloatDomainError"],[3,"FrozenError"],[3,"IndexError"],[3,"Interrupt"],[3,"IOError"],[3,"KeyError"],[3,"LoadError"],[3,"LocalJumpError"],[3,"NameError"],[3,"NoMemoryError"],[3,"NoMethodError"],[3,"NotImplementedError"],[3,"RangeError"],[3,"RegexpError"],[3,"RuntimeError"],[3,"ScriptError"],[3,"SecurityError"],[3,"SignalException"],[3,"StandardError"],[3,"StopIteration"],[3,"SyntaxError"],[3,"SystemCallError"],[3,"SystemExit"],[3,"SystemStackError"],[3,"ThreadError"],[3,"TypeError"],[3,"UncaughtThrowError"],[3,"ZeroDivisionError"]]},\
"spinoso_math":{"doc":"The Ruby Math module.","i":[[17,"E","spinoso_math","Euler\'s number (e)",null,null],[17,"PI","","Archimedes\' constant (π)",null,null],[5,"acos","","Computes the arccosine of the given value. Returns results…",null,[[],[["result",4],["domainerror",3]]]],[5,"acosh","","Computes the inverse hyperbolic cosine of the given value.",null,[[],[["result",4],["domainerror",3]]]],[5,"asin","","Computes the arcsine of the given value. Returns results…",null,[[],[["result",4],["domainerror",3]]]],[5,"asinh","","Computes the inverse hyperbolic sine of the given value.",null,[[]]],[5,"atan","","Computes the arctangent of the given value. Returns…",null,[[]]],[5,"atan2","","Computes the four quadrant arctangent of `value` (`y`) and…",null,[[]]],[5,"atanh","","Computes the inverse hyperbolic tangent of the given value.",null,[[],[["result",4],["domainerror",3]]]],[5,"cbrt","","Returns the cube root of the given value.",null,[[]]],[5,"cos","","Computes the cosine of the given value (expressed in…",null,[[]]],[5,"cosh","","Computes the hyperbolic cosine of the given value…",null,[[]]],[5,"erf","","Calculates the error function of the given value.",null,[[],[["notimplementederror",3],["result",4]]]],[5,"erfc","","Calculates the complementary error function of the given…",null,[[],[["notimplementederror",3],["result",4]]]],[5,"exp","","Returns `e**x`.",null,[[]]],[5,"frexp","","Returns a tuple array containing the normalized fraction…",null,[[],[["result",4],["notimplementederror",3]]]],[5,"gamma","","Calculates the gamma function of the given value.",null,[[],[["result",4],["domainerror",3]]]],[5,"hypot","","Returns `sqrt(x**2 + y**2)`, the hypotenuse of a…",null,[[]]],[5,"ldexp","","Returns the value of `fraction * (2**exponent)`.",null,[[],[["notimplementederror",3],["result",4]]]],[5,"lgamma","","Calculates the logarithmic gamma of value and the sign of…",null,[[],[["domainerror",3],["result",4]]]],[5,"log","","Returns the logarithm of the number with respect to an…",null,[[["option",4]],[["result",4],["domainerror",3]]]],[5,"log10","","Returns the base 10 logarithm of the number.",null,[[],[["result",4],["domainerror",3]]]],[5,"log2","","Returns the base 2 logarithm of the number.",null,[[],[["result",4],["domainerror",3]]]],[5,"sin","","Computes the sine of the given value (expressed in…",null,[[]]],[5,"sinh","","Computes the hyperbolic sine of the given value (expressed…",null,[[]]],[5,"sqrt","","Returns the non-negative square root of the given value.",null,[[],[["result",4],["domainerror",3]]]],[5,"tan","","Computes the tangent of the given value (expressed in…",null,[[]]],[5,"tanh","","Computes the hyperbolic tangent of the given value…",null,[[]]],[3,"Math","","A handle to the `Math` module.",null,null],[11,"new","","Constructs a new, default `Math`.",0,[[]]],[4,"Error","","Sum type of all errors possibly returned from `Math`…",null,null],[13,"Domain","","Error that indicates a math function returned a value that…",1,null],[13,"NotImplemented","","Error that indicates a `Math` module function is not…",1,null],[11,"message","","Retrieve the exception message associated with this error.",1,[[]]],[3,"DomainError","","Error that indicates a math function evaluated to an out…",null,null],[11,"new","","Construct a new, default domain error.",2,[[]]],[11,"with_message","","Construct a new, domaine error with a message.",2,[[]]],[11,"message","","Retrieve the exception message associated with this error.",2,[[]]],[3,"NotImplementedError","","Error that indicates a `Math` module function is not…",null,null],[11,"new","","Construct a new, default not implemented error.",3,[[]]],[11,"with_message","","Construct a new, not implemented error with a message.",3,[[]]],[11,"message","","Retrieve the exception message associated with this not…",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[["domainerror",3]]]],[11,"from","","",1,[[["notimplementederror",3]]]],[11,"from","","",2,[[]]],[11,"from","","",3,[[]]],[11,"clone","","",0,[[],["math",3]]],[11,"clone","","",1,[[],["error",4]]],[11,"clone","","",2,[[],["domainerror",3]]],[11,"clone","","",3,[[],["notimplementederror",3]]],[11,"default","","",0,[[],["math",3]]],[11,"default","","",2,[[],["domainerror",3]]],[11,"default","","",3,[[],["notimplementederror",3]]],[11,"cmp","","",0,[[["math",3]],["ordering",4]]],[11,"cmp","","",1,[[["error",4]],["ordering",4]]],[11,"cmp","","",2,[[["domainerror",3]],["ordering",4]]],[11,"cmp","","",3,[[["notimplementederror",3]],["ordering",4]]],[11,"eq","","",0,[[["math",3]]]],[11,"ne","","",0,[[["math",3]]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"eq","","",2,[[["domainerror",3]]]],[11,"ne","","",2,[[["domainerror",3]]]],[11,"eq","","",3,[[["notimplementederror",3]]]],[11,"ne","","",3,[[["notimplementederror",3]]]],[11,"partial_cmp","","",0,[[["math",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["math",3]]]],[11,"le","","",0,[[["math",3]]]],[11,"gt","","",0,[[["math",3]]]],[11,"ge","","",0,[[["math",3]]]],[11,"partial_cmp","","",1,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["error",4]]]],[11,"le","","",1,[[["error",4]]]],[11,"gt","","",1,[[["error",4]]]],[11,"ge","","",1,[[["error",4]]]],[11,"partial_cmp","","",2,[[["domainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["domainerror",3]]]],[11,"le","","",2,[[["domainerror",3]]]],[11,"gt","","",2,[[["domainerror",3]]]],[11,"ge","","",2,[[["domainerror",3]]]],[11,"partial_cmp","","",3,[[["notimplementederror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["notimplementederror",3]]]],[11,"le","","",3,[[["notimplementederror",3]]]],[11,"gt","","",3,[[["notimplementederror",3]]]],[11,"ge","","",3,[[["notimplementederror",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"source","","",1,[[],[["error",8],["option",4]]]]],"p":[[3,"Math"],[4,"Error"],[3,"DomainError"],[3,"NotImplementedError"]]},\
"spinoso_random":{"doc":"An implementation of Ruby\'s pseudo-random number…","i":[[5,"rand","spinoso_random","Generate random numbers bounded from below by 0 and above…",null,[[["random",3],["max",4]],[["rand",4],["result",4],["argumenterror",3]]]],[4,"Max","","A range constraint for generating random numbers.",null,null],[13,"Float","","A maximum float bound.",0,null],[13,"Integer","","A maximum integer bound.",0,null],[13,"None","","The default bound when no bound is supplied.",0,null],[4,"Rand","","A generated random number.",null,null],[13,"Float","","A random float.",1,null],[13,"Integer","","A random integer.",1,null],[3,"Mt","","The 32-bit Ruby flavor of the Mersenne Twister…",null,null],[5,"new_seed","","Read a new [`Random`] seed, using platform-provided…",null,[[],[["newseederror",3],["result",4]]]],[5,"seed_to_key","","Convert a byte array into a reseeding key of `u32`s.",null,[[]]],[3,"Random","","Random provides an interface to Ruby\'s pseudo-random…",null,null],[5,"urandom","","Read random bytes, using platform-provided randomness.",null,[[],[["urandomerror",3],["result",4]]]],[4,"Error","","Sum type of all errors possibly returned from `Random`…",null,null],[13,"Argument","","Error that indicates [`rand()`] was passed an invalid…",2,null],[13,"Initialize","","Error that indicates that [`Random::new`] failed to…",2,null],[13,"NewSeed","","Error that indicates that [`new_seed`] failed to generate…",2,null],[13,"Urandom","","Error that indicates that [`urandom()`] failed to generate…",2,null],[3,"InitializeError","","Error that indicates a `Random` random number generator…",null,null],[11,"new","","Construct a new, default initialize error.",3,[[]]],[11,"message","","Retrieve the exception message associated with this…",3,[[]]],[3,"UrandomError","","Error that indicates the system source of…",null,null],[11,"new","","Construct a new, default urandom error.",4,[[]]],[11,"message","","Retrieve the exception message associated with this…",4,[[]]],[3,"NewSeedError","","Error that indicates the system source of…",null,null],[11,"new","","Construct a new, default new seed error.",5,[[]]],[11,"message","","Retrieve the exception message associated with this new…",5,[[]]],[3,"ArgumentError","","Error that indicates a random number could not be…",null,null],[11,"new","","Construct a new, default argument error.",6,[[]]],[11,"domain_error","","Construct a new domain error.",6,[[]]],[11,"with_rand_max","","Construct a new argument error from an invalid [`Max`]…",6,[[["max",4]]]],[11,"message","","Retrieve the exception message associated with this new…",6,[[]]],[11,"is_domain_error","","Return whether this argument error is a domain error.",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",2,[[["argumenterror",3]]]],[11,"from","","",2,[[["initializeerror",3]]]],[11,"from","","",2,[[["newseederror",3]]]],[11,"from","","",2,[[["urandomerror",3]]]],[11,"clone","","",0,[[],["max",4]]],[11,"clone","","",1,[[],["rand",4]]],[11,"clone","","",7,[[],["mt",3]]],[11,"clone","","",8,[[],["random",3]]],[11,"clone","","",2,[[],["error",4]]],[11,"clone","","",3,[[],["initializeerror",3]]],[11,"clone","","",4,[[],["urandomerror",3]]],[11,"clone","","",5,[[],["newseederror",3]]],[11,"clone","","",6,[[],["argumenterror",3]]],[11,"default","","",8,[[]]],[11,"default","","",3,[[],["initializeerror",3]]],[11,"default","","",4,[[],["urandomerror",3]]],[11,"default","","",5,[[],["newseederror",3]]],[11,"cmp","","",7,[[["mt",3]],["ordering",4]]],[11,"cmp","","",3,[[["initializeerror",3]],["ordering",4]]],[11,"cmp","","",4,[[["urandomerror",3]],["ordering",4]]],[11,"cmp","","",5,[[["newseederror",3]],["ordering",4]]],[11,"eq","","",0,[[["max",4]]]],[11,"ne","","",0,[[["max",4]]]],[11,"eq","","",1,[[["rand",4]]]],[11,"ne","","",1,[[["rand",4]]]],[11,"eq","","",7,[[["mt",3]]]],[11,"ne","","",7,[[["mt",3]]]],[11,"eq","","",8,[[["random",3]]]],[11,"ne","","",8,[[["random",3]]]],[11,"eq","","",2,[[["error",4]]]],[11,"ne","","",2,[[["error",4]]]],[11,"eq","","",3,[[["initializeerror",3]]]],[11,"ne","","",3,[[["initializeerror",3]]]],[11,"eq","","",4,[[["urandomerror",3]]]],[11,"ne","","",4,[[["urandomerror",3]]]],[11,"eq","","",5,[[["newseederror",3]]]],[11,"ne","","",5,[[["newseederror",3]]]],[11,"eq","","",6,[[["argumenterror",3]]]],[11,"ne","","",6,[[["argumenterror",3]]]],[11,"partial_cmp","","",0,[[["max",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["max",4]]]],[11,"le","","",0,[[["max",4]]]],[11,"gt","","",0,[[["max",4]]]],[11,"ge","","",0,[[["max",4]]]],[11,"partial_cmp","","",1,[[["rand",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["rand",4]]]],[11,"le","","",1,[[["rand",4]]]],[11,"gt","","",1,[[["rand",4]]]],[11,"ge","","",1,[[["rand",4]]]],[11,"partial_cmp","","",7,[[["mt",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["mt",3]]]],[11,"le","","",7,[[["mt",3]]]],[11,"gt","","",7,[[["mt",3]]]],[11,"ge","","",7,[[["mt",3]]]],[11,"partial_cmp","","",2,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["error",4]]]],[11,"le","","",2,[[["error",4]]]],[11,"gt","","",2,[[["error",4]]]],[11,"ge","","",2,[[["error",4]]]],[11,"partial_cmp","","",3,[[["initializeerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["initializeerror",3]]]],[11,"le","","",3,[[["initializeerror",3]]]],[11,"gt","","",3,[[["initializeerror",3]]]],[11,"ge","","",3,[[["initializeerror",3]]]],[11,"partial_cmp","","",4,[[["urandomerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["urandomerror",3]]]],[11,"le","","",4,[[["urandomerror",3]]]],[11,"gt","","",4,[[["urandomerror",3]]]],[11,"ge","","",4,[[["urandomerror",3]]]],[11,"partial_cmp","","",5,[[["newseederror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["newseederror",3]]]],[11,"le","","",5,[[["newseederror",3]]]],[11,"gt","","",5,[[["newseederror",3]]]],[11,"ge","","",5,[[["newseederror",3]]]],[11,"partial_cmp","","",6,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["argumenterror",3]]]],[11,"le","","",6,[[["argumenterror",3]]]],[11,"gt","","",6,[[["argumenterror",3]]]],[11,"ge","","",6,[[["argumenterror",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"source","","",2,[[],[["error",8],["option",4]]]],[11,"next_u64","","Generate next `u64` output.",8,[[]]],[11,"next_u32","","Generate next `u32` output.",8,[[]]],[11,"fill_bytes","","Fill a buffer with bytes generated from the RNG.",8,[[]]],[11,"try_fill_bytes","","Fill a buffer with bytes generated from the RNG.",8,[[],[["error",3],["result",4]]]],[11,"next_u64","","Generate next `u64` output.",7,[[]]],[11,"next_u32","","Generate next `u32` output.",7,[[]]],[11,"fill_bytes","","Fill a buffer with bytes generated from the RNG.",7,[[]]],[11,"try_fill_bytes","","Fill a buffer with bytes generated from the RNG.",7,[[],[["error",3],["result",4]]]],[11,"from_seed","","Reseed from four `u32`s.",8,[[]]],[11,"from_seed","","Reseed from four `u32`s.",7,[[]]],[11,"with_seed","","Create a new Mersenne Twister random number generator…",7,[[]]],[11,"new_with_key","","Create a new Mersenne Twister random number generator…",7,[[]]],[11,"next_int32","","Generate next `u32` output.",7,[[]]],[11,"next_real","","Generate next `f64` output.",7,[[]]],[11,"fill_bytes","","Fill a buffer with bytes generated from the RNG.",7,[[]]],[11,"reseed","","Reseed a Mersenne Twister from a single `u32`.",7,[[]]],[11,"reseed_with_key","","Reseed a Mersenne Twister from an iterator of `u32`s.",7,[[]]],[11,"new","","Create a new Mersenne Twister random number generator with…",8,[[],[["initializeerror",3],["result",4]]]],[11,"with_seed","","Create a new random number generator using the given seed.",8,[[]]],[11,"with_array_seed","","Create a new random number generator using the given seed.",8,[[]]],[11,"with_byte_array_seed","","Create a new random number generator using the given seed.",8,[[]]],[11,"next_int32","","Generate next `u32` output.",8,[[]]],[11,"next_real","","Generate next `f64` output.",8,[[]]],[11,"fill_bytes","","Fill a buffer with bytes generated from the RNG.",8,[[]]],[11,"seed","","Returns the seed value used to initialize the generator.",8,[[]]]],"p":[[4,"Max"],[4,"Rand"],[4,"Error"],[3,"InitializeError"],[3,"UrandomError"],[3,"NewSeedError"],[3,"ArgumentError"],[3,"Mt"],[3,"Random"]],"a":{"mersenne":[8,8],"mt":[8],"mt19937":[8],"twister":[8]}},\
"spinoso_securerandom":{"doc":"Secure random number generator interface.","i":[[4,"Error","spinoso_securerandom","Sum type of all errors possibly returned from…",null,null],[13,"Argument","","Error that indicates an argument parsing or value logic…",0,null],[13,"RandomBytes","","Error that indicates the underlying source of randomness…",0,null],[3,"ArgumentError","","Error that indicates an argument parsing or value logic…",null,null],[11,"new","","Construct a new, default argument error.",1,[[]]],[11,"with_message","","Construct a new, argument error with a message.",1,[[]]],[11,"message","","Retrieve the exception message associated with this…",1,[[]]],[3,"RandomBytesError","","Error that indicates the underlying source of randomness…",null,null],[11,"new","","Construct a new, default random bytes error.",2,[[]]],[11,"message","","Retrieve the exception message associated with this random…",2,[[]]],[3,"DomainError","","Error that indicates the given maximum value is not finite…",null,null],[11,"new","","Construct a new, default random bytes error.",3,[[]]],[11,"message","","Retrieve the exception message associated with this random…",3,[[]]],[3,"SecureRandom","","A handle to the underlying secure random number generator.",null,null],[11,"new","","Constructs a new, default `SecureRandom`.",4,[[]]],[5,"random_bytes","","Generate a vector of random bytes.",null,[[["option",4]],[["error",4],["vec",3],["result",4]]]],[4,"Max","","Max value when generating a random number from a range.",null,null],[13,"Float","","Generate floats in the range `[0, max)`.",5,null],[13,"Integer","","Generate signed integers in the range `[0, max)`.",5,null],[13,"None","","Generate floats in the range `[0.0, 1.0]`.",5,null],[4,"Rand","","Random numeric value generated from the secure random…",null,null],[13,"Float","","A random float that is greater than or equal to zero.",6,null],[13,"Integer","","A random signed integer that is greater than or equal to…",6,null],[5,"random_number","","Generate a single random number, either a float or an…",null,[[["max",4]],[["domainerror",3],["rand",4],["result",4]]]],[5,"hex","","Generate a hex-encoded [`String`] of random bytes.",null,[[["option",4]],[["error",4],["string",3],["result",4]]]],[5,"base64","","Generate a base64-encoded [`String`] of random bytes.",null,[[["option",4]],[["error",4],["string",3],["result",4]]]],[5,"urlsafe_base64","","Generate a URL-safe base64-encoded [`String`] of random…",null,[[["option",4]],[["error",4],["string",3],["result",4]]]],[5,"alphanumeric","","Generate a random sequence of ASCII alphanumeric bytes.",null,[[["option",4]],[["result",4],["string",3],["argumenterror",3]]]],[5,"uuid","","Generate a version 4 UUID and return a [`String`].",null,[[],[["randombyteserror",3],["result",4],["string",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",0,[[["argumenterror",3]]]],[11,"from","","",0,[[["randombyteserror",3]]]],[11,"from","","",1,[[]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",1,[[],["argumenterror",3]]],[11,"clone","","",2,[[],["randombyteserror",3]]],[11,"clone","","",3,[[],["domainerror",3]]],[11,"clone","","",4,[[],["securerandom",3]]],[11,"clone","","",5,[[],["max",4]]],[11,"clone","","",6,[[],["rand",4]]],[11,"default","","",1,[[]]],[11,"default","","",4,[[],["securerandom",3]]],[11,"cmp","","",0,[[["error",4]],["ordering",4]]],[11,"cmp","","",1,[[["argumenterror",3]],["ordering",4]]],[11,"cmp","","",2,[[["randombyteserror",3]],["ordering",4]]],[11,"cmp","","",3,[[["domainerror",3]],["ordering",4]]],[11,"cmp","","",4,[[["securerandom",3]],["ordering",4]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",1,[[["argumenterror",3]]]],[11,"ne","","",1,[[["argumenterror",3]]]],[11,"eq","","",2,[[["randombyteserror",3]]]],[11,"ne","","",2,[[["randombyteserror",3]]]],[11,"eq","","",3,[[["domainerror",3]]]],[11,"ne","","",3,[[["domainerror",3]]]],[11,"eq","","",4,[[["securerandom",3]]]],[11,"ne","","",4,[[["securerandom",3]]]],[11,"eq","","",5,[[["max",4]]]],[11,"ne","","",5,[[["max",4]]]],[11,"eq","","",6,[[["rand",4]]]],[11,"ne","","",6,[[["rand",4]]]],[11,"partial_cmp","","",0,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["error",4]]]],[11,"le","","",0,[[["error",4]]]],[11,"gt","","",0,[[["error",4]]]],[11,"ge","","",0,[[["error",4]]]],[11,"partial_cmp","","",1,[[["argumenterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["argumenterror",3]]]],[11,"le","","",1,[[["argumenterror",3]]]],[11,"gt","","",1,[[["argumenterror",3]]]],[11,"ge","","",1,[[["argumenterror",3]]]],[11,"partial_cmp","","",2,[[["randombyteserror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["randombyteserror",3]]]],[11,"le","","",2,[[["randombyteserror",3]]]],[11,"gt","","",2,[[["randombyteserror",3]]]],[11,"ge","","",2,[[["randombyteserror",3]]]],[11,"partial_cmp","","",3,[[["domainerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["domainerror",3]]]],[11,"le","","",3,[[["domainerror",3]]]],[11,"gt","","",3,[[["domainerror",3]]]],[11,"ge","","",3,[[["domainerror",3]]]],[11,"partial_cmp","","",4,[[["securerandom",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["securerandom",3]]]],[11,"le","","",4,[[["securerandom",3]]]],[11,"gt","","",4,[[["securerandom",3]]]],[11,"ge","","",4,[[["securerandom",3]]]],[11,"partial_cmp","","",5,[[["max",4]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["max",4]]]],[11,"le","","",5,[[["max",4]]]],[11,"gt","","",5,[[["max",4]]]],[11,"ge","","",5,[[["max",4]]]],[11,"partial_cmp","","",6,[[["rand",4]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["rand",4]]]],[11,"le","","",6,[[["rand",4]]]],[11,"gt","","",6,[[["rand",4]]]],[11,"ge","","",6,[[["rand",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"source","","",0,[[],[["error",8],["option",4]]]]],"p":[[4,"Error"],[3,"ArgumentError"],[3,"RandomBytesError"],[3,"DomainError"],[3,"SecureRandom"],[4,"Max"],[4,"Rand"]]},\
"spinoso_symbol":{"doc":"Identifier for interned bytestrings and routines for…","i":[[4,"CaseFold","spinoso_symbol","Unicode case folding strategies.",null,null],[13,"Full","","Full Unicode case mapping, suitable for most languages…",0,null],[13,"Ascii","","Only the ASCII region, i.e. the characters \\\"A\\\" to \\\"Z\\\" and…",0,null],[13,"Turkic","","Full Unicode case mapping, adapted for Turkic languages…",0,null],[13,"Lithuanian","","Currently, just full Unicode case mapping. In the future,…",0,null],[3,"NoSuchCaseFoldingScheme","","Error type for returned when a folding scheme could not be…",null,null],[3,"AllSymbols","","An iterator that returns all of the Symbols in an interner.",null,null],[8,"InternerAllSymbols","","Extension trait to return an iterator that returns all…",null,null],[10,"all_symbols","","Returns an iterator that returns all symbol identifiers…",1,[[],["allsymbols",3]]],[5,"ascii_casecmp","","Compare the byte contents of two symbols using ASCII…",null,[[],[["result",4],["ordering",4]]]],[5,"unicode_case_eq","","Compare the byte contents of two symbols using Unicode…",null,[[["casefold",4]],[["option",4],["result",4]]]],[4,"IdentifierType","","Valid types for Ruby identifiers.",null,null],[13,"Junk","","Identifier that contains \\\"junk\\\".",2,null],[13,"Global","","Identifier that is a global variable name.",2,null],[13,"Instance","","Identifier that is an instance variable name.",2,null],[13,"Class","","Identifier that is a class variable name.",2,null],[13,"AttrSet","","Identifier that is an \\\"attribute setter\\\" method name.",2,null],[13,"Constant","","Identifier that is a constant name.",2,null],[13,"Local","","Identifier that is a local variable or method name.",2,null],[3,"ParseIdentifierError","","Error type returned from the [`FromStr`] implementation on…",null,null],[3,"Inspect","","An iterator that yields a debug representation of a…",null,null],[3,"SymbolOverflowError","","Error returned when a symbol identifier overflows.",null,null],[18,"MAX_IDENTIFIER","","The maximum identifier of a `Symbol`.",3,null],[11,"new","","Construct a new, default `SymbolOverflowError`.",3,[[]]],[3,"Symbol","","Identifier bound to an interned bytestring.",null,null],[11,"new","","Construct a new `Symbol` from the given `u32`.",4,[[]]],[11,"id","","Return the `u32` identifier from this `Symbol`.",4,[[]]],[11,"is_empty","","Returns whether the symbol is the empty byteslice `b\\\"\\\"` in…",4,[[]]],[11,"len","","Returns the length of the byteslice associated with the…",4,[[]]],[11,"bytes","","Returns the interned byteslice associated with the symbol…",4,[[]]],[11,"inspect","","Returns an iterator that yields a debug representation of…",4,[[],["inspect",3]]],[11,"format_inspect_into","","Write an [`Inspect`] iterator into the given destination…",4,[[],["result",6]]],[11,"write_inspect_into","","Write an [`Inspect`] iterator into the given destination…",4,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"eq","","",0,[[["casefold",4]]]],[11,"eq","","",5,[[["nosuchcasefoldingscheme",3]]]],[11,"ne","","",5,[[["nosuchcasefoldingscheme",3]]]],[11,"try_from","","",0,[[["option",4]],[["result",4],["nosuchcasefoldingscheme",3],["casefold",4]]]],[11,"try_from","","",0,[[["option",4]],[["result",4],["nosuchcasefoldingscheme",3],["casefold",4]]]],[11,"cmp","","",5,[[["nosuchcasefoldingscheme",3]],["ordering",4]]],[11,"cmp","","",0,[[["casefold",4]],["ordering",4]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",5,[[["nosuchcasefoldingscheme",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["nosuchcasefoldingscheme",3]]]],[11,"le","","",5,[[["nosuchcasefoldingscheme",3]]]],[11,"gt","","",5,[[["nosuchcasefoldingscheme",3]]]],[11,"ge","","",5,[[["nosuchcasefoldingscheme",3]]]],[11,"partial_cmp","","",0,[[["casefold",4]],[["ordering",4],["option",4]]]],[11,"hash","","",0,[[]]],[11,"hash","","",5,[[]]],[11,"default","","",5,[[],["nosuchcasefoldingscheme",3]]],[11,"default","","Default to full Unicode case folding.",0,[[],["casefold",4]]],[11,"clone","","",5,[[],["nosuchcasefoldingscheme",3]]],[11,"clone","","",0,[[],["casefold",4]]],[11,"from","","Construct a [`AllSymbols`] iterator from an interner.",6,[[]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["nonzerou8",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["nonzerou16",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["nonzerou32",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["nonzerou8",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["nonzerou16",3]]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[["nonzerou32",3]]]],[11,"from","","",8,[[]]],[11,"from","","",8,[[]]],[11,"from","","",3,[[["tryfrominterror",3]]]],[11,"next_back","","",6,[[],["option",4]]],[11,"nth_back","","",6,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"nth","","",6,[[],["option",4]]],[11,"count","","",6,[[]]],[11,"size_hint","","",6,[[]]],[11,"last","","",6,[[],["option",4]]],[11,"min","","",6,[[],["option",4]]],[11,"max","","",6,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"clone","","",6,[[],["allsymbols",3]]],[11,"clone","","",2,[[],["identifiertype",4]]],[11,"clone","","",7,[[],["parseidentifiererror",3]]],[11,"clone","","",8,[[],["inspect",3]]],[11,"clone","","",3,[[],["symboloverflowerror",3]]],[11,"clone","","",4,[[],["symbol",3]]],[11,"default","","Construct a \\\"junk\\\" identifier type.",2,[[]]],[11,"default","","",7,[[],["parseidentifiererror",3]]],[11,"default","","",8,[[],["inspect",3]]],[11,"default","","",3,[[],["symboloverflowerror",3]]],[11,"cmp","","",2,[[["identifiertype",4]],["ordering",4]]],[11,"cmp","","",7,[[["parseidentifiererror",3]],["ordering",4]]],[11,"cmp","","",3,[[["symboloverflowerror",3]],["ordering",4]]],[11,"cmp","","",4,[[["symbol",3]],["ordering",4]]],[11,"eq","","",6,[[["allsymbols",3]]]],[11,"ne","","",6,[[["allsymbols",3]]]],[11,"eq","","",4,[[]]],[11,"eq","","",4,[[]]],[11,"eq","","",2,[[["identifiertype",4]]]],[11,"eq","","",7,[[["parseidentifiererror",3]]]],[11,"ne","","",7,[[["parseidentifiererror",3]]]],[11,"eq","","",3,[[["symboloverflowerror",3]]]],[11,"ne","","",3,[[["symboloverflowerror",3]]]],[11,"eq","","",4,[[["symbol",3]]]],[11,"ne","","",4,[[["symbol",3]]]],[11,"partial_cmp","","",2,[[["identifiertype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",7,[[["parseidentifiererror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["parseidentifiererror",3]]]],[11,"le","","",7,[[["parseidentifiererror",3]]]],[11,"gt","","",7,[[["parseidentifiererror",3]]]],[11,"ge","","",7,[[["parseidentifiererror",3]]]],[11,"partial_cmp","","",3,[[["symboloverflowerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["symboloverflowerror",3]]]],[11,"le","","",3,[[["symboloverflowerror",3]]]],[11,"gt","","",3,[[["symboloverflowerror",3]]]],[11,"ge","","",3,[[["symboloverflowerror",3]]]],[11,"partial_cmp","","",4,[[["symbol",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["symbol",3]]]],[11,"le","","",4,[[["symbol",3]]]],[11,"gt","","",4,[[["symbol",3]]]],[11,"ge","","",4,[[["symbol",3]]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",6,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_from","","",4,[[["nonzerou64",3]],["result",4]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_from","","",4,[[["nonzerousize",3]],["result",4]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_from","","",4,[[["nonzerou64",3]],["result",4]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_from","","",4,[[["nonzerousize",3]],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from_str","","",2,[[],["result",4]]],[11,"new","","Construct a new full Unicode case folding.",0,[[],["casefold",4]]],[11,"casecmp","","Make a case-insensitive string comparison based on the…",0,[[],["ordering",4]]],[11,"case_eq","","Make a case-insensitive string equality check based on the…",0,[[]]],[11,"new","","Construct a new [`NoSuchCaseFoldingScheme`] error.",5,[[],["nosuchcasefoldingscheme",3]]],[11,"new","","Return a new, default `IdentifierType`.",2,[[]]],[11,"new","","Construct a new `ParseIdentifierError`.",7,[[]]]],"p":[[4,"CaseFold"],[8,"InternerAllSymbols"],[4,"IdentifierType"],[3,"SymbolOverflowError"],[3,"Symbol"],[3,"NoSuchCaseFoldingScheme"],[3,"AllSymbols"],[3,"ParseIdentifierError"],[3,"Inspect"]]},\
"spinoso_time":{"doc":"Time is an abstraction of dates and times.","i":[[4,"Offset","spinoso_time","Timestamp offsets from UTC.",null,null],[13,"Utc","","UTC, zero offset, zulu time.",0,null],[13,"Local","","The local offset of the machine at runtime.",0,null],[13,"Tz","","A timezone-based offset, defined by Time Zone Database.",0,null],[13,"Fixed","","A fixed offset from UTC, like `-2:00` or `+10:45`.",0,null],[3,"Time","","Implementation of Ruby `Time`, a timezone-aware datetime,…",null,null],[3,"ToA","","Serialized representation of a timestamp using a…",null,null],[12,"sec","","The second of the minute `0..=59` for the source time.",1,null],[12,"min","","The minute of the hour `0..=59` for the source time.",1,null],[12,"hour","","The hour of the day `0..=23` for the source time.",1,null],[12,"day","","The day of the month `1..=n` for the source time.",1,null],[12,"month","","The month of the year `1..=12` for the source time.",1,null],[12,"year","","The year (including the century) for the source time.",1,null],[12,"wday","","An integer representing the day of the week, `0..=6`, with…",1,null],[12,"yday","","An integer representing the day of the year, `1..=366` for…",1,null],[12,"isdst","","Whether the source time occurs during Daylight Saving Time…",1,null],[12,"zone","","The timezone used for the source time.",1,null],[4,"ComponentOutOfRangeError","","Error returned when constructing a [`Time`] from a [`ToA`].",null,null],[13,"Date","","Date component (year, month, day) out of range.",2,null],[13,"Time","","Time component (hour, minute, second) out of range.",2,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[["datetime",3],["utc",3]]]],[11,"from","","",3,[[["datetime",3],["local",3]]]],[11,"from","","",3,[[["tz",4],["datetime",3]]]],[11,"from","","",3,[[["datetime",3],["fixedoffset",3]]]],[11,"from","","",0,[[["utc",3]]]],[11,"from","","",0,[[["local",3]]]],[11,"from","","",0,[[["tz",4]]]],[11,"from","","",0,[[["fixedoffset",3]]]],[11,"from","","",1,[[["time",3]]]],[11,"clone","","",0,[[],["offset",4]]],[11,"clone","","",3,[[],["time",3]]],[11,"clone","","",1,[[],["toa",3]]],[11,"clone","","",2,[[],["componentoutofrangeerror",4]]],[11,"default","","The zero-argument `Time#new` constructor creates a local…",3,[[]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"cmp","","",2,[[["componentoutofrangeerror",4]],["ordering",4]]],[11,"eq","","",0,[[["offset",4]]]],[11,"ne","","",0,[[["offset",4]]]],[11,"eq","","",0,[[["utc",3]]]],[11,"eq","","",0,[[["local",3]]]],[11,"eq","","",0,[[["tz",4]]]],[11,"eq","","",0,[[["fixedoffset",3]]]],[11,"eq","","",3,[[["time",3]]]],[11,"eq","","",1,[[["toa",3]]]],[11,"ne","","",1,[[["toa",3]]]],[11,"eq","","",2,[[["componentoutofrangeerror",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["componentoutofrangeerror",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"sub","","",3,[[["time",3]]]],[11,"sub","","",3,[[["duration",3]]]],[11,"sub","","",3,[[["duration",3]]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"add","","",3,[[["duration",3]]]],[11,"add","","",3,[[["duration",3]]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"add","","",3,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"try_from","","",3,[[["toa",3]],["result",4]]],[11,"new","","Creates a new `Time` object for the current time with a…",3,[[]]],[11,"now","","Creates a new `Time` object for the current time with a…",3,[[]]],[11,"year","","Returns the year for time (including the century).",3,[[]]],[11,"month","","Returns the month of the year `1..=12` for time.",3,[[]]],[11,"day","","Returns the day of the month `1..=n` for time.",3,[[]]],[11,"succ","","Returns a new Time object, one second later than time.",3,[[]]],[11,"year_day","","Returns an integer representing the day of the year,…",3,[[]]],[11,"hour","","Returns the hour of the day `0..=23` for time.",3,[[]]],[11,"minute","","Returns the minute of the hour `0..=59` for time.",3,[[]]],[11,"second","","Returns the second of the minute `0..=60` for time.",3,[[]]],[11,"microsecond","","Returns the number of microseconds for time.",3,[[]]],[11,"nanosecond","","Returns the number of nanoseconds for time.",3,[[]]],[11,"subsec","","Returns the fraction for time.",3,[[]]],[11,"is_dst","","Returns `true` if time occurs during Daylight Saving Time…",3,[[]]],[11,"is_utc","","Returns `true` if time represents a time in UTC (GMT).",3,[[]]],[11,"to_local","","Returns a new `Time` object representing time in local…",3,[[]]],[11,"to_utc","","Returns a new `Time` object representing time in UTC.",3,[[]]],[11,"timezone","","Returns the name of the time zone used for time.",3,[[],["option",4]]],[11,"weekday","","Returns an integer representing the day of the week,…",3,[[]]],[11,"is_sunday","","Returns true if time represents Sunday.",3,[[]]],[11,"is_monday","","Returns true if time represents Monday.",3,[[]]],[11,"is_tuesday","","Returns true if time represents Tuesday.",3,[[]]],[11,"is_wednesday","","Returns true if time represents Wednesday.",3,[[]]],[11,"is_thursday","","Returns true if time represents Thursday.",3,[[]]],[11,"is_friday","","Returns true if time represents Friday.",3,[[]]],[11,"is_saturday","","Returns true if time represents Saturday.",3,[[]]],[11,"to_float","","Returns the value of time as a floating point number of…",3,[[]]],[11,"to_int","","Returns the value of time as an integer number of seconds…",3,[[]]],[11,"to_a","","Serialize a `Time` into its components as a [`ToA`].",3,[[],["toa",3]]],[18,"ELEMENTS","","`ToA` represents ten-element array of values for time:",1,null],[11,"to_tuple","","A ten-element array of values for time:",1,[[]]]],"p":[[4,"Offset"],[3,"ToA"],[4,"ComponentOutOfRangeError"],[3,"Time"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[6,"HammingResult","","",null,null],[5,"hamming","","Calculates the number of positions in the two strings…",null,[[],["hammingresult",6]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",null,[[]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",null,[[]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",null,[[]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein algorithm…",null,[[]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",null,[[]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",null,[[]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the Damerau–Levenshtein…",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["strsimerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"StrSimError"]]},\
"structopt":{"doc":"This crate defines the `StructOpt` trait and its custom…","i":[[8,"StructOpt","structopt","A struct that is converted from command line arguments.",null,null],[10,"clap","","Returns [`clap::App`] corresponding to the struct.",0,[[],["app",3]]],[10,"from_clap","","Builds the struct from [`clap::ArgMatches`]. It\'s…",0,[[["argmatches",3]]]],[11,"from_args","","Builds the struct from the command line arguments…",0,[[]]],[11,"from_args_safe","","Builds the struct from the command line arguments…",0,[[],[["error",3],["result",4]]]],[11,"from_iter","","Gets the struct from any iterator such as a `Vec` of your…",0,[[]]],[11,"from_iter_safe","","Gets the struct from any iterator such as a `Vec` of your…",0,[[],[["error",3],["result",4]]]]],"p":[[8,"StructOpt"]]},\
"structopt_derive":{"doc":"This crate is custom derive for `StructOpt`. It should not…","i":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",null,null]],"p":[]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","`_`",null,null],[12,"spans","","",0,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",1,null],[3,"As","","`as`",null,null],[12,"span","","",2,null],[3,"Async","","`async`",null,null],[12,"span","","",3,null],[3,"Auto","","`auto`",null,null],[12,"span","","",4,null],[3,"Await","","`await`",null,null],[12,"span","","",5,null],[3,"Become","","`become`",null,null],[12,"span","","",6,null],[3,"Box","","`box`",null,null],[12,"span","","",7,null],[3,"Break","","`break`",null,null],[12,"span","","",8,null],[3,"Const","","`const`",null,null],[12,"span","","",9,null],[3,"Continue","","`continue`",null,null],[12,"span","","",10,null],[3,"Crate","","`crate`",null,null],[12,"span","","",11,null],[3,"Default","","`default`",null,null],[12,"span","","",12,null],[3,"Do","","`do`",null,null],[12,"span","","",13,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",14,null],[3,"Else","","`else`",null,null],[12,"span","","",15,null],[3,"Enum","","`enum`",null,null],[12,"span","","",16,null],[3,"Extern","","`extern`",null,null],[12,"span","","",17,null],[3,"Final","","`final`",null,null],[12,"span","","",18,null],[3,"Fn","","`fn`",null,null],[12,"span","","",19,null],[3,"For","","`for`",null,null],[12,"span","","",20,null],[3,"If","","`if`",null,null],[12,"span","","",21,null],[3,"Impl","","`impl`",null,null],[12,"span","","",22,null],[3,"In","","`in`",null,null],[12,"span","","",23,null],[3,"Let","","`let`",null,null],[12,"span","","",24,null],[3,"Loop","","`loop`",null,null],[12,"span","","",25,null],[3,"Macro","","`macro`",null,null],[12,"span","","",26,null],[3,"Match","","`match`",null,null],[12,"span","","",27,null],[3,"Mod","","`mod`",null,null],[12,"span","","",28,null],[3,"Move","","`move`",null,null],[12,"span","","",29,null],[3,"Mut","","`mut`",null,null],[12,"span","","",30,null],[3,"Override","","`override`",null,null],[12,"span","","",31,null],[3,"Priv","","`priv`",null,null],[12,"span","","",32,null],[3,"Pub","","`pub`",null,null],[12,"span","","",33,null],[3,"Ref","","`ref`",null,null],[12,"span","","",34,null],[3,"Return","","`return`",null,null],[12,"span","","",35,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",36,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",37,null],[3,"Static","","`static`",null,null],[12,"span","","",38,null],[3,"Struct","","`struct`",null,null],[12,"span","","",39,null],[3,"Super","","`super`",null,null],[12,"span","","",40,null],[3,"Trait","","`trait`",null,null],[12,"span","","",41,null],[3,"Try","","`try`",null,null],[12,"span","","",42,null],[3,"Type","","`type`",null,null],[12,"span","","",43,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",44,null],[3,"Union","","`union`",null,null],[12,"span","","",45,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",46,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",47,null],[3,"Use","","`use`",null,null],[12,"span","","",48,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",49,null],[3,"Where","","`where`",null,null],[12,"span","","",50,null],[3,"While","","`while`",null,null],[12,"span","","",51,null],[3,"Yield","","`yield`",null,null],[12,"span","","",52,null],[3,"Add","","`+`",null,null],[12,"spans","","",53,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",54,null],[3,"And","","`&`",null,null],[12,"spans","","",55,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",56,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",57,null],[3,"At","","`@`",null,null],[12,"spans","","",58,null],[3,"Bang","","`!`",null,null],[12,"spans","","",59,null],[3,"Caret","","`^`",null,null],[12,"spans","","",60,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",61,null],[3,"Colon","","`:`",null,null],[12,"spans","","",62,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",63,null],[3,"Comma","","`,`",null,null],[12,"spans","","",64,null],[3,"Div","","`/`",null,null],[12,"spans","","",65,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",66,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",67,null],[3,"Dot","","`.`",null,null],[12,"spans","","",68,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",69,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",71,null],[3,"Eq","","`=`",null,null],[12,"spans","","",72,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",73,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",74,null],[3,"Gt","","`>`",null,null],[12,"spans","","",75,null],[3,"Le","","`<=`",null,null],[12,"spans","","",76,null],[3,"Lt","","`<`",null,null],[12,"spans","","",77,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",78,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",79,null],[3,"Or","","`|`",null,null],[12,"spans","","",80,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",81,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",82,null],[3,"Pound","","`#`",null,null],[12,"spans","","",83,null],[3,"Question","","`?`",null,null],[12,"spans","","",84,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",85,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",86,null],[3,"Rem","","`%`",null,null],[12,"spans","","",87,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",88,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",89,null],[3,"Semi","","`;`",null,null],[12,"spans","","",90,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",91,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",92,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",93,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",94,null],[3,"Star","","`*`",null,null],[12,"spans","","",95,null],[3,"Sub","","`-`",null,null],[12,"spans","","",96,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",97,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",98,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","`[...]`",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","`(...)`",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",104,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",104,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",105,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",106,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",106,[[]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",106,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",106,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",106,[[]]],[11,"insert","","Inserts an element at position `index`.",106,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",107,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",108,[[],["span",3]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",109,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",110,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse…",111,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",112,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",112,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",112,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",112,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",112,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",112,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",112,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",112,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",112,[[]]],[11,"error","","Triggers an error at the current position of the parse…",112,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",112,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",112,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",112,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",113,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",113,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",113,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",113,[[],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[11,"new","","Usually the `ParseStream::error` method will be used…",114,[[["span",3],["display",8]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",114,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",114,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of `compile_error!`.",114,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",114,[[["error",3]]]],[4,"AttrStyle","syn","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",115,null],[13,"Inner","","",115,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",116,null],[12,"style","","",116,null],[12,"bracket_token","","",116,null],[12,"path","","",116,null],[12,"tokens","","",116,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",117,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",117,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",117,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",118,null],[12,"paren_token","","",118,null],[12,"nested","","",118,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",119,null],[12,"eq_token","","",119,null],[12,"lit","","",119,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",120,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",120,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",121,null],[12,"vis","","Visibility of the field.",121,null],[12,"ident","","Name of the field, if any.",121,null],[12,"colon_token","","",121,null],[12,"ty","","Type of the field.",121,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",122,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",122,null],[13,"Unit","","Unit struct or unit variant such as `None`.",122,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",123,null],[12,"named","","",123,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",124,null],[12,"unnamed","","",124,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",125,null],[12,"ident","","Name of the variant.",125,null],[12,"fields","","Content stored in the variant.",125,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",125,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",126,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",127,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",128,null],[12,"paren_token","","",128,null],[12,"in_token","","",128,null],[12,"path","","",128,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",129,null],[13,"Crate","","A crate-level visibility: `crate`.",129,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",129,null],[13,"Inherited","","An inherited visibility, which usually means private.",129,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",130,null],[12,"pat","","",130,null],[12,"guard","","",130,null],[12,"fat_arrow_token","","",130,null],[12,"body","","",130,null],[12,"comma","","",130,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",131,null],[12,"member","","Name or index of the field.",131,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",131,null],[12,"expr","","Value of the field.",131,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",132,null],[13,"Const","","A const expression. Must be inside of a block.",132,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",133,null],[12,"colon_token","","",133,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",134,null],[12,"lt_token","","",134,null],[12,"args","","",134,null],[12,"gt_token","","",134,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",135,null],[13,"Closed","","Inclusive at the beginning and end.",135,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",136,null],[13,"Assign","","An assignment expression: `a = compute()`.",136,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",136,null],[13,"Async","","An async block: `async { ... }`.",136,null],[13,"Await","","An await expression: `fut.await`.",136,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",136,null],[13,"Block","","A blocked scope: `{ ... }`.",136,null],[13,"Box","","A box expression: `box f`.",136,null],[13,"Break","","A `break`, with an optional label to break and an optional…",136,null],[13,"Call","","A function call expression: `invoke(a, b)`.",136,null],[13,"Cast","","A cast expression: `foo as f64`.",136,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",136,null],[13,"Continue","","A `continue`, with an optional label.",136,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",136,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",136,null],[13,"Group","","An expression contained within invisible delimiters.",136,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",136,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",136,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",136,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",136,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",136,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",136,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",136,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",136,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",136,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",136,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",136,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",136,null],[13,"Repeat","","An array literal constructed from one repeated element:…",136,null],[13,"Return","","A `return`, with an optional value to be returned.",136,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",136,null],[13,"Try","","A try-expression: `expr?`.",136,null],[13,"TryBlock","","A try block: `try { ... }`.",136,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",136,null],[13,"Type","","A type ascription expression: `foo: f64`.",136,null],[13,"Unary","","A unary operation: `!x`, `*x`.",136,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",136,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",136,null],[13,"While","","A while loop: `while expr { ... }`.",136,null],[13,"Yield","","A yield expression: `yield expr`.",136,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",137,null],[12,"bracket_token","","",137,null],[12,"elems","","",137,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",138,null],[12,"left","","",138,null],[12,"eq_token","","",138,null],[12,"right","","",138,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",139,null],[12,"left","","",139,null],[12,"op","","",139,null],[12,"right","","",139,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",140,null],[12,"async_token","","",140,null],[12,"capture","","",140,null],[12,"block","","",140,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",141,null],[12,"base","","",141,null],[12,"dot_token","","",141,null],[12,"await_token","","",141,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",142,null],[12,"left","","",142,null],[12,"op","","",142,null],[12,"right","","",142,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",143,null],[12,"label","","",143,null],[12,"block","","",143,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",144,null],[12,"box_token","","",144,null],[12,"expr","","",144,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",145,null],[12,"break_token","","",145,null],[12,"label","","",145,null],[12,"expr","","",145,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",146,null],[12,"func","","",146,null],[12,"paren_token","","",146,null],[12,"args","","",146,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",147,null],[12,"expr","","",147,null],[12,"as_token","","",147,null],[12,"ty","","",147,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",148,null],[12,"asyncness","","",148,null],[12,"movability","","",148,null],[12,"capture","","",148,null],[12,"or1_token","","",148,null],[12,"inputs","","",148,null],[12,"or2_token","","",148,null],[12,"output","","",148,null],[12,"body","","",148,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",149,null],[12,"continue_token","","",149,null],[12,"label","","",149,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",150,null],[12,"base","","",150,null],[12,"dot_token","","",150,null],[12,"member","","",150,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",151,null],[12,"label","","",151,null],[12,"for_token","","",151,null],[12,"pat","","",151,null],[12,"in_token","","",151,null],[12,"expr","","",151,null],[12,"body","","",151,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",152,null],[12,"group_token","","",152,null],[12,"expr","","",152,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",153,null],[12,"if_token","","",153,null],[12,"cond","","",153,null],[12,"then_branch","","",153,null],[12,"else_branch","","",153,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",154,null],[12,"expr","","",154,null],[12,"bracket_token","","",154,null],[12,"index","","",154,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",155,null],[12,"let_token","","",155,null],[12,"pat","","",155,null],[12,"eq_token","","",155,null],[12,"expr","","",155,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",156,null],[12,"lit","","",156,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",157,null],[12,"label","","",157,null],[12,"loop_token","","",157,null],[12,"body","","",157,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[12,"attrs","","",158,null],[12,"mac","","",158,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",159,null],[12,"match_token","","",159,null],[12,"expr","","",159,null],[12,"brace_token","","",159,null],[12,"arms","","",159,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",160,null],[12,"receiver","","",160,null],[12,"dot_token","","",160,null],[12,"method","","",160,null],[12,"turbofish","","",160,null],[12,"paren_token","","",160,null],[12,"args","","",160,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",161,null],[12,"paren_token","","",161,null],[12,"expr","","",161,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",162,null],[12,"qself","","",162,null],[12,"path","","",162,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",163,null],[12,"from","","",163,null],[12,"limits","","",163,null],[12,"to","","",163,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",164,null],[12,"and_token","","",164,null],[12,"raw","","",164,null],[12,"mutability","","",164,null],[12,"expr","","",164,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",165,null],[12,"bracket_token","","",165,null],[12,"expr","","",165,null],[12,"semi_token","","",165,null],[12,"len","","",165,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",166,null],[12,"return_token","","",166,null],[12,"expr","","",166,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",167,null],[12,"path","","",167,null],[12,"brace_token","","",167,null],[12,"fields","","",167,null],[12,"dot2_token","","",167,null],[12,"rest","","",167,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",168,null],[12,"expr","","",168,null],[12,"question_token","","",168,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",169,null],[12,"try_token","","",169,null],[12,"block","","",169,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",170,null],[12,"paren_token","","",170,null],[12,"elems","","",170,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",171,null],[12,"expr","","",171,null],[12,"colon_token","","",171,null],[12,"ty","","",171,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",172,null],[12,"op","","",172,null],[12,"expr","","",172,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",173,null],[12,"unsafe_token","","",173,null],[12,"block","","",173,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",174,null],[12,"label","","",174,null],[12,"while_token","","",174,null],[12,"cond","","",174,null],[12,"body","","",174,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",175,null],[12,"yield_token","","",175,null],[12,"expr","","",175,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",176,null],[12,"span","","",176,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",177,null],[13,"Unnamed","","An unnamed field like `self.0`.",177,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",178,null],[12,"lt_token","","",178,null],[12,"lifetimes","","",178,null],[12,"gt_token","","",178,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",179,null],[12,"const_token","","",179,null],[12,"ident","","",179,null],[12,"colon_token","","",179,null],[12,"ty","","",179,null],[12,"eq_token","","",179,null],[12,"default","","",179,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",180,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",180,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",180,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",181,null],[12,"params","","",181,null],[12,"gt_token","","",181,null],[12,"where_clause","","",181,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",182,null],[12,"lifetime","","",182,null],[12,"colon_token","","",182,null],[12,"bounds","","",182,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",183,null],[12,"eq_token","","",183,null],[12,"rhs_ty","","",183,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",184,null],[12,"colon_token","","",184,null],[12,"bounds","","",184,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",185,null],[12,"bounded_ty","","The type being bounded",185,null],[12,"colon_token","","",185,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",185,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",186,null],[12,"modifier","","",186,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",186,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",186,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",187,null],[13,"Maybe","","",187,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",188,null],[12,"ident","","",188,null],[12,"colon_token","","",188,null],[12,"bounds","","",188,null],[12,"eq_token","","",188,null],[12,"default","","",188,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",189,null],[13,"Lifetime","","",189,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",190,null],[12,"predicates","","",190,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",191,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",191,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",191,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",192,null],[13,"Typed","","A function argument accepted by pattern and type.",192,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",193,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",193,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",193,null],[13,"Macro","","A macro invocation within an extern block.",193,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",193,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",194,null],[12,"vis","","",194,null],[12,"sig","","",194,null],[12,"semi_token","","",194,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",195,null],[12,"mac","","",195,null],[12,"semi_token","","",195,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",196,null],[12,"vis","","",196,null],[12,"static_token","","",196,null],[12,"mutability","","",196,null],[12,"ident","","",196,null],[12,"colon_token","","",196,null],[12,"ty","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",197,null],[12,"vis","","",197,null],[12,"type_token","","",197,null],[12,"ident","","",197,null],[12,"semi_token","","",197,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",198,null],[13,"Method","","A method within an impl block.",198,null],[13,"Type","","An associated type within an impl block.",198,null],[13,"Macro","","A macro invocation within an impl block.",198,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",198,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",199,null],[12,"vis","","",199,null],[12,"defaultness","","",199,null],[12,"const_token","","",199,null],[12,"ident","","",199,null],[12,"colon_token","","",199,null],[12,"ty","","",199,null],[12,"eq_token","","",199,null],[12,"expr","","",199,null],[12,"semi_token","","",199,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",200,null],[12,"mac","","",200,null],[12,"semi_token","","",200,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",201,null],[12,"vis","","",201,null],[12,"defaultness","","",201,null],[12,"sig","","",201,null],[12,"block","","",201,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",202,null],[12,"vis","","",202,null],[12,"defaultness","","",202,null],[12,"type_token","","",202,null],[12,"ident","","",202,null],[12,"generics","","",202,null],[12,"eq_token","","",202,null],[12,"ty","","",202,null],[12,"semi_token","","",202,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",203,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",203,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",203,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",203,null],[13,"ForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",203,null],[13,"Impl","","An impl block providing trait or associated items:…",203,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",203,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",203,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",203,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",203,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",203,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",203,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",203,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",203,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",203,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",203,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",203,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",204,null],[12,"vis","","",204,null],[12,"const_token","","",204,null],[12,"ident","","",204,null],[12,"colon_token","","",204,null],[12,"ty","","",204,null],[12,"eq_token","","",204,null],[12,"expr","","",204,null],[12,"semi_token","","",204,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",205,null],[12,"vis","","",205,null],[12,"enum_token","","",205,null],[12,"ident","","",205,null],[12,"generics","","",205,null],[12,"brace_token","","",205,null],[12,"variants","","",205,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"extern_token","","",206,null],[12,"crate_token","","",206,null],[12,"ident","","",206,null],[12,"rename","","",206,null],[12,"semi_token","","",206,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"sig","","",207,null],[12,"block","","",207,null],[3,"ItemForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",null,null],[12,"attrs","","",208,null],[12,"abi","","",208,null],[12,"brace_token","","",208,null],[12,"items","","",208,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",209,null],[12,"defaultness","","",209,null],[12,"unsafety","","",209,null],[12,"impl_token","","",209,null],[12,"generics","","",209,null],[12,"trait_","","Trait this impl implements.",209,null],[12,"self_ty","","The Self type of the impl.",209,null],[12,"brace_token","","",209,null],[12,"items","","",209,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",210,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",210,null],[12,"mac","","",210,null],[12,"semi_token","","",210,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",211,null],[12,"vis","","",211,null],[12,"macro_token","","",211,null],[12,"ident","","",211,null],[12,"rules","","",211,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",212,null],[12,"vis","","",212,null],[12,"mod_token","","",212,null],[12,"ident","","",212,null],[12,"content","","",212,null],[12,"semi","","",212,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"static_token","","",213,null],[12,"mutability","","",213,null],[12,"ident","","",213,null],[12,"colon_token","","",213,null],[12,"ty","","",213,null],[12,"eq_token","","",213,null],[12,"expr","","",213,null],[12,"semi_token","","",213,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"struct_token","","",214,null],[12,"ident","","",214,null],[12,"generics","","",214,null],[12,"fields","","",214,null],[12,"semi_token","","",214,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"unsafety","","",215,null],[12,"auto_token","","",215,null],[12,"trait_token","","",215,null],[12,"ident","","",215,null],[12,"generics","","",215,null],[12,"colon_token","","",215,null],[12,"supertraits","","",215,null],[12,"brace_token","","",215,null],[12,"items","","",215,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"trait_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"eq_token","","",216,null],[12,"bounds","","",216,null],[12,"semi_token","","",216,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"type_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"eq_token","","",217,null],[12,"ty","","",217,null],[12,"semi_token","","",217,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"union_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"fields","","",218,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"use_token","","",219,null],[12,"leading_colon","","",219,null],[12,"tree","","",219,null],[12,"semi_token","","",219,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",220,null],[12,"reference","","",220,null],[12,"mutability","","",220,null],[12,"self_token","","",220,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",221,null],[12,"asyncness","","",221,null],[12,"unsafety","","",221,null],[12,"abi","","",221,null],[12,"fn_token","","",221,null],[12,"ident","","",221,null],[12,"generics","","",221,null],[12,"paren_token","","",221,null],[12,"inputs","","",221,null],[12,"variadic","","",221,null],[12,"output","","",221,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",222,null],[13,"Method","","A trait method within the definition of a trait.",222,null],[13,"Type","","An associated type within the definition of a trait.",222,null],[13,"Macro","","A macro invocation within the definition of a trait.",222,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",222,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",223,null],[12,"const_token","","",223,null],[12,"ident","","",223,null],[12,"colon_token","","",223,null],[12,"ty","","",223,null],[12,"default","","",223,null],[12,"semi_token","","",223,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",224,null],[12,"mac","","",224,null],[12,"semi_token","","",224,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"sig","","",225,null],[12,"default","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"type_token","","",226,null],[12,"ident","","",226,null],[12,"generics","","",226,null],[12,"colon_token","","",226,null],[12,"bounds","","",226,null],[12,"default","","",226,null],[12,"semi_token","","",226,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",227,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",228,null],[12,"items","","",228,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",229,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",230,null],[12,"colon2_token","","",230,null],[12,"tree","","",230,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",231,null],[12,"as_token","","",231,null],[12,"rename","","",231,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",232,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",232,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",232,null],[13,"Glob","","A glob import in a `use` item: `*`.",232,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",232,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",233,null],[12,"attrs","","",233,null],[12,"items","","",233,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",234,null],[12,"ident","","",234,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",235,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",235,null],[13,"Byte","","A byte literal: `b\'f\'`.",235,null],[13,"Char","","A character literal: `\'a\'`.",235,null],[13,"Int","","An integer literal: `1` or `1u16`.",235,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",235,null],[13,"Bool","","A boolean literal: `true` or `false`.",235,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",235,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",236,null],[12,"span","","",236,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",237,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",237,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",238,null],[12,"bang_token","","",238,null],[12,"delimiter","","",238,null],[12,"tokens","","",238,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",239,null],[13,"Brace","","",239,null],[13,"Bracket","","",239,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",240,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",240,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",240,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",241,null],[12,"brace_token","","",241,null],[12,"variants","","",241,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",242,null],[12,"fields","","",242,null],[12,"semi_token","","",242,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",243,null],[12,"fields","","",243,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",244,null],[12,"vis","","Visibility of the struct or enum.",244,null],[12,"ident","","Name of the struct or enum.",244,null],[12,"generics","","Generics required to complete the definition.",244,null],[12,"data","","Data within the struct or enum.",244,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",245,null],[13,"Sub","","The `-` operator (subtraction)",245,null],[13,"Mul","","The `*` operator (multiplication)",245,null],[13,"Div","","The `/` operator (division)",245,null],[13,"Rem","","The `%` operator (modulus)",245,null],[13,"And","","The `&&` operator (logical and)",245,null],[13,"Or","","The `||` operator (logical or)",245,null],[13,"BitXor","","The `^` operator (bitwise xor)",245,null],[13,"BitAnd","","The `&` operator (bitwise and)",245,null],[13,"BitOr","","The `|` operator (bitwise or)",245,null],[13,"Shl","","The `<<` operator (shift left)",245,null],[13,"Shr","","The `>>` operator (shift right)",245,null],[13,"Eq","","The `==` operator (equality)",245,null],[13,"Lt","","The `<` operator (less than)",245,null],[13,"Le","","The `<=` operator (less than or equal to)",245,null],[13,"Ne","","The `!=` operator (not equal to)",245,null],[13,"Ge","","The `>=` operator (greater than or equal to)",245,null],[13,"Gt","","The `>` operator (greater than)",245,null],[13,"AddEq","","The `+=` operator",245,null],[13,"SubEq","","The `-=` operator",245,null],[13,"MulEq","","The `*=` operator",245,null],[13,"DivEq","","The `/=` operator",245,null],[13,"RemEq","","The `%=` operator",245,null],[13,"BitXorEq","","The `^=` operator",245,null],[13,"BitAndEq","","The `&=` operator",245,null],[13,"BitOrEq","","The `|=` operator",245,null],[13,"ShlEq","","The `<<=` operator",245,null],[13,"ShrEq","","The `>>=` operator",245,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",246,null],[13,"Not","","The `!` operator for logical inversion",246,null],[13,"Neg","","The `-` operator for negation",246,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",247,null],[12,"stmts","","Statements in a block",247,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",248,null],[12,"let_token","","",248,null],[12,"pat","","",248,null],[12,"init","","",248,null],[12,"semi_token","","",248,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",249,null],[13,"Item","","An item definition.",249,null],[13,"Expr","","Expr without trailing semicolon.",249,null],[13,"Semi","","Expression with trailing semicolon.",249,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",250,null],[12,"name","","",250,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",251,null],[12,"name","","",251,null],[12,"ty","","",251,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",252,null],[13,"Type","","A particular type is returned.",252,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",253,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",253,null],[13,"Group","","A type contained within invisible delimiters.",253,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",253,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",253,null],[13,"Macro","","A macro in the type position.",253,null],[13,"Never","","The never type: `!`.",253,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",253,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",253,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",253,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",253,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",253,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",253,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",253,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",253,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",254,null],[12,"elem","","",254,null],[12,"semi_token","","",254,null],[12,"len","","",254,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",255,null],[12,"unsafety","","",255,null],[12,"abi","","",255,null],[12,"fn_token","","",255,null],[12,"paren_token","","",255,null],[12,"inputs","","",255,null],[12,"variadic","","",255,null],[12,"output","","",255,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",256,null],[12,"elem","","",256,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",257,null],[12,"bounds","","",257,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",258,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",259,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",260,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",261,null],[12,"elem","","",261,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",262,null],[12,"path","","",262,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",263,null],[12,"const_token","","",263,null],[12,"mutability","","",263,null],[12,"elem","","",263,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",264,null],[12,"lifetime","","",264,null],[12,"mutability","","",264,null],[12,"elem","","",264,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",265,null],[12,"elem","","",265,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",266,null],[12,"bounds","","",266,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",267,null],[12,"elems","","",267,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",268,null],[12,"dots","","",268,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",269,null],[12,"member","","",269,null],[12,"colon_token","","",269,null],[12,"pat","","",269,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",270,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",270,null],[13,"Lit","","A literal pattern: `0`.",270,null],[13,"Macro","","A macro in pattern position.",270,null],[13,"Or","","A pattern that matches any one of a set of cases.",270,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",270,null],[13,"Range","","A range pattern: `1..=2`.",270,null],[13,"Reference","","A reference pattern: `&mut var`.",270,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",270,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",270,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",270,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",270,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",270,null],[13,"Type","","A type ascription pattern: `foo: f64`.",270,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",270,null],[13,"Wild","","A pattern that matches any value: `_`.",270,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",271,null],[12,"box_token","","",271,null],[12,"pat","","",271,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",272,null],[12,"by_ref","","",272,null],[12,"mutability","","",272,null],[12,"ident","","",272,null],[12,"subpat","","",272,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",273,null],[12,"expr","","",273,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",274,null],[12,"mac","","",274,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",275,null],[12,"leading_vert","","",275,null],[12,"cases","","",275,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",276,null],[12,"qself","","",276,null],[12,"path","","",276,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",277,null],[12,"lo","","",277,null],[12,"limits","","",277,null],[12,"hi","","",277,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",278,null],[12,"and_token","","",278,null],[12,"mutability","","",278,null],[12,"pat","","",278,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",279,null],[12,"dot2_token","","",279,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",280,null],[12,"bracket_token","","",280,null],[12,"elems","","",280,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",281,null],[12,"path","","",281,null],[12,"brace_token","","",281,null],[12,"fields","","",281,null],[12,"dot2_token","","",281,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",282,null],[12,"paren_token","","",282,null],[12,"elems","","",282,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",283,null],[12,"path","","",283,null],[12,"pat","","",283,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",284,null],[12,"pat","","",284,null],[12,"colon_token","","",284,null],[12,"ty","","",284,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",285,null],[12,"underscore_token","","",285,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",286,null],[12,"lt_token","","",286,null],[12,"args","","",286,null],[12,"gt_token","","",286,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",287,null],[12,"eq_token","","",287,null],[12,"ty","","",287,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",288,null],[12,"colon_token","","",288,null],[12,"bounds","","",288,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",289,null],[13,"Type","","A type argument.",289,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",289,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",289,null],[13,"Const","","A const expression. Must be inside of a block.",289,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",290,null],[12,"inputs","","`(A, B)`",290,null],[12,"output","","`C`",290,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",291,null],[12,"segments","","",291,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",292,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",292,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",292,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",293,null],[12,"arguments","","",293,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",294,null],[12,"ty","","",294,null],[12,"position","","",294,null],[12,"as_token","","",294,null],[12,"gt_token","","",294,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["result",6],["file",3]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the `quote!`…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"span","","",295,[[],["span",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"to_string","","",295,[[],["string",3]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",116,[[],["span",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",296,[[],["span",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"span","","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"to_string","","",234,[[],["string",3]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"to_string","","",303,[[],["string",3]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"to_string","","",304,[[],["string",3]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"span","","",244,[[],["span",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"into_iter","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",311,[[]]],[11,"into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"eq","syn","",295,[[["ident",3]]]],[11,"eq","","",295,[[]]],[11,"cmp","","",295,[[["ident",3]],["ordering",4]]],[11,"partial_cmp","","",295,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",295,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",295,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",295,[[]]],[11,"clone","","",295,[[],["ident",3]]],[11,"span","","",295,[[],[["option",4],["span",3]]]],[11,"fmt","","",295,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_tokens","","",295,[[["tokenstream",3]]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",299,[[["cursor",3]]]],[11,"display","","",299,[[]]],[11,"peek","","",300,[[["cursor",3]]]],[11,"display","","",300,[[]]],[11,"peek","","",301,[[["cursor",3]]]],[11,"display","","",301,[[]]],[11,"peek","","",302,[[["cursor",3]]]],[11,"display","","",302,[[]]],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"peek","","",304,[[["cursor",3]]]],[11,"display","","",304,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","syn::token","",0,[[["cursor",3]]]],[11,"display","","",0,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"peek","","",1,[[["cursor",3]]]],[11,"display","","",1,[[]]],[11,"peek","","",2,[[["cursor",3]]]],[11,"display","","",2,[[]]],[11,"peek","","",3,[[["cursor",3]]]],[11,"display","","",3,[[]]],[11,"peek","","",4,[[["cursor",3]]]],[11,"display","","",4,[[]]],[11,"peek","","",5,[[["cursor",3]]]],[11,"display","","",5,[[]]],[11,"peek","","",6,[[["cursor",3]]]],[11,"display","","",6,[[]]],[11,"peek","","",7,[[["cursor",3]]]],[11,"display","","",7,[[]]],[11,"peek","","",8,[[["cursor",3]]]],[11,"display","","",8,[[]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"peek","","",10,[[["cursor",3]]]],[11,"display","","",10,[[]]],[11,"peek","","",11,[[["cursor",3]]]],[11,"display","","",11,[[]]],[11,"peek","","",12,[[["cursor",3]]]],[11,"display","","",12,[[]]],[11,"peek","","",13,[[["cursor",3]]]],[11,"display","","",13,[[]]],[11,"peek","","",14,[[["cursor",3]]]],[11,"display","","",14,[[]]],[11,"peek","","",15,[[["cursor",3]]]],[11,"display","","",15,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"peek","","",19,[[["cursor",3]]]],[11,"display","","",19,[[]]],[11,"peek","","",20,[[["cursor",3]]]],[11,"display","","",20,[[]]],[11,"peek","","",21,[[["cursor",3]]]],[11,"display","","",21,[[]]],[11,"peek","","",22,[[["cursor",3]]]],[11,"display","","",22,[[]]],[11,"peek","","",23,[[["cursor",3]]]],[11,"display","","",23,[[]]],[11,"peek","","",24,[[["cursor",3]]]],[11,"display","","",24,[[]]],[11,"peek","","",25,[[["cursor",3]]]],[11,"display","","",25,[[]]],[11,"peek","","",26,[[["cursor",3]]]],[11,"display","","",26,[[]]],[11,"peek","","",27,[[["cursor",3]]]],[11,"display","","",27,[[]]],[11,"peek","","",28,[[["cursor",3]]]],[11,"display","","",28,[[]]],[11,"peek","","",29,[[["cursor",3]]]],[11,"display","","",29,[[]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"peek","","",32,[[["cursor",3]]]],[11,"display","","",32,[[]]],[11,"peek","","",33,[[["cursor",3]]]],[11,"display","","",33,[[]]],[11,"peek","","",34,[[["cursor",3]]]],[11,"display","","",34,[[]]],[11,"peek","","",35,[[["cursor",3]]]],[11,"display","","",35,[[]]],[11,"peek","","",36,[[["cursor",3]]]],[11,"display","","",36,[[]]],[11,"peek","","",37,[[["cursor",3]]]],[11,"display","","",37,[[]]],[11,"peek","","",38,[[["cursor",3]]]],[11,"display","","",38,[[]]],[11,"peek","","",39,[[["cursor",3]]]],[11,"display","","",39,[[]]],[11,"peek","","",40,[[["cursor",3]]]],[11,"display","","",40,[[]]],[11,"peek","","",41,[[["cursor",3]]]],[11,"display","","",41,[[]]],[11,"peek","","",42,[[["cursor",3]]]],[11,"display","","",42,[[]]],[11,"peek","","",43,[[["cursor",3]]]],[11,"display","","",43,[[]]],[11,"peek","","",44,[[["cursor",3]]]],[11,"display","","",44,[[]]],[11,"peek","","",45,[[["cursor",3]]]],[11,"display","","",45,[[]]],[11,"peek","","",46,[[["cursor",3]]]],[11,"display","","",46,[[]]],[11,"peek","","",47,[[["cursor",3]]]],[11,"display","","",47,[[]]],[11,"peek","","",48,[[["cursor",3]]]],[11,"display","","",48,[[]]],[11,"peek","","",49,[[["cursor",3]]]],[11,"display","","",49,[[]]],[11,"peek","","",50,[[["cursor",3]]]],[11,"display","","",50,[[]]],[11,"peek","","",51,[[["cursor",3]]]],[11,"display","","",51,[[]]],[11,"peek","","",52,[[["cursor",3]]]],[11,"display","","",52,[[]]],[11,"peek","","",53,[[["cursor",3]]]],[11,"display","","",53,[[]]],[11,"peek","","",54,[[["cursor",3]]]],[11,"display","","",54,[[]]],[11,"peek","","",55,[[["cursor",3]]]],[11,"display","","",55,[[]]],[11,"peek","","",56,[[["cursor",3]]]],[11,"display","","",56,[[]]],[11,"peek","","",57,[[["cursor",3]]]],[11,"display","","",57,[[]]],[11,"peek","","",58,[[["cursor",3]]]],[11,"display","","",58,[[]]],[11,"peek","","",59,[[["cursor",3]]]],[11,"display","","",59,[[]]],[11,"peek","","",60,[[["cursor",3]]]],[11,"display","","",60,[[]]],[11,"peek","","",61,[[["cursor",3]]]],[11,"display","","",61,[[]]],[11,"peek","","",62,[[["cursor",3]]]],[11,"display","","",62,[[]]],[11,"peek","","",63,[[["cursor",3]]]],[11,"display","","",63,[[]]],[11,"peek","","",64,[[["cursor",3]]]],[11,"display","","",64,[[]]],[11,"peek","","",65,[[["cursor",3]]]],[11,"display","","",65,[[]]],[11,"peek","","",66,[[["cursor",3]]]],[11,"display","","",66,[[]]],[11,"peek","","",67,[[["cursor",3]]]],[11,"display","","",67,[[]]],[11,"peek","","",68,[[["cursor",3]]]],[11,"display","","",68,[[]]],[11,"peek","","",69,[[["cursor",3]]]],[11,"display","","",69,[[]]],[11,"peek","","",70,[[["cursor",3]]]],[11,"display","","",70,[[]]],[11,"peek","","",71,[[["cursor",3]]]],[11,"display","","",71,[[]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"peek","","",73,[[["cursor",3]]]],[11,"display","","",73,[[]]],[11,"peek","","",74,[[["cursor",3]]]],[11,"display","","",74,[[]]],[11,"peek","","",75,[[["cursor",3]]]],[11,"display","","",75,[[]]],[11,"peek","","",76,[[["cursor",3]]]],[11,"display","","",76,[[]]],[11,"peek","","",77,[[["cursor",3]]]],[11,"display","","",77,[[]]],[11,"peek","","",78,[[["cursor",3]]]],[11,"display","","",78,[[]]],[11,"peek","","",79,[[["cursor",3]]]],[11,"display","","",79,[[]]],[11,"peek","","",80,[[["cursor",3]]]],[11,"display","","",80,[[]]],[11,"peek","","",81,[[["cursor",3]]]],[11,"display","","",81,[[]]],[11,"peek","","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"peek","syn","",295,[[["cursor",3]]]],[11,"display","","",295,[[]]],[11,"parse_any","","",295,[[["parsestream",6]],["result",6]]],[11,"unraw","","",295,[[],["ident",3]]],[11,"advance_to","syn::parse","",112,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",295,[[["parsestream",6]],["result",6]]],[11,"parse","","",117,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",123,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",129,[[["parsestream",6]],["result",6]]],[11,"parse","","",136,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",133,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",135,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],[["result",6],["arm",3]]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",232,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",299,[[["parsestream",6]],["result",6]]],[11,"parse","","",300,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",244,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",270,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",286,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","","",293,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",312,[[["parsestream",6]],["result",6]]],[11,"drop","","",112,[[]]],[11,"from","syn","",295,[[["selfvalue",3]],["ident",3]]],[11,"from","","",295,[[["selftype",3]],["ident",3]]],[11,"from","","",295,[[["super",3]],["ident",3]]],[11,"from","","",295,[[["crate",3]],["ident",3]]],[11,"from","","",295,[[["extern",3]],["ident",3]]],[11,"from","","",295,[[["underscore",3]],["ident",3]]],[11,"from","","",117,[[["path",3]],["meta",4]]],[11,"from","","",117,[[["metalist",3]],["meta",4]]],[11,"from","","",117,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",120,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",120,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",122,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",122,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",129,[[["vispublic",3]],["visibility",4]]],[11,"from","","",129,[[["viscrate",3]],["visibility",4]]],[11,"from","","",129,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",136,[[["exprarray",3]],["expr",4]]],[11,"from","","",136,[[["exprassign",3]],["expr",4]]],[11,"from","","",136,[[["exprassignop",3]],["expr",4]]],[11,"from","","",136,[[["exprasync",3]],["expr",4]]],[11,"from","","",136,[[["exprawait",3]],["expr",4]]],[11,"from","","",136,[[["exprbinary",3]],["expr",4]]],[11,"from","","",136,[[["exprblock",3]],["expr",4]]],[11,"from","","",136,[[["exprbox",3]],["expr",4]]],[11,"from","","",136,[[["exprbreak",3]],["expr",4]]],[11,"from","","",136,[[["exprcall",3]],["expr",4]]],[11,"from","","",136,[[["exprcast",3]],["expr",4]]],[11,"from","","",136,[[["exprclosure",3]],["expr",4]]],[11,"from","","",136,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",136,[[["exprfield",3]],["expr",4]]],[11,"from","","",136,[[["exprforloop",3]],["expr",4]]],[11,"from","","",136,[[["exprgroup",3]],["expr",4]]],[11,"from","","",136,[[["exprif",3]],["expr",4]]],[11,"from","","",136,[[["exprindex",3]],["expr",4]]],[11,"from","","",136,[[["exprlet",3]],["expr",4]]],[11,"from","","",136,[[["exprlit",3]],["expr",4]]],[11,"from","","",136,[[["exprloop",3]],["expr",4]]],[11,"from","","",136,[[["exprmacro",3]],["expr",4]]],[11,"from","","",136,[[["exprmatch",3]],["expr",4]]],[11,"from","","",136,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",136,[[["exprparen",3]],["expr",4]]],[11,"from","","",136,[[["exprpath",3]],["expr",4]]],[11,"from","","",136,[[["exprrange",3]],["expr",4]]],[11,"from","","",136,[[["exprreference",3]],["expr",4]]],[11,"from","","",136,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",136,[[["exprreturn",3]],["expr",4]]],[11,"from","","",136,[[["exprstruct",3]],["expr",4]]],[11,"from","","",136,[[["exprtry",3]],["expr",4]]],[11,"from","","",136,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",136,[[["exprtuple",3]],["expr",4]]],[11,"from","","",136,[[["exprtype",3]],["expr",4]]],[11,"from","","",136,[[["exprunary",3]],["expr",4]]],[11,"from","","",136,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",136,[[["exprwhile",3]],["expr",4]]],[11,"from","","",136,[[["expryield",3]],["expr",4]]],[11,"from","","",176,[[],["index",3]]],[11,"from","","",180,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",180,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",180,[[["constparam",3]],["genericparam",4]]],[11,"from","","",188,[[["ident",3]]]],[11,"from","","",189,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",189,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",191,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",191,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",191,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",203,[[["itemconst",3]],["item",4]]],[11,"from","","",203,[[["itemenum",3]],["item",4]]],[11,"from","","",203,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",203,[[["itemfn",3]],["item",4]]],[11,"from","","",203,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",203,[[["itemimpl",3]],["item",4]]],[11,"from","","",203,[[["itemmacro",3]],["item",4]]],[11,"from","","",203,[[["itemmacro2",3]],["item",4]]],[11,"from","","",203,[[["itemmod",3]],["item",4]]],[11,"from","","",203,[[["itemstatic",3]],["item",4]]],[11,"from","","",203,[[["itemstruct",3]],["item",4]]],[11,"from","","",203,[[["itemtrait",3]],["item",4]]],[11,"from","","",203,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",203,[[["itemtype",3]],["item",4]]],[11,"from","","",203,[[["itemunion",3]],["item",4]]],[11,"from","","",203,[[["itemuse",3]],["item",4]]],[11,"from","","",203,[[["deriveinput",3]],["item",4]]],[11,"from","","",244,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",244,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",244,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",232,[[["usepath",3]],["usetree",4]]],[11,"from","","",232,[[["usename",3]],["usetree",4]]],[11,"from","","",232,[[["userename",3]],["usetree",4]]],[11,"from","","",232,[[["useglob",3]],["usetree",4]]],[11,"from","","",232,[[["usegroup",3]],["usetree",4]]],[11,"from","","",193,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",193,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",193,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",193,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",222,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",222,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",222,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",222,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",198,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",198,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",198,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",198,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",192,[[["receiver",3]],["fnarg",4]]],[11,"from","","",192,[[["pattype",3]],["fnarg",4]]],[11,"from","","",235,[[["litstr",3]],["lit",4]]],[11,"from","","",235,[[["litbytestr",3]],["lit",4]]],[11,"from","","",235,[[["litbyte",3]],["lit",4]]],[11,"from","","",235,[[["litchar",3]],["lit",4]]],[11,"from","","",235,[[["litint",3]],["lit",4]]],[11,"from","","",235,[[["litfloat",3]],["lit",4]]],[11,"from","","",235,[[["litbool",3]],["lit",4]]],[11,"from","","",303,[[["literal",3]]]],[11,"from","","",304,[[["literal",3]]]],[11,"from","","",240,[[["datastruct",3]],["data",4]]],[11,"from","","",240,[[["dataenum",3]],["data",4]]],[11,"from","","",240,[[["dataunion",3]],["data",4]]],[11,"from","","",253,[[["typearray",3]],["type",4]]],[11,"from","","",253,[[["typebarefn",3]],["type",4]]],[11,"from","","",253,[[["typegroup",3]],["type",4]]],[11,"from","","",253,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",253,[[["typeinfer",3]],["type",4]]],[11,"from","","",253,[[["typemacro",3]],["type",4]]],[11,"from","","",253,[[["typenever",3]],["type",4]]],[11,"from","","",253,[[["typeparen",3]],["type",4]]],[11,"from","","",253,[[["typepath",3]],["type",4]]],[11,"from","","",253,[[["typeptr",3]],["type",4]]],[11,"from","","",253,[[["typereference",3]],["type",4]]],[11,"from","","",253,[[["typeslice",3]],["type",4]]],[11,"from","","",253,[[["typetraitobject",3]],["type",4]]],[11,"from","","",253,[[["typetuple",3]],["type",4]]],[11,"from","","",270,[[["patbox",3]],["pat",4]]],[11,"from","","",270,[[["patident",3]],["pat",4]]],[11,"from","","",270,[[["patlit",3]],["pat",4]]],[11,"from","","",270,[[["patmacro",3]],["pat",4]]],[11,"from","","",270,[[["pator",3]],["pat",4]]],[11,"from","","",270,[[["patpath",3]],["pat",4]]],[11,"from","","",270,[[["patrange",3]],["pat",4]]],[11,"from","","",270,[[["patreference",3]],["pat",4]]],[11,"from","","",270,[[["patrest",3]],["pat",4]]],[11,"from","","",270,[[["patslice",3]],["pat",4]]],[11,"from","","",270,[[["patstruct",3]],["pat",4]]],[11,"from","","",270,[[["pattuple",3]],["pat",4]]],[11,"from","","",270,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",270,[[["pattype",3]],["pat",4]]],[11,"from","","",270,[[["patwild",3]],["pat",4]]],[11,"from","","",291,[[]]],[11,"from","","",293,[[]]],[11,"from","syn::parse","",114,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",305,[[],["option",4]]],[11,"next_back","","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"len","","",305,[[]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",114,[[["intoiterator",8]]]],[11,"into_iter","syn","",122,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",114,[[]]],[11,"next","syn::punctuated","",305,[[],["option",4]]],[11,"size_hint","","",305,[[]]],[11,"next","","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",296,[[]]],[11,"clone","","",297,[[]]],[11,"clone","","",298,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",307,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",250,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",115,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","syn::parse","",111,[[]]],[11,"clone","","",114,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",181,[[]]],[11,"default","","",178,[[]]],[11,"default","","",292,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",234,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",177,[[]]],[11,"eq","","",176,[[]]],[11,"eq","","",234,[[["lifetime",3]]]],[11,"eq","syn::buffer","",104,[[]]],[11,"partial_cmp","syn","",234,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",111,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",303,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[]]],[11,"index_mut","","",106,[[]]],[11,"hash","syn","",177,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",234,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"description","syn::parse","",114,[[]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",116,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",296,[[["tokenstream",3]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",244,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",177,[[["formatter",3]],["result",6]]],[11,"span","","",177,[[],[["option",4],["span",3]]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"span","","",176,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",295,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",295,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",295,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the…",116,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",116,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",116,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",116,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",116,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"path","","Returns the identifier that begins this structured meta…",117,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",121,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",121,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",122,[[],[["field",3],["iter",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",122,[[],[["field",3],["itermut",3]]]],[11,"len","","Returns the number of fields.",122,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",122,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary `Expr::parse` parser (from…",136,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",181,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",181,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",181,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",181,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",181,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",181,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",181,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",181,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",297,[[],["turbofish",3]]],[11,"new","","",182,[[["lifetime",3]]]],[11,"receiver","","A method\'s `self` receiver, such as `&self` or `self:…",221,[[],[["fnarg",4],["option",4]]]],[11,"lifetime","","",220,[[],[["option",4],["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the…",234,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",235,[[["literal",3]]]],[11,"suffix","","",235,[[]]],[11,"span","","",235,[[],["span",3]]],[11,"set_span","","",235,[[["span",3]]]],[11,"new","","",299,[[["span",3]]]],[11,"value","","",299,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",299,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",299,[[["parser",8]],["result",6]]],[11,"span","","",299,[[],["span",3]]],[11,"set_span","","",299,[[["span",3]]]],[11,"suffix","","",299,[[]]],[11,"new","","",300,[[["span",3]]]],[11,"value","","",300,[[],["vec",3]]],[11,"span","","",300,[[],["span",3]]],[11,"set_span","","",300,[[["span",3]]]],[11,"suffix","","",300,[[]]],[11,"new","","",301,[[["span",3]]]],[11,"value","","",301,[[]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[]]],[11,"new","","",303,[[["span",3]]]],[11,"base10_digits","","",303,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",303,[[],["result",6]]],[11,"suffix","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"new","","",304,[[["span",3]]]],[11,"base10_digits","","",304,[[]]],[11,"base10_parse","","",304,[[],["result",6]]],[11,"suffix","","",304,[[]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",238,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",238,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",247,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",253,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",252,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",266,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",291,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",291,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",291,[[],[["ident",3],["option",4]]]],[11,"is_empty","","",292,[[]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",311,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",311,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for…","i":[[8,"WriteColor","termcolor","This trait describes the behavior of writers that support…",null,null],[10,"supports_color","","Returns true if and only if the underlying writer supports…",0,[[]]],[10,"set_color","","Set the color settings of the writer.",0,[[["colorspec",3]],["result",6]]],[10,"reset","","Reset the current color settings to their original settings.",0,[[],["result",6]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must…",0,[[]]],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",1,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",1,null],[13,"Auto","","Try to use colors, but don\'t force the issue. If the…",1,null],[13,"Never","","Never emit colors.",1,null],[3,"StandardStream","","Satisfies `io::Write` and `WriteColor`, and supports…",null,null],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",null,null],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",null,null],[11,"stdout","","Create a new `StandardStream` with the given color…",2,[[["colorchoice",4]],["standardstream",3]]],[11,"stderr","","Create a new `StandardStream` with the given color…",2,[[["colorchoice",4]],["standardstream",3]]],[11,"lock","","Lock the underlying writer.",2,[[],["standardstreamlock",3]]],[11,"stdout","","Create a new `BufferedStandardStream` with the given color…",3,[[["colorchoice",4]],["bufferedstandardstream",3]]],[11,"stderr","","Create a new `BufferedStandardStream` with the given color…",3,[[["colorchoice",4]],["bufferedstandardstream",3]]],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",4,[[["colorchoice",4]],["bufferwriter",3]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",4,[[["colorchoice",4]],["bufferwriter",3]]],[11,"separator","","If set, the separator given is printed between buffers. By…",4,[[["option",4],["vec",3]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",4,[[],["buffer",3]]],[11,"print","","Prints the contents of the given buffer.",4,[[["buffer",3]],["result",6]]],[3,"Buffer","","Write colored text to memory.",null,null],[11,"no_color","","Create a buffer that drops all color information.",5,[[],["buffer",3]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",5,[[],["buffer",3]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",5,[[]]],[11,"len","","Returns the length of this buffer in bytes.",5,[[]]],[11,"clear","","Clears this buffer.",5,[[]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",5,[[],["vec",3]]],[11,"as_slice","","Return the underlying data of the buffer.",5,[[]]],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",5,[[]]],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",null,null],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",6,[[],["nocolor",3]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",6,[[]]],[11,"get_ref","","Return a reference to the inner writer.",6,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",6,[[]]],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",null,null],[11,"new","","Create a new writer that satisfies `WriteColor` using…",7,[[],["ansi",3]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",7,[[]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[]]],[3,"ColorSpec","","A color specification.",null,null],[11,"new","","Create a new color specification that has no colors or…",8,[[],["colorspec",3]]],[11,"fg","","Get the foreground color.",8,[[],[["color",4],["option",4]]]],[11,"set_fg","","Set the foreground color.",8,[[["color",4],["option",4]],["colorspec",3]]],[11,"bg","","Get the background color.",8,[[],[["color",4],["option",4]]]],[11,"set_bg","","Set the background color.",8,[[["color",4],["option",4]],["colorspec",3]]],[11,"bold","","Get whether this is bold or not.",8,[[]]],[11,"set_bold","","Set whether the text is bolded or not.",8,[[],["colorspec",3]]],[11,"dimmed","","Get whether this is dimmed or not.",8,[[]]],[11,"set_dimmed","","Set whether the text is dimmed or not.",8,[[],["colorspec",3]]],[11,"italic","","Get whether this is italic or not.",8,[[]]],[11,"set_italic","","Set whether the text is italicized or not.",8,[[],["colorspec",3]]],[11,"underline","","Get whether this is underline or not.",8,[[]]],[11,"set_underline","","Set whether the text is underlined or not.",8,[[],["colorspec",3]]],[11,"reset","","Get whether reset is enabled or not.",8,[[]]],[11,"set_reset","","Set whether to reset the terminal whenever color settings…",8,[[],["colorspec",3]]],[11,"intense","","Get whether this is intense or not.",8,[[]]],[11,"set_intense","","Set whether the text is intense or not.",8,[[],["colorspec",3]]],[11,"is_none","","Returns true if this color specification has no colors or…",8,[[]]],[11,"clear","","Clears this color specification so that it has no…",8,[[]]],[4,"Color","","The set of available colors for the terminal…",null,null],[13,"Black","","",9,null],[13,"Blue","","",9,null],[13,"Green","","",9,null],[13,"Red","","",9,null],[13,"Cyan","","",9,null],[13,"Magenta","","",9,null],[13,"Yellow","","",9,null],[13,"White","","",9,null],[13,"Ansi256","","",9,null],[13,"Rgb","","",9,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[11,"invalid","","Return the string that couldn\'t be parsed as a valid color.",10,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"supports_color","","",2,[[]]],[11,"set_color","","",2,[[["colorspec",3]],["result",6]]],[11,"reset","","",2,[[],["result",6]]],[11,"is_synchronous","","",2,[[]]],[11,"supports_color","","",11,[[]]],[11,"set_color","","",11,[[["colorspec",3]],["result",6]]],[11,"reset","","",11,[[],["result",6]]],[11,"is_synchronous","","",11,[[]]],[11,"supports_color","","",3,[[]]],[11,"set_color","","",3,[[["colorspec",3]],["result",6]]],[11,"reset","","",3,[[],["result",6]]],[11,"is_synchronous","","",3,[[]]],[11,"supports_color","","",5,[[]]],[11,"set_color","","",5,[[["colorspec",3]],["result",6]]],[11,"reset","","",5,[[],["result",6]]],[11,"is_synchronous","","",5,[[]]],[11,"supports_color","","",6,[[]]],[11,"set_color","","",6,[[["colorspec",3]],["result",6]]],[11,"reset","","",6,[[],["result",6]]],[11,"is_synchronous","","",6,[[]]],[11,"supports_color","","",7,[[]]],[11,"set_color","","",7,[[["colorspec",3]],["result",6]]],[11,"reset","","",7,[[],["result",6]]],[11,"is_synchronous","","",7,[[]]],[11,"clone","","",1,[[],["colorchoice",4]]],[11,"clone","","",8,[[],["colorspec",3]]],[11,"clone","","",9,[[],["color",4]]],[11,"clone","","",10,[[],["parsecolorerror",3]]],[11,"default","","",8,[[],["colorspec",3]]],[11,"eq","","",1,[[["colorchoice",4]]]],[11,"eq","","",8,[[["colorspec",3]]]],[11,"ne","","",8,[[["colorspec",3]]]],[11,"eq","","",9,[[["color",4]]]],[11,"ne","","",9,[[["color",4]]]],[11,"eq","","",10,[[["parsecolorerror",3]]]],[11,"ne","","",10,[[["parsecolorerror",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"from_str","","",9,[[],[["color",4],["parsecolorerror",3],["result",4]]]],[11,"description","","",10,[[]]],[11,"write","","",2,[[],["result",6]]],[11,"flush","","",2,[[],["result",6]]],[11,"write","","",11,[[],["result",6]]],[11,"flush","","",11,[[],["result",6]]],[11,"write","","",3,[[],["result",6]]],[11,"flush","","",3,[[],["result",6]]],[11,"write","","",5,[[],["result",6]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]],[11,"write","","",7,[[],["result",6]]],[11,"flush","","",7,[[],["result",6]]]],"p":[[8,"WriteColor"],[4,"ColorChoice"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[4,"Color"],[3,"ParseColorError"],[3,"StandardStreamLock"]]},\
"textwrap":{"doc":"`textwrap` provides functions for word wrapping and…","i":[[5,"dedent","textwrap","Removes common leading whitespace from each line.",null,[[],["string",3]]],[5,"indent","","Add prefix to each non-empty line.",null,[[],["string",3]]],[3,"HyphenSplitter","","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a `Wrapper.splitter` to avoid any kind of…",null,null],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",0,[[],["vec",3]]],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",1,null],[12,"initial_indent","","Indentation used for the first line of output.",1,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",1,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",1,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",1,null],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",1,[[],[["wrapper",3],["hyphensplitter",3]]]],[11,"with_splitter","","Use the given `WordSplitter` to create a new Wrapper for…",1,[[],["wrapper",3]]],[11,"initial_indent","","Change `self.initial_indent`. The initial indentation is…",1,[[],["wrapper",3]]],[11,"subsequent_indent","","Change `self.subsequent_indent`. The subsequent…",1,[[],["wrapper",3]]],[11,"break_words","","Change `self.break_words`. This controls if words longer…",1,[[],["wrapper",3]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",1,[[],["string",3]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",1,[[],[["vec",3],["cow",4]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",1,[[],["wrapiter",3]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",1,[[],["intowrapiter",3]]],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[],["string",3]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[],[["cow",4],["vec",3]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[],[["intowrapiter",3],["hyphensplitter",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"split","","",2,[[],["vec",3]]],[11,"split","","",3,[[],["vec",3]]],[11,"next","","",4,[[],[["option",4],["cow",4]]]],[11,"next","","",5,[[],[["option",4],["cow",4]]]],[11,"clone","","",2,[[],["nohyphenation",3]]],[11,"clone","","",3,[[],["hyphensplitter",3]]],[11,"clone","","",1,[[],["wrapper",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[8,"WordSplitter"],[3,"Wrapper"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"thread_local":{"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a `CachedThreadLocal`.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[],["itermut",3]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",0,[[]]],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"into_iter","","",1,[[],["cachedintoiter",3]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"default","","",1,[[],["cachedthreadlocal",3]]],[11,"default","","",0,[[],["threadlocal",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[],["cacheditermut",3]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",1,[[]]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"CachedIterMut"],[3,"CachedIntoIter"],[3,"IterMut"],[3,"IntoIter"]]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,"Graphemes","unicode_segmentation","External iterator for a string\'s grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",null,null],[13,"PreContext","","More pre-context is needed. The caller should call…",0,null],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,null],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,null],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",null,null],[3,"UWordBounds","","External iterator for a string\'s word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",null,null],[3,"USentenceBounds","","External iterator for a string\'s sentence boundaries.",null,null],[3,"USentenceBoundIndices","","External iterator for sentence boundaries and byte offsets.",null,null],[3,"UnicodeSentences","","An iterator over the substrings of a string which, after…",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",null,null],[10,"graphemes","","Returns an iterator over the grapheme clusters of `self`.",1,[[],["graphemes",3]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",1,[[],["graphemeindices",3]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",1,[[],["unicodewords",3]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",1,[[],["uwordbounds",3]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",1,[[],["uwordboundindices",3]]],[10,"unicode_sentences","","Returns an iterator over substrings of `self` separated on…",1,[[],["unicodesentences",3]]],[10,"split_sentence_bounds","","Returns an iterator over substrings of `self` separated on…",1,[[],["usentencebounds",3]]],[10,"split_sentence_bound_indices","","Returns an iterator over substrings of `self`, split on…",1,[[],["usentenceboundindices",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["graphemeincomplete",4]]]],[11,"ne","","",0,[[["graphemeincomplete",4]]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"size_hint","","",3,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",5,[[],["option",4]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"size_hint","","",6,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"clone","","",2,[[],["graphemeindices",3]]],[11,"clone","","",3,[[],["graphemes",3]]],[11,"clone","","",4,[[],["graphemecursor",3]]],[11,"clone","","",6,[[],["uwordbounds",3]]],[11,"clone","","",7,[[],["uwordboundindices",3]]],[11,"clone","","",8,[[],["unicodesentences",3]]],[11,"clone","","",9,[[],["usentencebounds",3]]],[11,"clone","","",10,[[],["usentenceboundindices",3]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",3,[[]]],[11,"new","","Create a new cursor. The string and initial offset are…",4,[[],["graphemecursor",3]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",4,[[]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",4,[[]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",4,[[]]],[11,"is_boundary","","Determine whether the current cursor location is a…",4,[[],[["result",4],["graphemeincomplete",4]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",4,[[],[["result",4],["graphemeincomplete",4],["option",4]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",4,[[],[["result",4],["graphemeincomplete",4],["option",4]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",7,[[]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",6,[[]]]],"p":[[4,"GraphemeIncomplete"],[8,"UnicodeSegmentation"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UnicodeWords"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"]]},\
"unicode_width":{"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"utf8parse":{"doc":"A table-driven UTF-8 Parser","i":[[8,"Receiver","utf8parse","Handles codepoint and invalid sequence events from the…",null,null],[10,"codepoint","","Called whenever a codepoint is parsed successfully",0,[[]]],[10,"invalid_sequence","","Called when an invalid_sequence is detected",0,[[]]],[3,"Parser","","A parser for Utf8 Characters",null,null],[11,"new","","Create a new Parser",1,[[],["parser",3]]],[11,"advance","","Advance the parser",1,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"default","","",1,[[],["parser",3]]]],"p":[[8,"Receiver"],[3,"Parser"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[11,"new","","Creates an empty `VecMap`.",1,[[]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[],["keys",3]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[],["values",3]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[],["valuesmut",3]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[],["itermut",3]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[],["drain",3]]],[11,"len","","Returns the number of elements in the map.",1,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[],["option",4]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[],["option",4]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",1,[[],["entry",4]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce",8]]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",2,[[]]],[11,"get","","Gets a reference to the value in the entry.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry\'s key,…",3,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[]]],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["intoiter",3]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",4,[[],["iter",3]]],[11,"clone","","",6,[[],["keys",3]]],[11,"clone","","",7,[[],["values",3]]],[11,"default","","",1,[[]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",1,[[]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",1,[[["intoiterator",8]]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);